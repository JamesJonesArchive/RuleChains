2013-04-30 13:45:35,146 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)] [See nested exception: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:182)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]
	at org.hibernate.impl.AbstractQueryImpl.verifyParameters(AbstractQueryImpl.java:366)
	at org.hibernate.impl.SQLQueryImpl.verifyParameters(SQLQueryImpl.java:209)
	at org.hibernate.impl.SQLQueryImpl.scroll(SQLQueryImpl.java:173)
	at org.hibernate.Query$scroll.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:171)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-04-30 13:45:35,148 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]
	at org.hibernate.impl.AbstractQueryImpl.verifyParameters(AbstractQueryImpl.java:366)
	at org.hibernate.impl.SQLQueryImpl.verifyParameters(SQLQueryImpl.java:209)
	at org.hibernate.impl.SQLQueryImpl.scroll(SQLQueryImpl.java:173)
	at org.hibernate.Query$scroll.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:171)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 13:45:35,148 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)] [See nested exception: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:171)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-04-30 13:45:35,149 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)] [See nested exception: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:171)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-04-30 13:45:35,149 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:171)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 13:45:35,149 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)] [See nested exception: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:171)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-04-30 13:46:46,032 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)] [See nested exception: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]
	at org.hibernate.impl.AbstractQueryImpl.verifyParameters(AbstractQueryImpl.java:366)
	at org.hibernate.impl.SQLQueryImpl.verifyParameters(SQLQueryImpl.java:209)
	at org.hibernate.impl.SQLQueryImpl.scroll(SQLQueryImpl.java:173)
	at org.hibernate.Query$scroll.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:171)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-04-30 13:46:46,033 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]
	at org.hibernate.impl.AbstractQueryImpl.verifyParameters(AbstractQueryImpl.java:366)
	at org.hibernate.impl.SQLQueryImpl.verifyParameters(SQLQueryImpl.java:209)
	at org.hibernate.impl.SQLQueryImpl.scroll(SQLQueryImpl.java:173)
	at org.hibernate.Query$scroll.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:171)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 13:46:46,033 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)] [See nested exception: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:171)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-04-30 13:46:46,033 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)] [See nested exception: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:171)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-04-30 13:46:46,033 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:171)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 13:46:46,033 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)] [See nested exception: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:171)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-04-30 13:52:30,133 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)] [See nested exception: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:182)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]
	at org.hibernate.impl.AbstractQueryImpl.verifyParameters(AbstractQueryImpl.java:366)
	at org.hibernate.impl.SQLQueryImpl.verifyParameters(SQLQueryImpl.java:209)
	at org.hibernate.impl.SQLQueryImpl.scroll(SQLQueryImpl.java:173)
	at org.hibernate.Query$scroll.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:171)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-04-30 13:52:30,135 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]
	at org.hibernate.impl.AbstractQueryImpl.verifyParameters(AbstractQueryImpl.java:366)
	at org.hibernate.impl.SQLQueryImpl.verifyParameters(SQLQueryImpl.java:209)
	at org.hibernate.impl.SQLQueryImpl.scroll(SQLQueryImpl.java:173)
	at org.hibernate.Query$scroll.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:171)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 13:52:30,135 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)] [See nested exception: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:171)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-04-30 13:52:30,135 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)] [See nested exception: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:171)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-04-30 13:52:30,135 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:171)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 13:52:30,135 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)] [See nested exception: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.QueryException: Expected positional parameter count: 1, actual parameters: [] [INSERT INTO testtable (test) VALUES (?)]
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:171)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-04-30 13:55:21,056 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:107)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:92)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 34 more
2013-04-30 13:55:21,057 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:92)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 34 more
2013-04-30 13:55:21,058 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 13:55:21,058 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 8 more
2013-04-30 13:55:21,058 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 8 more
2013-04-30 13:55:21,058 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 8 more
2013-04-30 13:55:21,058 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 13:55:21,059 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 8 more
2013-04-30 14:17:30,146 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:182)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:92)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 37 more
2013-04-30 14:17:30,148 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:92)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 37 more
2013-04-30 14:17:30,148 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 14:17:30,148 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 8 more
2013-04-30 14:17:30,148 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 8 more
2013-04-30 14:17:30,149 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 8 more
2013-04-30 14:17:30,149 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 14:17:30,149 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 8 more
2013-04-30 14:20:11,150 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:182)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:92)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 37 more
2013-04-30 14:20:11,151 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:92)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 37 more
2013-04-30 14:20:11,152 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 14:20:11,152 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 8 more
2013-04-30 14:20:11,152 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 8 more
2013-04-30 14:20:11,152 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 8 more
2013-04-30 14:20:11,153 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 14:20:11,153 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 8 more
2013-04-30 14:30:00,181 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:182)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:92)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 37 more
2013-04-30 14:30:00,182 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:92)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 37 more
2013-04-30 14:30:00,183 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 14:30:00,183 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 8 more
2013-04-30 14:30:00,183 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 8 more
2013-04-30 14:30:00,183 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 8 more
2013-04-30 14:30:00,184 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 14:30:00,184 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 8 more
2013-04-30 14:33:00,194 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:182)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:92)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 37 more
2013-04-30 14:33:00,196 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:92)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 37 more
2013-04-30 14:33:00,196 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 14:33:00,197 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 8 more
2013-04-30 14:33:00,197 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 8 more
2013-04-30 14:33:00,197 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 8 more
2013-04-30 14:33:00,197 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 14:33:00,197 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.SQLGrammarException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:178)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rulechains.testtable' doesn't exist
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1052)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 8 more
2013-04-30 14:39:45,084 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here [See nested exception: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:182)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here
	at org.springframework.orm.hibernate3.SpringSessionContext.currentSession(SpringSessionContext.java:63)
	at org.hibernate.impl.SessionFactoryImpl.getCurrentSession(SessionFactoryImpl.java:687)
	at org.codehaus.groovy.grails.orm.hibernate.SessionFactoryProxy.getCurrentSession(SessionFactoryProxy.java:144)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.getProperty(MetaClassImpl.java:1606)
	at groovy.lang.ExpandoMetaClass.getProperty(ExpandoMetaClass.java:1136)
	at groovy.lang.MetaClassImpl.getProperty(MetaClassImpl.java:3343)
	at groovy.lang.ExpandoMetaClass.getProperty(ExpandoMetaClass.java:1148)
	at groovy.lang.GroovyObjectSupport.getProperty(GroovyObjectSupport.java:36)
	at org.codehaus.groovy.grails.orm.hibernate.SessionFactoryProxy.getProperty(SessionFactoryProxy.java:96)
	at org.codehaus.groovy.runtime.callsite.PogoGetPropertySite.getProperty(PogoGetPropertySite.java:47)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callGetProperty(AbstractCallSite.java:227)
	at BootStrap$_closure1_closure14.doCall(BootStrap.groovy:389)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod.invoke(ClosureMetaMethod.java:80)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoMetaMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:313)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:52)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:141)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-04-30 14:39:45,086 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here
	at org.springframework.orm.hibernate3.SpringSessionContext.currentSession(SpringSessionContext.java:63)
	at org.hibernate.impl.SessionFactoryImpl.getCurrentSession(SessionFactoryImpl.java:687)
	at org.codehaus.groovy.grails.orm.hibernate.SessionFactoryProxy.getCurrentSession(SessionFactoryProxy.java:144)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.getProperty(MetaClassImpl.java:1606)
	at groovy.lang.ExpandoMetaClass.getProperty(ExpandoMetaClass.java:1136)
	at groovy.lang.MetaClassImpl.getProperty(MetaClassImpl.java:3343)
	at groovy.lang.ExpandoMetaClass.getProperty(ExpandoMetaClass.java:1148)
	at groovy.lang.GroovyObjectSupport.getProperty(GroovyObjectSupport.java:36)
	at org.codehaus.groovy.grails.orm.hibernate.SessionFactoryProxy.getProperty(SessionFactoryProxy.java:96)
	at org.codehaus.groovy.runtime.callsite.PogoGetPropertySite.getProperty(PogoGetPropertySite.java:47)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callGetProperty(AbstractCallSite.java:227)
	at BootStrap$_closure1_closure14.doCall(BootStrap.groovy:389)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod.invoke(ClosureMetaMethod.java:80)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoMetaMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:313)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:52)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:141)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 14:39:45,086 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here [See nested exception: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here
	at BootStrap$_closure1_closure14.doCall(BootStrap.groovy:389)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-04-30 14:39:45,086 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here [See nested exception: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here
	at BootStrap$_closure1_closure14.doCall(BootStrap.groovy:389)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-04-30 14:39:45,087 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here
	at BootStrap$_closure1_closure14.doCall(BootStrap.groovy:389)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 14:39:45,087 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here [See nested exception: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here
	at BootStrap$_closure1_closure14.doCall(BootStrap.groovy:389)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-04-30 14:58:40,123 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here [See nested exception: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:182)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here
	at org.springframework.orm.hibernate3.SpringSessionContext.currentSession(SpringSessionContext.java:63)
	at org.hibernate.impl.SessionFactoryImpl.getCurrentSession(SessionFactoryImpl.java:687)
	at org.codehaus.groovy.grails.orm.hibernate.SessionFactoryProxy.getCurrentSession(SessionFactoryProxy.java:144)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.getProperty(MetaClassImpl.java:1606)
	at groovy.lang.ExpandoMetaClass.getProperty(ExpandoMetaClass.java:1136)
	at groovy.lang.MetaClassImpl.getProperty(MetaClassImpl.java:3343)
	at groovy.lang.ExpandoMetaClass.getProperty(ExpandoMetaClass.java:1148)
	at groovy.lang.GroovyObjectSupport.getProperty(GroovyObjectSupport.java:36)
	at org.codehaus.groovy.grails.orm.hibernate.SessionFactoryProxy.getProperty(SessionFactoryProxy.java:96)
	at org.codehaus.groovy.runtime.callsite.PogoGetPropertySite.getProperty(PogoGetPropertySite.java:47)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callGetProperty(AbstractCallSite.java:227)
	at BootStrap$_closure1_closure14.doCall(BootStrap.groovy:389)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod.invoke(ClosureMetaMethod.java:80)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoMetaMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:313)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:52)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:141)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:132)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-04-30 14:58:40,125 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here
	at org.springframework.orm.hibernate3.SpringSessionContext.currentSession(SpringSessionContext.java:63)
	at org.hibernate.impl.SessionFactoryImpl.getCurrentSession(SessionFactoryImpl.java:687)
	at org.codehaus.groovy.grails.orm.hibernate.SessionFactoryProxy.getCurrentSession(SessionFactoryProxy.java:144)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.getProperty(MetaClassImpl.java:1606)
	at groovy.lang.ExpandoMetaClass.getProperty(ExpandoMetaClass.java:1136)
	at groovy.lang.MetaClassImpl.getProperty(MetaClassImpl.java:3343)
	at groovy.lang.ExpandoMetaClass.getProperty(ExpandoMetaClass.java:1148)
	at groovy.lang.GroovyObjectSupport.getProperty(GroovyObjectSupport.java:36)
	at org.codehaus.groovy.grails.orm.hibernate.SessionFactoryProxy.getProperty(SessionFactoryProxy.java:96)
	at org.codehaus.groovy.runtime.callsite.PogoGetPropertySite.getProperty(PogoGetPropertySite.java:47)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callGetProperty(AbstractCallSite.java:227)
	at BootStrap$_closure1_closure14.doCall(BootStrap.groovy:389)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod.invoke(ClosureMetaMethod.java:80)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoMetaMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:313)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:52)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:141)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:132)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 14:58:40,126 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here [See nested exception: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here
	at BootStrap$_closure1_closure14.doCall(BootStrap.groovy:389)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:132)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-04-30 14:58:40,126 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here [See nested exception: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here
	at BootStrap$_closure1_closure14.doCall(BootStrap.groovy:389)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:132)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-04-30 14:58:40,126 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here
	at BootStrap$_closure1_closure14.doCall(BootStrap.groovy:389)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:132)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 14:58:40,126 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here [See nested exception: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here
	at BootStrap$_closure1_closure14.doCall(BootStrap.groovy:389)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:132)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-04-30 15:00:59,089 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim] [See nested exception: groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim]]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:107)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim]
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.unwrap(ScriptBytecodeAdapter.java:55)
	at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:78)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:141)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3$$EO4WMdyq.doCall(LinkService.groovy:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReloadedTypeInvoker$2.invoke(ReloadedTypeInvoker.java:122)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1272)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy26.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1249)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at edu.usf.RuleChains.LinkService$$EO4WMdyq.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$$DO4WMdyq.justSQL(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.OriginalClassInvoker.invoke(OriginalClassInvoker.java:47)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1272)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-04-30 15:00:59,162 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim]
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.unwrap(ScriptBytecodeAdapter.java:55)
	at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:78)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:141)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3$$EO4WMdyq.doCall(LinkService.groovy:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReloadedTypeInvoker$2.invoke(ReloadedTypeInvoker.java:122)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1272)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy26.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1249)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at edu.usf.RuleChains.LinkService$$EO4WMdyq.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$$DO4WMdyq.justSQL(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.OriginalClassInvoker.invoke(OriginalClassInvoker.java:47)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1272)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 15:00:59,200 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim] [See nested exception: groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim]]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim]
	at edu.usf.RuleChains.LinkService$_justSQL_closure3$$EO4WMdyq.doCall(LinkService.groovy:130)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService$$EO4WMdyq.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-04-30 15:00:59,275 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim] [See nested exception: groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim]]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim]
	at edu.usf.RuleChains.LinkService$_justSQL_closure3$$EO4WMdyq.doCall(LinkService.groovy:130)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService$$EO4WMdyq.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-04-30 15:00:59,349 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim]
	at edu.usf.RuleChains.LinkService$_justSQL_closure3$$EO4WMdyq.doCall(LinkService.groovy:130)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService$$EO4WMdyq.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 15:00:59,386 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim] [See nested exception: groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim]]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim]
	at edu.usf.RuleChains.LinkService$_justSQL_closure3$$EO4WMdyq.doCall(LinkService.groovy:130)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService$$EO4WMdyq.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-04-30 15:03:00,226 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:182)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:140)
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:128)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy26.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 65 more
2013-04-30 15:03:00,228 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:140)
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:128)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy26.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 65 more
2013-04-30 15:03:00,228 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy26.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 15:03:00,229 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-04-30 15:03:00,229 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-04-30 15:03:00,229 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-04-30 15:03:00,229 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 15:03:00,230 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-04-30 15:16:50,177 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:182)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:140)
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:128)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy26.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 65 more
2013-04-30 15:16:50,178 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:140)
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:128)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy26.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 65 more
2013-04-30 15:16:50,179 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy26.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 15:16:50,179 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-04-30 15:16:50,179 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-04-30 15:16:50,179 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-04-30 15:16:50,180 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 15:16:50,180 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-04-30 15:29:10,182 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:182)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:140)
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:128)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy26.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 65 more
2013-04-30 15:29:10,183 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:140)
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:128)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy26.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 65 more
2013-04-30 15:29:10,184 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy26.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 15:29:10,185 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-04-30 15:29:10,185 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-04-30 15:29:10,185 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-04-30 15:29:10,185 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 15:29:10,185 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-04-30 15:34:30,037 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:140)
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:128)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy26.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 56 more
2013-04-30 15:34:30,037 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:140)
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:128)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy26.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 56 more
2013-04-30 15:34:30,038 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy26.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 15:34:30,038 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-04-30 15:34:30,039 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-04-30 15:34:30,039 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-04-30 15:34:30,039 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 15:34:30,039 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-04-30 15:37:00,198 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:182)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:140)
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:128)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy26.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 65 more
2013-04-30 15:37:00,200 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:140)
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:128)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy26.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 65 more
2013-04-30 15:37:00,201 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy26.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 15:37:00,201 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-04-30 15:37:00,201 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-04-30 15:37:00,201 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-04-30 15:37:00,202 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-04-30 15:37:00,202 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-05-02 14:09:30,291 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:182)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:140)
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:128)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy26.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 65 more
2013-05-02 14:09:30,293 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:140)
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:128)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy26.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 65 more
2013-05-02 14:09:30,294 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy26.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-05-02 14:09:30,294 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-05-02 14:09:30,294 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-05-02 14:09:30,294 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-05-02 14:09:30,295 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-05-02 14:09:30,295 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-05-03 12:19:53,024 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.JDBCConnectionException: could not execute query using scroll [See nested exception: org.hibernate.exception.JDBCConnectionException: could not execute query using scroll]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:107)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.JDBCConnectionException: could not execute query using scroll
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:99)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.loader.Loader.scroll(Loader.java:2650)
	at org.hibernate.loader.custom.CustomLoader.scroll(CustomLoader.java:322)
	at org.hibernate.impl.SessionImpl.scrollCustomQuery(SessionImpl.java:1818)
	at org.hibernate.impl.AbstractSessionImpl.scroll(AbstractSessionImpl.java:170)
	at org.hibernate.impl.SQLQueryImpl.scroll(SQLQueryImpl.java:183)
	at org.hibernate.Query$scroll.call(Unknown Source)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:166)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy26.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: The last packet successfully received from the server was 79,822,736 milliseconds ago.  The last packet sent successfully to the server was 79,822,773 milliseconds ago. is longer than the server configured value of 'wait_timeout'. You should consider either expiring and/or testing connection validity before use in your application, increasing the server configured values for client timeouts, or using the Connector/J connection property 'autoReconnect=true' to avoid this problem.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1116)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3851)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2471)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2677)
	at com.mysql.jdbc.StatementImpl.executeSimpleNonQuery(StatementImpl.java:1643)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2242)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.hibernate.jdbc.AbstractBatcher.getResultSet(AbstractBatcher.java:208)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:1953)
	at org.hibernate.loader.Loader.scroll(Loader.java:2615)
	... 56 more
Caused by: java.net.SocketException: Broken pipe
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:123)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3832)
	... 66 more
2013-05-03 12:19:53,025 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.JDBCConnectionException: could not execute query using scroll
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:99)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.loader.Loader.scroll(Loader.java:2650)
	at org.hibernate.loader.custom.CustomLoader.scroll(CustomLoader.java:322)
	at org.hibernate.impl.SessionImpl.scrollCustomQuery(SessionImpl.java:1818)
	at org.hibernate.impl.AbstractSessionImpl.scroll(AbstractSessionImpl.java:170)
	at org.hibernate.impl.SQLQueryImpl.scroll(SQLQueryImpl.java:183)
	at org.hibernate.Query$scroll.call(Unknown Source)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:166)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy26.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: The last packet successfully received from the server was 79,822,736 milliseconds ago.  The last packet sent successfully to the server was 79,822,773 milliseconds ago. is longer than the server configured value of 'wait_timeout'. You should consider either expiring and/or testing connection validity before use in your application, increasing the server configured values for client timeouts, or using the Connector/J connection property 'autoReconnect=true' to avoid this problem.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1116)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3851)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2471)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2677)
	at com.mysql.jdbc.StatementImpl.executeSimpleNonQuery(StatementImpl.java:1643)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2242)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.hibernate.jdbc.AbstractBatcher.getResultSet(AbstractBatcher.java:208)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:1953)
	at org.hibernate.loader.Loader.scroll(Loader.java:2615)
	... 56 more
Caused by: java.net.SocketException: Broken pipe
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:123)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3832)
	... 66 more
2013-05-03 12:19:53,026 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: The last packet successfully received from the server was 79,822,736 milliseconds ago.  The last packet sent successfully to the server was 79,822,773 milliseconds ago. is longer than the server configured value of 'wait_timeout'. You should consider either expiring and/or testing connection validity before use in your application, increasing the server configured values for client timeouts, or using the Connector/J connection property 'autoReconnect=true' to avoid this problem.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1116)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3851)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2471)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2677)
	at com.mysql.jdbc.StatementImpl.executeSimpleNonQuery(StatementImpl.java:1643)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2242)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.hibernate.jdbc.AbstractBatcher.getResultSet(AbstractBatcher.java:208)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:1953)
	at org.hibernate.loader.Loader.scroll(Loader.java:2615)
	at org.hibernate.loader.custom.CustomLoader.scroll(CustomLoader.java:322)
	at org.hibernate.impl.SessionImpl.scrollCustomQuery(SessionImpl.java:1818)
	at org.hibernate.impl.AbstractSessionImpl.scroll(AbstractSessionImpl.java:170)
	at org.hibernate.impl.SQLQueryImpl.scroll(SQLQueryImpl.java:183)
	at org.hibernate.Query$scroll.call(Unknown Source)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:166)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy26.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.net.SocketException: Broken pipe
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:123)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3832)
	... 66 more
2013-05-03 12:19:53,027 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
java.net.SocketException: Broken pipe
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:123)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3832)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2471)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2677)
	at com.mysql.jdbc.StatementImpl.executeSimpleNonQuery(StatementImpl.java:1643)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2242)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.hibernate.jdbc.AbstractBatcher.getResultSet(AbstractBatcher.java:208)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:1953)
	at org.hibernate.loader.Loader.scroll(Loader.java:2615)
	at org.hibernate.loader.custom.CustomLoader.scroll(CustomLoader.java:322)
	at org.hibernate.impl.SessionImpl.scrollCustomQuery(SessionImpl.java:1818)
	at org.hibernate.impl.AbstractSessionImpl.scroll(AbstractSessionImpl.java:170)
	at org.hibernate.impl.SQLQueryImpl.scroll(SQLQueryImpl.java:183)
	at org.hibernate.Query$scroll.call(Unknown Source)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:166)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy26.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-05-03 12:19:53,027 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.JDBCConnectionException: could not execute query using scroll [See nested exception: org.hibernate.exception.JDBCConnectionException: could not execute query using scroll]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.JDBCConnectionException: could not execute query using scroll
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:166)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: The last packet successfully received from the server was 79,822,736 milliseconds ago.  The last packet sent successfully to the server was 79,822,773 milliseconds ago. is longer than the server configured value of 'wait_timeout'. You should consider either expiring and/or testing connection validity before use in your application, increasing the server configured values for client timeouts, or using the Connector/J connection property 'autoReconnect=true' to avoid this problem.
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1116)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3851)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2471)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2677)
	at com.mysql.jdbc.StatementImpl.executeSimpleNonQuery(StatementImpl.java:1643)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2242)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	... 9 more
Caused by: java.net.SocketException: Broken pipe
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:123)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3832)
	... 16 more
2013-05-03 12:19:53,028 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.JDBCConnectionException: could not execute query using scroll [See nested exception: org.hibernate.exception.JDBCConnectionException: could not execute query using scroll]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.JDBCConnectionException: could not execute query using scroll
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:166)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: The last packet successfully received from the server was 79,822,736 milliseconds ago.  The last packet sent successfully to the server was 79,822,773 milliseconds ago. is longer than the server configured value of 'wait_timeout'. You should consider either expiring and/or testing connection validity before use in your application, increasing the server configured values for client timeouts, or using the Connector/J connection property 'autoReconnect=true' to avoid this problem.
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1116)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3851)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2471)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2677)
	at com.mysql.jdbc.StatementImpl.executeSimpleNonQuery(StatementImpl.java:1643)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2242)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	... 9 more
Caused by: java.net.SocketException: Broken pipe
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:123)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3832)
	... 16 more
2013-05-03 12:19:53,028 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.JDBCConnectionException: could not execute query using scroll
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:166)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: The last packet successfully received from the server was 79,822,736 milliseconds ago.  The last packet sent successfully to the server was 79,822,773 milliseconds ago. is longer than the server configured value of 'wait_timeout'. You should consider either expiring and/or testing connection validity before use in your application, increasing the server configured values for client timeouts, or using the Connector/J connection property 'autoReconnect=true' to avoid this problem.
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1116)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3851)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2471)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2677)
	at com.mysql.jdbc.StatementImpl.executeSimpleNonQuery(StatementImpl.java:1643)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2242)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	... 9 more
Caused by: java.net.SocketException: Broken pipe
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:123)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3832)
	... 16 more
2013-05-03 12:19:53,029 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: The last packet successfully received from the server was 79,822,736 milliseconds ago.  The last packet sent successfully to the server was 79,822,773 milliseconds ago. is longer than the server configured value of 'wait_timeout'. You should consider either expiring and/or testing connection validity before use in your application, increasing the server configured values for client timeouts, or using the Connector/J connection property 'autoReconnect=true' to avoid this problem.
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1116)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3851)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2471)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2677)
	at com.mysql.jdbc.StatementImpl.executeSimpleNonQuery(StatementImpl.java:1643)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2242)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:166)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.net.SocketException: Broken pipe
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:123)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3832)
	... 16 more
2013-05-03 12:19:53,029 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
java.net.SocketException: Broken pipe
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:123)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3832)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2471)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2677)
	at com.mysql.jdbc.StatementImpl.executeSimpleNonQuery(StatementImpl.java:1643)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2242)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:166)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-05-03 12:19:53,030 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.JDBCConnectionException: could not execute query using scroll [See nested exception: org.hibernate.exception.JDBCConnectionException: could not execute query using scroll]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.JDBCConnectionException: could not execute query using scroll
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:166)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: The last packet successfully received from the server was 79,822,736 milliseconds ago.  The last packet sent successfully to the server was 79,822,773 milliseconds ago. is longer than the server configured value of 'wait_timeout'. You should consider either expiring and/or testing connection validity before use in your application, increasing the server configured values for client timeouts, or using the Connector/J connection property 'autoReconnect=true' to avoid this problem.
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1116)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3851)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2471)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2677)
	at com.mysql.jdbc.StatementImpl.executeSimpleNonQuery(StatementImpl.java:1643)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2242)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	... 9 more
Caused by: java.net.SocketException: Broken pipe
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:123)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3832)
	... 16 more
2013-05-03 12:34:50,157 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:182)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:140)
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:128)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy26.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 65 more
2013-05-03 12:34:50,159 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:140)
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:128)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy26.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 65 more
2013-05-03 12:34:50,160 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy26.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-05-03 12:34:50,160 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-05-03 12:34:50,160 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-05-03 12:34:50,160 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-05-03 12:34:50,161 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-05-03 12:34:50,161 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-05-06 09:49:30,255 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:182)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:140)
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:128)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy30.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 65 more
2013-05-06 09:49:30,269 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:140)
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:128)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy30.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 65 more
2013-05-06 09:49:30,270 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy30.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-05-06 09:49:30,270 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-05-06 09:49:30,270 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-05-06 09:49:30,271 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-05-06 09:49:30,271 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-05-06 09:49:30,271 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1073)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4096)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2683)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2144)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2444)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2362)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2347)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-05-06 09:56:55,179 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:182)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:140)
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:128)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy29.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1078)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2815)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2458)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2375)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2359)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 65 more
2013-05-06 09:56:55,181 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:140)
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:128)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:219)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy29.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1078)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2815)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2458)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2375)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2359)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	... 65 more
2013-05-06 09:56:55,182 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1078)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2815)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2458)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2375)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2359)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.hibernate.engine.query.NativeSQLQueryPlan.performExecuteUpdate(NativeSQLQueryPlan.java:210)
	at org.hibernate.impl.SessionImpl.executeNativeUpdate(SessionImpl.java:1310)
	at org.hibernate.impl.SQLQueryImpl.executeUpdate(SQLQueryImpl.java:396)
	at org.hibernate.Query$executeUpdate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy29.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-05-06 09:56:55,182 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1078)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2815)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2458)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2375)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2359)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-05-06 09:56:55,182 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1078)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2815)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2458)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2375)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2359)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-05-06 09:56:55,182 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1078)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2815)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2458)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2375)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2359)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-05-06 09:56:55,183 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1078)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2815)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2458)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2375)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2359)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-05-06 09:56:55,183 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query [See nested exception: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute native bulk manipulation query
	at edu.usf.RuleChains.LinkService$_justSQL_closure3.doCall(LinkService.groovy:180)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy:129)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
Caused by: java.sql.SQLException: Incorrect string value: '\xAC\xED\x00\x05sr...' for column 'test' at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1078)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2815)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2458)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2375)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2359)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	... 10 more
2013-05-06 10:46:50,275 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here [See nested exception: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:182)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here
	at org.springframework.orm.hibernate3.SpringSessionContext.currentSession(SpringSessionContext.java:63)
	at org.hibernate.impl.SessionFactoryImpl.getCurrentSession(SessionFactoryImpl.java:687)
	at org.codehaus.groovy.grails.orm.hibernate.SessionFactoryProxy.getCurrentSession(SessionFactoryProxy.java:144)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.getProperty(MetaClassImpl.java:1606)
	at groovy.lang.ExpandoMetaClass.getProperty(ExpandoMetaClass.java:1136)
	at groovy.lang.MetaClassImpl.getProperty(MetaClassImpl.java:3343)
	at groovy.lang.ExpandoMetaClass.getProperty(ExpandoMetaClass.java:1148)
	at groovy.lang.GroovyObjectSupport.getProperty(GroovyObjectSupport.java:36)
	at org.codehaus.groovy.grails.orm.hibernate.SessionFactoryProxy.getProperty(SessionFactoryProxy.java:96)
	at org.codehaus.groovy.runtime.callsite.PogoGetPropertySite.getProperty(PogoGetPropertySite.java:47)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callGetProperty(AbstractCallSite.java:227)
	at BootStrap$_closure1_closure16_closure87.doCall(BootStrap.groovy:397)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at BootStrap$_closure1_closure16_closure87.call(BootStrap.groovy)
	at groovy.lang.Closure.call(Closure.java:425)
	at BootStrap$_closure1_closure16_closure87.call(BootStrap.groovy)
	at org.codehaus.groovy.runtime.DefaultGroovyMethods.collectEntries(DefaultGroovyMethods.java:2605)
	at org.codehaus.groovy.runtime.DefaultGroovyMethods.collectEntries(DefaultGroovyMethods.java:2509)
	at org.codehaus.groovy.runtime.dgm$72.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:271)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy:396)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod.invoke(ClosureMetaMethod.java:80)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoMetaMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:313)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:52)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:137)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.LinkService$justGroovy.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 10:46:50,294 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here
	at org.springframework.orm.hibernate3.SpringSessionContext.currentSession(SpringSessionContext.java:63)
	at org.hibernate.impl.SessionFactoryImpl.getCurrentSession(SessionFactoryImpl.java:687)
	at org.codehaus.groovy.grails.orm.hibernate.SessionFactoryProxy.getCurrentSession(SessionFactoryProxy.java:144)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.getProperty(MetaClassImpl.java:1606)
	at groovy.lang.ExpandoMetaClass.getProperty(ExpandoMetaClass.java:1136)
	at groovy.lang.MetaClassImpl.getProperty(MetaClassImpl.java:3343)
	at groovy.lang.ExpandoMetaClass.getProperty(ExpandoMetaClass.java:1148)
	at groovy.lang.GroovyObjectSupport.getProperty(GroovyObjectSupport.java:36)
	at org.codehaus.groovy.grails.orm.hibernate.SessionFactoryProxy.getProperty(SessionFactoryProxy.java:96)
	at org.codehaus.groovy.runtime.callsite.PogoGetPropertySite.getProperty(PogoGetPropertySite.java:47)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callGetProperty(AbstractCallSite.java:227)
	at BootStrap$_closure1_closure16_closure87.doCall(BootStrap.groovy:397)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at BootStrap$_closure1_closure16_closure87.call(BootStrap.groovy)
	at groovy.lang.Closure.call(Closure.java:425)
	at BootStrap$_closure1_closure16_closure87.call(BootStrap.groovy)
	at org.codehaus.groovy.runtime.DefaultGroovyMethods.collectEntries(DefaultGroovyMethods.java:2605)
	at org.codehaus.groovy.runtime.DefaultGroovyMethods.collectEntries(DefaultGroovyMethods.java:2509)
	at org.codehaus.groovy.runtime.dgm$72.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:271)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy:396)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod.invoke(ClosureMetaMethod.java:80)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoMetaMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:313)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:52)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:137)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.LinkService$justGroovy.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-05-06 10:46:50,296 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here [See nested exception: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here
	at BootStrap$_closure1_closure16_closure87.doCall(BootStrap.groovy:397)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy:396)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 10:46:50,296 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here [See nested exception: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here
	at BootStrap$_closure1_closure16_closure87.doCall(BootStrap.groovy:397)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy:396)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 10:46:50,296 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here
	at BootStrap$_closure1_closure16_closure87.doCall(BootStrap.groovy:397)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy:396)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-05-06 10:46:50,296 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here [See nested exception: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here
	at BootStrap$_closure1_closure16_closure87.doCall(BootStrap.groovy:397)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy:396)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 11:14:55,221 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here [See nested exception: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:182)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here
	at org.springframework.orm.hibernate3.SpringSessionContext.currentSession(SpringSessionContext.java:63)
	at org.hibernate.impl.SessionFactoryImpl.getCurrentSession(SessionFactoryImpl.java:687)
	at org.codehaus.groovy.grails.orm.hibernate.SessionFactoryProxy.getCurrentSession(SessionFactoryProxy.java:144)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.getProperty(MetaClassImpl.java:1606)
	at groovy.lang.ExpandoMetaClass.getProperty(ExpandoMetaClass.java:1136)
	at groovy.lang.MetaClassImpl.getProperty(MetaClassImpl.java:3343)
	at groovy.lang.ExpandoMetaClass.getProperty(ExpandoMetaClass.java:1148)
	at groovy.lang.GroovyObjectSupport.getProperty(GroovyObjectSupport.java:36)
	at org.codehaus.groovy.grails.orm.hibernate.SessionFactoryProxy.getProperty(SessionFactoryProxy.java:96)
	at org.codehaus.groovy.runtime.callsite.PogoGetPropertySite.getProperty(PogoGetPropertySite.java:47)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callGetProperty(AbstractCallSite.java:227)
	at BootStrap$_closure1_closure16_closure87.doCall(BootStrap.groovy:397)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at BootStrap$_closure1_closure16_closure87.call(BootStrap.groovy)
	at groovy.lang.Closure.call(Closure.java:425)
	at BootStrap$_closure1_closure16_closure87.call(BootStrap.groovy)
	at org.codehaus.groovy.runtime.DefaultGroovyMethods.collectEntries(DefaultGroovyMethods.java:2605)
	at org.codehaus.groovy.runtime.DefaultGroovyMethods.collectEntries(DefaultGroovyMethods.java:2509)
	at org.codehaus.groovy.runtime.dgm$72.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:271)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy:396)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod.invoke(ClosureMetaMethod.java:80)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoMetaMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:313)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:52)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:137)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.LinkService$justGroovy.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 11:14:55,226 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here
	at org.springframework.orm.hibernate3.SpringSessionContext.currentSession(SpringSessionContext.java:63)
	at org.hibernate.impl.SessionFactoryImpl.getCurrentSession(SessionFactoryImpl.java:687)
	at org.codehaus.groovy.grails.orm.hibernate.SessionFactoryProxy.getCurrentSession(SessionFactoryProxy.java:144)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.getProperty(MetaClassImpl.java:1606)
	at groovy.lang.ExpandoMetaClass.getProperty(ExpandoMetaClass.java:1136)
	at groovy.lang.MetaClassImpl.getProperty(MetaClassImpl.java:3343)
	at groovy.lang.ExpandoMetaClass.getProperty(ExpandoMetaClass.java:1148)
	at groovy.lang.GroovyObjectSupport.getProperty(GroovyObjectSupport.java:36)
	at org.codehaus.groovy.grails.orm.hibernate.SessionFactoryProxy.getProperty(SessionFactoryProxy.java:96)
	at org.codehaus.groovy.runtime.callsite.PogoGetPropertySite.getProperty(PogoGetPropertySite.java:47)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callGetProperty(AbstractCallSite.java:227)
	at BootStrap$_closure1_closure16_closure87.doCall(BootStrap.groovy:397)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at BootStrap$_closure1_closure16_closure87.call(BootStrap.groovy)
	at groovy.lang.Closure.call(Closure.java:425)
	at BootStrap$_closure1_closure16_closure87.call(BootStrap.groovy)
	at org.codehaus.groovy.runtime.DefaultGroovyMethods.collectEntries(DefaultGroovyMethods.java:2605)
	at org.codehaus.groovy.runtime.DefaultGroovyMethods.collectEntries(DefaultGroovyMethods.java:2509)
	at org.codehaus.groovy.runtime.dgm$72.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:271)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy:396)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod.invoke(ClosureMetaMethod.java:80)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoMetaMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:313)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:52)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:137)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.LinkService$justGroovy.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-05-06 11:14:55,227 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here [See nested exception: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here
	at BootStrap$_closure1_closure16_closure87.doCall(BootStrap.groovy:397)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy:396)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 11:14:55,227 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here [See nested exception: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here
	at BootStrap$_closure1_closure16_closure87.doCall(BootStrap.groovy:397)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy:396)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 11:14:55,227 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here
	at BootStrap$_closure1_closure16_closure87.doCall(BootStrap.groovy:397)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy:396)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-05-06 11:14:55,227 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here [See nested exception: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.hibernate.HibernateException: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here
	at BootStrap$_closure1_closure16_closure87.doCall(BootStrap.groovy:397)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy:396)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 11:29:50,231 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: java.util.NoSuchElementException: Cannot access last() element from an empty List [See nested exception: java.util.NoSuchElementException: Cannot access last() element from an empty List]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:182)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.util.NoSuchElementException: Cannot access last() element from an empty List
	at org.codehaus.groovy.runtime.DefaultGroovyMethods.last(DefaultGroovyMethods.java:6243)
	at org.codehaus.groovy.runtime.dgm$314.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:271)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at BootStrap$_closure1_closure16_closure87.doCall(BootStrap.groovy:397)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at BootStrap$_closure1_closure16_closure87.call(BootStrap.groovy)
	at groovy.lang.Closure.call(Closure.java:425)
	at BootStrap$_closure1_closure16_closure87.call(BootStrap.groovy)
	at org.codehaus.groovy.runtime.DefaultGroovyMethods.collectEntries(DefaultGroovyMethods.java:2605)
	at org.codehaus.groovy.runtime.DefaultGroovyMethods.collectEntries(DefaultGroovyMethods.java:2509)
	at org.codehaus.groovy.runtime.dgm$72.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:271)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy:396)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod.invoke(ClosureMetaMethod.java:80)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1027)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:66)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:137)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy29.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.LinkService$justGroovy.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 11:29:50,233 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
java.util.NoSuchElementException: Cannot access last() element from an empty List
	at org.codehaus.groovy.runtime.DefaultGroovyMethods.last(DefaultGroovyMethods.java:6243)
	at org.codehaus.groovy.runtime.dgm$314.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:271)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at BootStrap$_closure1_closure16_closure87.doCall(BootStrap.groovy:397)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at BootStrap$_closure1_closure16_closure87.call(BootStrap.groovy)
	at groovy.lang.Closure.call(Closure.java:425)
	at BootStrap$_closure1_closure16_closure87.call(BootStrap.groovy)
	at org.codehaus.groovy.runtime.DefaultGroovyMethods.collectEntries(DefaultGroovyMethods.java:2605)
	at org.codehaus.groovy.runtime.DefaultGroovyMethods.collectEntries(DefaultGroovyMethods.java:2509)
	at org.codehaus.groovy.runtime.dgm$72.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:271)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy:396)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod.invoke(ClosureMetaMethod.java:80)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1027)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:66)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:137)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy29.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.LinkService$justGroovy.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-05-06 11:29:50,234 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: java.util.NoSuchElementException: Cannot access last() element from an empty List [See nested exception: java.util.NoSuchElementException: Cannot access last() element from an empty List]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.util.NoSuchElementException: Cannot access last() element from an empty List
	at BootStrap$_closure1_closure16_closure87.doCall(BootStrap.groovy:397)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy:396)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:106)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 11:29:50,234 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: java.util.NoSuchElementException: Cannot access last() element from an empty List [See nested exception: java.util.NoSuchElementException: Cannot access last() element from an empty List]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.util.NoSuchElementException: Cannot access last() element from an empty List
	at BootStrap$_closure1_closure16_closure87.doCall(BootStrap.groovy:397)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy:396)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:106)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 11:29:50,234 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
java.util.NoSuchElementException: Cannot access last() element from an empty List
	at BootStrap$_closure1_closure16_closure87.doCall(BootStrap.groovy:397)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy:396)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:106)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-05-06 11:29:50,234 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: java.util.NoSuchElementException: Cannot access last() element from an empty List [See nested exception: java.util.NoSuchElementException: Cannot access last() element from an empty List]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.util.NoSuchElementException: Cannot access last() element from an empty List
	at BootStrap$_closure1_closure16_closure87.doCall(BootStrap.groovy:397)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy:396)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:106)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 11:43:50,220 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: java.util.NoSuchElementException: Cannot access last() element from an empty List [See nested exception: java.util.NoSuchElementException: Cannot access last() element from an empty List]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:182)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.util.NoSuchElementException: Cannot access last() element from an empty List
	at org.codehaus.groovy.runtime.DefaultGroovyMethods.last(DefaultGroovyMethods.java:6243)
	at org.codehaus.groovy.runtime.dgm$314.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:271)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at BootStrap$_closure1_closure16_closure87.doCall(BootStrap.groovy:398)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at BootStrap$_closure1_closure16_closure87.call(BootStrap.groovy)
	at groovy.lang.Closure.call(Closure.java:425)
	at BootStrap$_closure1_closure16_closure87.call(BootStrap.groovy)
	at org.codehaus.groovy.runtime.DefaultGroovyMethods.collectEntries(DefaultGroovyMethods.java:2605)
	at org.codehaus.groovy.runtime.DefaultGroovyMethods.collectEntries(DefaultGroovyMethods.java:2509)
	at org.codehaus.groovy.runtime.dgm$72.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:271)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy:396)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod.invoke(ClosureMetaMethod.java:80)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1027)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:66)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:137)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy28.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.LinkService$justGroovy.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 11:43:50,223 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
java.util.NoSuchElementException: Cannot access last() element from an empty List
	at org.codehaus.groovy.runtime.DefaultGroovyMethods.last(DefaultGroovyMethods.java:6243)
	at org.codehaus.groovy.runtime.dgm$314.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:271)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)
	at BootStrap$_closure1_closure16_closure87.doCall(BootStrap.groovy:398)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at BootStrap$_closure1_closure16_closure87.call(BootStrap.groovy)
	at groovy.lang.Closure.call(Closure.java:425)
	at BootStrap$_closure1_closure16_closure87.call(BootStrap.groovy)
	at org.codehaus.groovy.runtime.DefaultGroovyMethods.collectEntries(DefaultGroovyMethods.java:2605)
	at org.codehaus.groovy.runtime.DefaultGroovyMethods.collectEntries(DefaultGroovyMethods.java:2509)
	at org.codehaus.groovy.runtime.dgm$72.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:271)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy:396)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod.invoke(ClosureMetaMethod.java:80)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1027)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:66)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:137)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy28.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.LinkService$justGroovy.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-05-06 11:43:50,224 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: java.util.NoSuchElementException: Cannot access last() element from an empty List [See nested exception: java.util.NoSuchElementException: Cannot access last() element from an empty List]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.util.NoSuchElementException: Cannot access last() element from an empty List
	at BootStrap$_closure1_closure16_closure87.doCall(BootStrap.groovy:398)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy:396)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:106)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 11:43:50,224 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: java.util.NoSuchElementException: Cannot access last() element from an empty List [See nested exception: java.util.NoSuchElementException: Cannot access last() element from an empty List]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.util.NoSuchElementException: Cannot access last() element from an empty List
	at BootStrap$_closure1_closure16_closure87.doCall(BootStrap.groovy:398)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy:396)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:106)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 11:43:50,224 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
java.util.NoSuchElementException: Cannot access last() element from an empty List
	at BootStrap$_closure1_closure16_closure87.doCall(BootStrap.groovy:398)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy:396)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:106)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-05-06 11:43:50,224 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: java.util.NoSuchElementException: Cannot access last() element from an empty List [See nested exception: java.util.NoSuchElementException: Cannot access last() element from an empty List]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: java.util.NoSuchElementException: Cannot access last() element from an empty List
	at BootStrap$_closure1_closure16_closure87.doCall(BootStrap.groovy:398)
	at BootStrap$_closure1_closure16.doCall(BootStrap.groovy:396)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:106)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 11:53:15,240 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error
 [See nested exception: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error
]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:182)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error

	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:309)
	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:149)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:119)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:131)
	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:359)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:142)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:108)
	at org.codehaus.groovy.control.SourceUnit.parse(SourceUnit.java:236)
	at org.codehaus.groovy.control.CompilationUnit$1.call(CompilationUnit.java:162)
	at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:903)
	at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:566)
	at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:542)
	at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:519)
	at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:279)
	at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:258)
	at groovy.lang.GroovyShell.parseClass(GroovyShell.java:613)
	at groovy.lang.GroovyShell.parse(GroovyShell.java:625)
	at groovy.lang.GroovyShell.evaluate(GroovyShell.java:516)
	at groovy.lang.GroovyShell.evaluate(GroovyShell.java:556)
	at groovy.lang.GroovyShell.evaluate(GroovyShell.java:527)
	at groovy.lang.GroovyShell$evaluate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:118)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy28.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.LinkService$justGroovy.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 11:53:15,242 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error

	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:309)
	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:149)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:119)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:131)
	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:359)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:142)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:108)
	at org.codehaus.groovy.control.SourceUnit.parse(SourceUnit.java:236)
	at org.codehaus.groovy.control.CompilationUnit$1.call(CompilationUnit.java:162)
	at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:903)
	at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:566)
	at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:542)
	at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:519)
	at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:279)
	at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:258)
	at groovy.lang.GroovyShell.parseClass(GroovyShell.java:613)
	at groovy.lang.GroovyShell.parse(GroovyShell.java:625)
	at groovy.lang.GroovyShell.evaluate(GroovyShell.java:516)
	at groovy.lang.GroovyShell.evaluate(GroovyShell.java:556)
	at groovy.lang.GroovyShell.evaluate(GroovyShell.java:527)
	at groovy.lang.GroovyShell$evaluate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:118)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy28.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.LinkService$justGroovy.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-05-06 11:53:15,243 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error
 [See nested exception: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error
]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error

	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:309)
	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:149)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:119)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:131)
	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:359)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:142)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:108)
	at org.codehaus.groovy.control.SourceUnit.parse(SourceUnit.java:236)
	at org.codehaus.groovy.control.CompilationUnit$1.call(CompilationUnit.java:162)
	at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:903)
	at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:566)
	at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:542)
	at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:519)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:118)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 11:53:15,244 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error
 [See nested exception: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error
]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error

	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:309)
	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:149)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:119)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:131)
	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:359)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:142)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:108)
	at org.codehaus.groovy.control.SourceUnit.parse(SourceUnit.java:236)
	at org.codehaus.groovy.control.CompilationUnit$1.call(CompilationUnit.java:162)
	at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:903)
	at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:566)
	at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:542)
	at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:519)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:118)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 11:53:15,244 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error

	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:309)
	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:149)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:119)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:131)
	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:359)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:142)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:108)
	at org.codehaus.groovy.control.SourceUnit.parse(SourceUnit.java:236)
	at org.codehaus.groovy.control.CompilationUnit$1.call(CompilationUnit.java:162)
	at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:903)
	at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:566)
	at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:542)
	at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:519)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:118)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-05-06 11:53:15,244 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error
 [See nested exception: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error
]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error

	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:309)
	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:149)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:119)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:131)
	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:359)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:142)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:108)
	at org.codehaus.groovy.control.SourceUnit.parse(SourceUnit.java:236)
	at org.codehaus.groovy.control.CompilationUnit$1.call(CompilationUnit.java:162)
	at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:903)
	at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:566)
	at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:542)
	at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:519)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:118)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 12:07:50,258 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error
 [See nested exception: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error
]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:182)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error

	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:309)
	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:149)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:119)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:131)
	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:359)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:142)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:108)
	at org.codehaus.groovy.control.SourceUnit.parse(SourceUnit.java:236)
	at org.codehaus.groovy.control.CompilationUnit$1.call(CompilationUnit.java:162)
	at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:903)
	at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:566)
	at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:542)
	at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:519)
	at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:279)
	at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:258)
	at groovy.lang.GroovyShell.parseClass(GroovyShell.java:613)
	at groovy.lang.GroovyShell.parse(GroovyShell.java:625)
	at groovy.lang.GroovyShell.evaluate(GroovyShell.java:516)
	at groovy.lang.GroovyShell.evaluate(GroovyShell.java:556)
	at groovy.lang.GroovyShell.evaluate(GroovyShell.java:527)
	at groovy.lang.GroovyShell$evaluate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:118)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy29.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.LinkService$justGroovy.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 12:07:50,260 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error

	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:309)
	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:149)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:119)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:131)
	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:359)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:142)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:108)
	at org.codehaus.groovy.control.SourceUnit.parse(SourceUnit.java:236)
	at org.codehaus.groovy.control.CompilationUnit$1.call(CompilationUnit.java:162)
	at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:903)
	at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:566)
	at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:542)
	at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:519)
	at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:279)
	at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:258)
	at groovy.lang.GroovyShell.parseClass(GroovyShell.java:613)
	at groovy.lang.GroovyShell.parse(GroovyShell.java:625)
	at groovy.lang.GroovyShell.evaluate(GroovyShell.java:516)
	at groovy.lang.GroovyShell.evaluate(GroovyShell.java:556)
	at groovy.lang.GroovyShell.evaluate(GroovyShell.java:527)
	at groovy.lang.GroovyShell$evaluate.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:118)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy29.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.LinkService$justGroovy.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-05-06 12:07:50,260 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error
 [See nested exception: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error
]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error

	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:309)
	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:149)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:119)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:131)
	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:359)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:142)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:108)
	at org.codehaus.groovy.control.SourceUnit.parse(SourceUnit.java:236)
	at org.codehaus.groovy.control.CompilationUnit$1.call(CompilationUnit.java:162)
	at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:903)
	at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:566)
	at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:542)
	at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:519)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:118)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 12:07:50,261 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error
 [See nested exception: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error
]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error

	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:309)
	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:149)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:119)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:131)
	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:359)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:142)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:108)
	at org.codehaus.groovy.control.SourceUnit.parse(SourceUnit.java:236)
	at org.codehaus.groovy.control.CompilationUnit$1.call(CompilationUnit.java:162)
	at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:903)
	at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:566)
	at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:542)
	at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:519)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:118)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 12:07:50,261 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error

	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:309)
	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:149)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:119)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:131)
	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:359)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:142)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:108)
	at org.codehaus.groovy.control.SourceUnit.parse(SourceUnit.java:236)
	at org.codehaus.groovy.control.CompilationUnit$1.call(CompilationUnit.java:162)
	at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:903)
	at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:566)
	at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:542)
	at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:519)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:118)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-05-06 12:07:50,261 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error
 [See nested exception: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error
]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: expecting EOF, found ':' @ line 5, column 43.
       edu.usf.RuleChains.Groovy : 3
                                 ^

1 error

	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:309)
	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:149)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:119)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:131)
	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:359)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:142)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:108)
	at org.codehaus.groovy.control.SourceUnit.parse(SourceUnit.java:236)
	at org.codehaus.groovy.control.CompilationUnit$1.call(CompilationUnit.java:162)
	at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:903)
	at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:566)
	at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:542)
	at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:519)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:118)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 12:14:55,034 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim] [See nested exception: groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim]]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:107)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim]
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.unwrap(ScriptBytecodeAdapter.java:55)
	at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:78)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:141)
	at edu.usf.RuleChains.LinkService$_justSQL_closure4$$EO54lujA.doCall(LinkService.groovy:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReloadedTypeInvoker$2.invoke(ReloadedTypeInvoker.java:122)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1272)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure4.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy29.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1249)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at edu.usf.RuleChains.LinkService$$EO54lujA.justSQL(LinkService.groovy:127)
	at edu.usf.RuleChains.LinkService$$DO54lujA.justSQL(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.OriginalClassInvoker.invoke(OriginalClassInvoker.java:47)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1272)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 12:14:55,060 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim]
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.unwrap(ScriptBytecodeAdapter.java:55)
	at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:78)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:141)
	at edu.usf.RuleChains.LinkService$_justSQL_closure4$$EO54lujA.doCall(LinkService.groovy:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReloadedTypeInvoker$2.invoke(ReloadedTypeInvoker.java:122)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1272)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justSQL_closure4.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy29.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1249)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at edu.usf.RuleChains.LinkService$$EO54lujA.justSQL(LinkService.groovy:127)
	at edu.usf.RuleChains.LinkService$$DO54lujA.justSQL(Unknown Source)
	at edu.usf.RuleChains.LinkService.justSQL(LinkService.groovy)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at edu.usf.RuleChains.LinkService$justSQL.call(Unknown Source)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.OriginalClassInvoker.invoke(OriginalClassInvoker.java:47)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1272)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-05-06 12:14:55,064 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim] [See nested exception: groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim]]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim]
	at edu.usf.RuleChains.LinkService$_justSQL_closure4$$EO54lujA.doCall(LinkService.groovy:128)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService$$EO54lujA.justSQL(LinkService.groovy:127)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 12:14:55,066 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim] [See nested exception: groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim]]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim]
	at edu.usf.RuleChains.LinkService$_justSQL_closure4$$EO54lujA.doCall(LinkService.groovy:128)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService$$EO54lujA.justSQL(LinkService.groovy:127)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 12:14:55,068 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim]
	at edu.usf.RuleChains.LinkService$_justSQL_closure4$$EO54lujA.doCall(LinkService.groovy:128)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService$$EO54lujA.justSQL(LinkService.groovy:127)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-05-06 12:14:55,069 [DefaultPluginScheduler_Worker-2] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim] [See nested exception: groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim]]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: groovy.lang.MissingMethodException: No signature of method: edu.usf.RuleChains.LinkService.getSourceSession() is applicable for argument types: (java.lang.String) values: [baggageclaim]
	at edu.usf.RuleChains.LinkService$_justSQL_closure4$$EO54lujA.doCall(LinkService.groovy:128)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService$$EO54lujA.justSQL(LinkService.groovy:127)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:66)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 12:53:30,238 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: unexpected token: INTO @ line 5, column 24.
                   INSERT INTO testtable (test) VALUES (?)
                          ^

1 error
 [See nested exception: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: unexpected token: INTO @ line 5, column 24.
                   INSERT INTO testtable (test) VALUES (?)
                          ^

1 error
]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrConstructorNewInstance(ReflectiveInterceptor.java:975)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:182)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:190)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: unexpected token: INTO @ line 5, column 24.
                   INSERT INTO testtable (test) VALUES (?)
                          ^

1 error

	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:309)
	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:149)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:119)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:131)
	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:359)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:142)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:108)
	at org.codehaus.groovy.control.SourceUnit.parse(SourceUnit.java:236)
	at org.codehaus.groovy.control.CompilationUnit$1.call(CompilationUnit.java:162)
	at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:903)
	at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:566)
	at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:542)
	at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:519)
	at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:279)
	at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:258)
	at groovy.lang.GroovyShell.parseClass(GroovyShell.java:613)
	at groovy.lang.GroovyShell.parse(GroovyShell.java:625)
	at groovy.lang.GroovyShell.evaluate(GroovyShell.java:516)
	at groovy.lang.GroovyShell.evaluate(GroovyShell.java:556)
	at groovy.lang.GroovyShell.evaluate(GroovyShell.java:527)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:252)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:64)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:118)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy28.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.LinkService$justGroovy.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 12:53:30,241 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: unexpected token: INTO @ line 5, column 24.
                   INSERT INTO testtable (test) VALUES (?)
                          ^

1 error

	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:309)
	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:149)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:119)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:131)
	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:359)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:142)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:108)
	at org.codehaus.groovy.control.SourceUnit.parse(SourceUnit.java:236)
	at org.codehaus.groovy.control.CompilationUnit$1.call(CompilationUnit.java:162)
	at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:903)
	at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:566)
	at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:542)
	at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:519)
	at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:279)
	at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:258)
	at groovy.lang.GroovyShell.parseClass(GroovyShell.java:613)
	at groovy.lang.GroovyShell.parse(GroovyShell.java:625)
	at groovy.lang.GroovyShell.evaluate(GroovyShell.java:516)
	at groovy.lang.GroovyShell.evaluate(GroovyShell.java:556)
	at groovy.lang.GroovyShell.evaluate(GroovyShell.java:527)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:252)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:64)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:118)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.call(LinkService.groovy)
	at org.codehaus.groovy.runtime.ConvertedClosure.invokeCustom(ConvertedClosure.java:51)
	at org.codehaus.groovy.runtime.ConversionHandler.invoke(ConversionHandler.java:82)
	at com.sun.proxy.$Proxy28.doInTransaction(Unknown Source)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSite.invoke(PojoMetaMethodSite.java:189)
	at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.Link.withTransaction(Link.groovy)
	at edu.usf.RuleChains.Link$withTransaction.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.LinkService$justGroovy.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain$execute$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:145)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at edu.usf.RuleChains.Chain$execute.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at org.codehaus.groovy.runtime.InvokerHelper.invokePogoMethod(InvokerHelper.java:848)
	at org.codehaus.groovy.runtime.InvokerHelper.invokeMethod(InvokerHelper.java:831)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodN(ScriptBytecodeAdapter.java:164)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeClosure(ScriptBytecodeAdapter.java:570)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-05-06 12:53:30,242 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: unexpected token: INTO @ line 5, column 24.
                   INSERT INTO testtable (test) VALUES (?)
                          ^

1 error
 [See nested exception: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: unexpected token: INTO @ line 5, column 24.
                   INSERT INTO testtable (test) VALUES (?)
                          ^

1 error
]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: unexpected token: INTO @ line 5, column 24.
                   INSERT INTO testtable (test) VALUES (?)
                          ^

1 error

	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:309)
	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:149)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:119)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:131)
	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:359)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:142)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:108)
	at org.codehaus.groovy.control.SourceUnit.parse(SourceUnit.java:236)
	at org.codehaus.groovy.control.CompilationUnit$1.call(CompilationUnit.java:162)
	at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:903)
	at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:566)
	at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:542)
	at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:519)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:118)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 12:53:30,242 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: unexpected token: INTO @ line 5, column 24.
                   INSERT INTO testtable (test) VALUES (?)
                          ^

1 error
 [See nested exception: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: unexpected token: INTO @ line 5, column 24.
                   INSERT INTO testtable (test) VALUES (?)
                          ^

1 error
]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: unexpected token: INTO @ line 5, column 24.
                   INSERT INTO testtable (test) VALUES (?)
                          ^

1 error

	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:309)
	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:149)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:119)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:131)
	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:359)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:142)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:108)
	at org.codehaus.groovy.control.SourceUnit.parse(SourceUnit.java:236)
	at org.codehaus.groovy.control.CompilationUnit$1.call(CompilationUnit.java:162)
	at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:903)
	at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:566)
	at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:542)
	at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:519)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:118)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-06 12:53:30,243 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: unexpected token: INTO @ line 5, column 24.
                   INSERT INTO testtable (test) VALUES (?)
                          ^

1 error

	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:309)
	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:149)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:119)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:131)
	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:359)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:142)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:108)
	at org.codehaus.groovy.control.SourceUnit.parse(SourceUnit.java:236)
	at org.codehaus.groovy.control.CompilationUnit$1.call(CompilationUnit.java:162)
	at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:903)
	at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:566)
	at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:542)
	at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:519)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:118)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
2013-05-06 12:53:30,243 [DefaultPluginScheduler_Worker-1] ERROR StackTrace  - Full Stack Trace:
org.quartz.JobExecutionException: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: unexpected token: INTO @ line 5, column 24.
                   INSERT INTO testtable (test) VALUES (?)
                          ^

1 error
 [See nested exception: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: unexpected token: INTO @ line 5, column 24.
                   INSERT INTO testtable (test) VALUES (?)
                          ^

1 error
]
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:53)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:213)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:557)
Caused by: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script1.groovy: 5: unexpected token: INTO @ line 5, column 24.
                   INSERT INTO testtable (test) VALUES (?)
                          ^

1 error

	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:309)
	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:149)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:119)
	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:131)
	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:359)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:142)
	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:108)
	at org.codehaus.groovy.control.SourceUnit.parse(SourceUnit.java:236)
	at org.codehaus.groovy.control.CompilationUnit$1.call(CompilationUnit.java:162)
	at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:903)
	at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:566)
	at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:542)
	at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:519)
	at edu.usf.RuleChains.LinkService$_justGroovy_closure3.doCall(LinkService.groovy:118)
	at org.grails.datastore.gorm.GormStaticApi.withTransaction(GormStaticApi.groovy:687)
	at edu.usf.RuleChains.LinkService.justGroovy(LinkService.groovy:105)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:108)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:238)
	at edu.usf.RuleChains.Chain.execute(Chain.groovy:29)
	at BootStrap$_closure1_closure7_closure28.doCall(BootStrap.groovy:175)
	at grails.plugin.quartz2.ClosureJob.execute(ClosureJob.groovy:42)
	... 2 more
2013-05-09 11:55:57,714 [localhost-startStop-1] ERROR StackTrace  - Full Stack Trace:
org.codehaus.groovy.grails.web.converters.exceptions.ConverterException: Error parsing JSON
	at grails.converters.JSON.parse(JSON.java:290)
	at grails.converters.JSON$parse.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1.doCall(BootStrap.groovy:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:956)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at groovy.lang.Closure.call(Closure.java:406)
	at grails.util.Environment.evaluateEnvironmentSpecificBlock(Environment.java:308)
	at grails.util.Environment.executeForEnvironment(Environment.java:301)
	at grails.util.Environment.executeForCurrentEnvironment(Environment.java:277)
	at org.codehaus.groovy.grails.commons.DefaultGrailsBootstrapClass.callInit(DefaultGrailsBootstrapClass.java:60)
	at org.codehaus.groovy.grails.web.context.GrailsConfigUtils.executeGrailsBootstraps(GrailsConfigUtils.java:74)
	at org.codehaus.groovy.grails.web.context.GrailsContextLoader.initWebApplicationContext(GrailsContextLoader.java:108)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4887)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5381)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1559)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1549)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
	at java.lang.Thread.run(Thread.java:680)
Caused by: org.codehaus.groovy.grails.web.json.JSONException: Expected a ',' or ']' at character 59794 of {    
    "ruleSets": [
        {   
            "name": "debugRuleSet",
            "rules": [
                {
                    "name": "GEMS_test_rule_2",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "GEMS_test_rule",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "GEMS_test_rule_again",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "GEMS_test_rule_again_2",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "Dummy_Insert_Input_Reorder",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO test_dump_min (identifier_type_id,identifier,ssn_identifier_type_id,ssn,birthdate,deathdate,sex,prefix,firstName,middleName,lastName,suffix,source_id) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)"
                },
                {
                    "name": "Dummy_INSERT",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO test_dump (\n\tidentifier_type_id,\n\tidentifier,\n\tssn_identifier_type_id,\n\tssn,\n\tbirthdate,\n\tdeathdate,\n\tsex,prefix,\n\tfirstName,\n\tmiddleName,\n\tlastName,\n\tsuffix,\n\tsource_id) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)"
                },
                {
                    "name": "This_is_a_bum_rule",
                    "class": "SQLQuery",
                    "rule": "SELECT '1' FROM DUAL"
                },
                {
                    "name": "This_is_a_bum_PA_rule",
                    "class": "SQLQuery",
                    "rule": "SELECT loaded_dt FROM people_admin"
                },
                {
                    "name": "BC_Select",
                    "class": "SQLQuery",
                    "rule": "SELECT ssn,birthdate,firstName,lastName FROM test_dump_min"
                },
                {
                    "name": "Select_Test",
                    "class": "SQLQuery",
                    "rule": "SELECT 'James','Patrick','Jones' FROM DUAL"
                },
                {
                    "name": "Select_Prepare",
                    "class": "SQLQuery",
                    "rule": "SELECT ?,?,? FROM DUAL"
                },
                {
                    "name": "Append_Wilhoit",
                    "class": "SQLQuery",
                    "rule": "SELECT 'Wilhoit' FROM DUAL"
                },
                {
                    "name": "DROP_TABLE_cool2",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE cool2"
                },
                {
                    "name": "adsf",
                    "class": "SQLQuery",
                    "rule": "SELECT *\nFROM Andy"
                }
                
            ]
        },
        {
            "name": "GEMS_Silver_Rule_Set_2_x",
            "rules": [
                {
                    "name": "GEMS_Silver_Rule_Population",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN TRIM(pd.name_title) IS NULL OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n        AND SUBSTR(pd.EMPLID,1,5) = '00000'  \n        AND REGEXP_LIKE(pd.emplid, '^[[:digit:]]{11}$') \n\tORDER BY pd.emplid desc"
                },
                {
                    "name": "Update_Active_Status_Emplid",
                    "class": "SQLQuery",
                    "rule": "SELECT identifier\n\tFROM pro_identifiers \n\tWHERE identifier_type_id=3 AND source_id=12\n\tORDER BY identifier"
                },
                {
                    "name": "Update_Active_Status_SSN_GEMS",
                    "class": "SQLQuery",
                    "rule": "SELECT identifier\n\tFROM pro_identifiers \n\tWHERE identifier_type_id=1 AND source_id =12\n\tORDER BY identifier"
                },
                {
                    "name": "GEMS_HRPR_Iterator",
                    "class": "SQLQuery",
                    "rule": "SELECT identifier\n\tFROM pro_identifiers \n\tWHERE identifier_type_id=13 AND source_id =12\n\tORDER BY identifier"
                },
                {
                    "name": "GEMS_SSNExistTest",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 AS SSN_IDENTIFIER_TYPE,COUNT(*) AS GEMS_SSNCount\n\tFROM ps_pers_nid n\n\tWHERE n.country(+) = 'USA'\n\tAND n.national_id_type(+) = 'PR'\n\tAND trim(n.national_id) = ?"
                },
                {
                    "name": "GEMS_HRPRExistTest",
                    "class": "SQLQuery",
                    "rule": "SELECT 13 AS HRPR_IDENTIFIER_TYPE,COUNT(*) AS HRPRCount\n\tFROM ps_pers_nid n\n\tWHERE n.country(+) = 'USA'\n\tAND n.national_id_type(+) = 'PR'\n\tAND trim(n.national_id) = ?"
                },
                {
                    "name": "Emplid_Exist_Test",
                    "class": "SQLQuery",
                    "rule": "SELECT 3 AS EMPL_IDENTIFIER_TYPE, COUNT(*) AS EmplidCount\n\tFROM ps_personal_data pd\n\tWHERE pd.emplid=?"
                },
                {
                    "name": "Set_Empl_Active_Flag",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET status='Active',\n\tsource_id=?\n\tWHERE identifier=?\n\tAND identifier_type_id=?\n\tAND identifier_status_id != (\n\t\tSELECT identifier_status_id \n\t\t\tFROM identifier_statuses \n\t\t\tWHERE `name`='Active'\n\t)\n\tAND ? > 0"
                },
                {
                    "name": "Set_Empl_Inactive_Flag",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET status='Inactive'\n\tWHERE source_id=?\n\tAND identifier=?\n\tAND identifier_type_id=?\n\tAND identifier_status_id != (\n\t\tSELECT identifier_status_id \n\t\t\tFROM identifier_statuses \n\t\t\tWHERE `name`='Inactive'\n\t)\n\tAND ? < 1"
                },
                {
                    "name": "Add_GEMS_Source",
                    "class": "SQLQuery",
                    "rule": "SELECT 14 AS source_id FROM DUAL"
                },
                {
                    "name": "BaggageClaimSORCreate",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE `incomming_sor_records` (\n  `primary_identifier_type_id` bigint(18) unsigned DEFAULT NULL,\n  `primary_identifier` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `secondary_identifier_type_id` bigint(18) unsigned DEFAULT NULL,\n  `secondary_identifier` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `birthday` date DEFAULT NULL,\n  `deathday` date DEFAULT NULL,\n  `gender` varchar(10) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `prefix` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `firstname` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `middlename` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `lastname` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `suffix` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `baggage_source_id` bigint(18) unsigned DEFAULT NULL,\n  `status` enum('Valid','Invalid') COLLATE utf8_unicode_ci DEFAULT NULL,\n  KEY `incomming_sor_records_baggage_source_id` (`baggage_source_id`),\n  CONSTRAINT `incomming_sor_records_baggage_source_id` FOREIGN KEY (`baggage_source_id`) REFERENCES `baggage_sources` (`baggage_source_id`) ON DELETE SET NULL ON UPDATE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;"
                },
                {
                    "name": "Add_new_BC_Source",
                    "class": "SQLQuery",
                    "rule": "INSERT IGNORE INTO baggage_sources (baggage_source_id,cims_pr_source_id,name,format) \nVALUES ('5','14','GEMS-DATABASE','DATABASE')"
                },
                {
                    "name": "Update_SOR",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO incomming_sor_records\n(primary_identifier_type_id,primary_identifier,secondary_identifier_type_id,\nsecondary_identifier,birthday,deathday,gender,prefix,firstname,middlename,lastname,\nsuffix,baggage_source_id,status) VALUES\n(?,?,?,?,?,?,?,?,?,?,?,?,5,'Valid')"
                },
                {
                    "name": "GEMS_Recent_Activ_Pop",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN TRIM(pd.name_title) IS NULL OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n        AND SUBSTR(pd.EMPLID,1,5) = '00000'  \n        AND REGEXP_LIKE(pd.emplid, '^[[:digit:]]{11}$') \nand (pd.lastupddttm > (sysdate - 1) or n.lastupddttm > (sysdate - 1))\n\tORDER BY pd.emplid desc"
                },
                {
                    "name": "Reassemble_Params",
                    "class": "SQLQuery",
                    "rule": "SELECT idinfo.source_id,idinfo.identifier_type_id,idinfo.identifier,idinfo.source_id\n\tFROM\n\t\t(\n\t\t\tSELECT \n\t\t\t\t? AS identifier_type_id,\n\t\t\t\t? AS identifier,\n\t\t\t\t? AS ssn_identifier_type_id,\n\t\t\t\t? AS ssn,\n\t\t\t\t? AS birthdate,\n\t\t\t\t? AS deathdate,\n\t\t\t\t? AS gender,\n\t\t\t\t? AS prefix,\n\t\t\t\t? AS first_name,\n\t\t\t\t? AS middle_name,\n\t\t\t\t? AS last_name,\n\t\t\t\t? AS suffix,\n\t\t\t\t? AS source_id\n\t\t\tFROM DUAL\n\t\t) AS idinfo"
                },
                {
                    "name": "Set_the_authoritative_source",
                    "class": "SQLQuery",
                    "rule": "UPDATE idr_identifiers\n\tSET status='Active' AND source_id=?\n\tWHERE identifier_type_id=? AND identifier=? AND source_id != ?"
                },
                {
                    "name": "Set_the_Gems_import_source",
                    "class": "SQLQuery",
                    "rule": "SELECT 5 AS importSourceId FROM DUAL"
                }
            ]  
        },
        {
            "name": "CIMS_PRStoredProcedures2x",
            "rules": [
                {
                    "name": "PrsBiodemUpdater",
                    "class": "NamedQuery",
                    "rule": "personId,birthday,deathday,gender,sourceId"
                },
                {
                    "name": "PrsNamesUpdater",
                    "class": "NamedQuery",
                    "rule": "personId,prefix,firstname,middlename,lastname,suffix,sourceId"
                },
                {
                    "name": "PrcPersonSilverRuleCheck",
                    "class": "NamedQuery",
                    "rule": "ssn,birthday,firstname,lastname"
                },
                {
                    "name": "PrsBiodemValidPastDate",
                    "class": "NamedQuery",
                    "rule": "dateString"
                },
                {
                    "name": "PrcPersonByIdentifier",
                    "class": "NamedQuery",
                    "rule": "identifierTypeId,identifier"
                },
                {
                    "name": "PrcPersonsCreateNew",
                    "class": "NamedQuery",
                    "rule": "sourceId"
                },
                {
                    "name": "PrcPersonMerge",
                    "class": "NamedQuery",
                    "rule": "primaryIdentifierTypeId, primaryIdentifier,secondaryIdentifierTypeId,secondaryIdentifier,birthday,deathday,gender,prefix,firstname,middlename,lastname,suffix,sourceId"
                },
                {
                    "name": "ProIdentifierStatusSet",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "ImpRepositoryIdentityNew",
                    "class": "SQLQuery",
                    "rule": "SELECT imp_repository_identity_new(?) FROM DUAL"
                },
                {
                    "name": "ImpRepositoryMerge",
                    "class": "NamedQuery",
                    "rule": "importSourceId,firstname,middlename,lastname,gender,birthday,unparsedLine"
                }
            ]   
        },
        {
            "name": "CIMS_PRBaggageClaimMerge",
            "rules": [
                {
                    "name": "PeopleAdmin_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT loaded_dt,\n\thpid AS HPID,\n\tIF(ssn = 'No Response','',REPLACE(ssn,'-','')) AS SSN,\n\tIF(LEFT(UPPER(usfid),1) != 'U','',IF(LENGTH(usfid) = 9,usfid,'')) AS USFID,\n\tIF(emplid = 'No Response','',LPAD(TRIM(emplid),11,'0')) AS EMPLID,\n\tIF(fname = 'No Response','',TRIM(fname)) AS FIRSTNAME,\n\tIF(mname = 'No Response','',TRIM(mname)) AS MIDDLENAME,\n\tIF(lname = 'No Response','',TRIM(lname)) AS LASTNAME,\n\tIF(gender IN('M','F'),gender,'') AS GENDER,\n\tIF(dob = 'No Response',NULL,TRIM(dob)) AS BIRTHDAY,\n\tRTRIM(baggage) AS BAGGAGE\n\tFROM nams.people_admin\n\tWHERE DATE(loaded_dt) != '0000-00-00'"
                },
                {
                    "name": "CardID_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT to_char(ID_ISSUE_DATE,'YYYY-MM-DD') AS IMPORT_DATE,\n\tID_CARD_NUMBER,\n\tNAME_FIRST AS FIRSTNAME,\n\tNAME_MIDDLE AS MIDDLENAME,\n\tNAME_LAST AS LASTNAME,\n\tto_char(BIRTH_DATE,'YYYY-MM-DD') AS BIRTHDAY\n\tFROM ID WHERE ROWNUM < 50"
                },
                {
                    "name": "NAMS_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT \n\tNOW() AS IMPORT_DATE,\n\tn.badge AS NAMSID,\n\tn.fname AS FIRSTNAME,\n\tn.mname AS MIDDLENAME,\n\tn.lname AS LASTNAME,\n\tSTR_TO_DATE(CONCAT('',\n\t\tIF(\n\t\t\t((SELECT COUNT(*) FROM bdays WHERE badge=n.badge AND bday > 0 ORDER BY bdayid DESC LIMIT 1) < 1),\n\t\t\tn.bday,\n\t\t\t(SELECT bday FROM bdays WHERE badge=n.badge AND bday > 0 ORDER BY bdayid DESC LIMIT 1)\n\t\t) \n\t) ,'%Y%m%d') AS BIRTHDAY\n\tFROM names n\n\tWHERE \n\t(SELECT COUNT(*) FROM oasis WHERE badge=n.badge LIMIT 1) > 0 \n\tOR\n\t(SELECT COUNT(*) FROM gems WHERE badge=n.badge LIMIT 1) > 0"
                }
            ]   
        },
        {
            "name": "CIMS_PRBaggageClaimMergeOtherRules",
            "rules": [
                {
                    "name": "People_Admin_Request",
                    "class": "SQLQuery",
                    "rule": "SELECT 2 AS importSourceId,0 AS reconcile FROM DUAL;"
                },
                {
                    "name": "People_Admin_Request",
                    "class": "SQLQuery",
                    "rule": "SELECT 2 AS importSourceId,0 AS reconcile FROM DUAL;"
                },
                {
                    "name": "ImportToBaggageClaim",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "Dummy_ParamCollector_for_ImportToBaggageClaim_Defined_Service_loop",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS baggageClaimIdentityId, CAST(? AS UNSIGNED) AS personId, ? AS importSourceId, ? AS sourceId, ? AS baggageClaimIdentityStatusId, ? AS firstName, ? AS middleName, ? AS lastName, ? AS gender, ? AS dateOfBirth"
                },
                {
                    "name": "AddToBaggageClaim",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "PeopleAdmin_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT \n\t2 AS importSourceId,\n\tIF(fname = 'No Response','',TRIM(fname)) AS FIRSTNAME,\n\tIF(mname = 'No Response','',TRIM(mname)) AS MIDDLENAME,\n\tIF(lname = 'No Response','',TRIM(lname)) AS LASTNAME,\n\tIF(gender IN('M','F'),gender,'') AS GENDER,\n\tIF(dob = 'No Response','',TRIM(REPLACE(dob,'/','-'))) AS BIRTHDAY,\n\tloaded_dt,\n\tCONCAT('[{\"identifier\":\"',hpid,'\",\"identifierType\":{\"identifierTypeId\":\"10\"}},{\"identifier\":\"',IF(ssn = 'No Response','',REPLACE(ssn,'-','')),'\",\"identifierType\":{\"identifierTypeId\":\"1\"}},{\"identifier\":\"',IF(LEFT(UPPER(usfid),1) != 'U','',IF(LENGTH(usfid) = 9,usfid,'')),'\",\"identifierType\":{\"identifierTypeId\":\"2\"}},{\"identifier\":\"',IF(emplid = 'No Response','',LPAD(TRIM(emplid),11,'0')),'\",\"identifierType\":{\"identifierTypeId\":\"3\"}}]') AS baggageClaimIdentifiers,\n\tRTRIM(baggage) AS BAGGAGE\n\tFROM nams.people_admin\n\tWHERE DATE(loaded_dt) != '0000-00-00' LIMIT 10"
                },
                {
                    "name": "Reconcile_Defined_Service",
                    "class": "DefinedService"
                },
                {
                    "name": "ImportIdentityToBaggageClaimPeopleAdmin",
                    "class": "DefinedService"
                },
                {
                    "name": "Prepend_PeopleAdmin_Source",
                    "class": "SQLQuery",
                    "rule": "SELECT 2 AS importSourceId FROM DUAL"
                },
                {
                    "name": "Prepend_Gems_Import_Source",
                    "class": "SQLQuery",
                    "rule": "SELECT 5 AS importSourceId FROM DUAL"
                },
                {
                    "name": "Prepend_Gems_Import_Source_and_Current_Timestamp",
                    "class": "SQLQuery",
                    "rule": "SELECT 5 AS importSourceId,NOW() AS importTimestamp,\"\" AS claimInfo FROM DUAL"
                },
                {
                    "name": "Prepend_VIP_Import_Source_and_Current_Timestamp",
                    "class": "SQLQuery",
                    "rule": "SELECT 8 AS importSourceId,NOW() AS importTimestamp FROM DUAL"
                },
                {
                    "name": "ImportIdentityToBaggageClaimHealth",
                    "class": "DefinedService"
                },
                {
                    "name": "ImportIdentityToBaggageClaimGEMS",
                    "class": "DefinedService"
                }
            ]    
        },
        {
            "name": "NamsDefinedServices",
            "rules": [
                {
                    "name": "NetIDToEMail_Defaults",
                    "class": "SQLQuery",
                    "rule": "SELECT 'netid' AS submit_type,'mail' AS return_type,'json' AS `return`,? AS `value` FROM DUAL"
                },
                {
                    "name": "WsConvertNetidToMail",
                    "class": "DefinedService"
                }
            ]     
        },
        { 
            "name": "UnumberDefinedServices",
            "rules": [
                {
                    "name": "Unumber_Defaults",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 AS personId,2 AS personAllocatedId,2 AS identifierTypeId, ? AS amount FROM DUAL"
                },
                {
                    "name": "ReallocatePoolIdentifiers",
                    "class": "DefinedService"
                }
            ]      
        },
        { 
            "name": "IdentityMergeRules",
            "rules": [
                {
                    "name": "Unumber_Defaults",
                    "class": "SQLQuery",
                    "rule": "SELECT \n? AS PrimaryIdentifierType,\n? AS PrimaryIdentifier,\n? AS SecondaryIdentifierType,\n? AS SecondaryIdentifier,\n? AS BirthDate,\n? AS DeathDate,\n? AS Gender,\n? AS Prefix,\n? AS FirstName,\n? AS MiddleName,\n? AS LastName,\n? AS Suffix,\n? AS SourceId\nFROM DUAL\t"
                },
                {
                    "name": "Set_Past_year_Limit",
                    "class": "SQLQuery",
                    "rule": "SELECT 150 AS maxyears FROM DUAL"
                },
                {
                    "name": "PrsBiodemValidPastDateLimit",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "PrsBiodemValidPastDate",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "FilterIdentifier",
                    "class": "DefinedService"
                },
                {
                    "name": "UniqueIdentifierMatch",
                    "class": "SQLQuery",
                    "rule": "SELECT foundUniquePerson.person_id AS personId,\n? AS PrimaryIdentifierType,\n? AS PrimaryIdentifier,\n? AS SecondaryIdentifierType,\n? AS SecondaryIdentifier,\n? AS BirthDate,\n? AS DeathDate,\n? AS Gender,\n? AS Prefix,\n? AS FirstName,\n? AS MiddleName,\n? AS LastName,\n? AS Suffix,\n? AS SourceId\nFROM (\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n\tUNION\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n) AS foundUniquePerson HAVING COUNT(*)=1"
                },
                {
                    "name": "ValidIdentfiersSet",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS person_id,\nidentifiers.identifier_type_id,\nidentifiers.identifier,\n? AS SourceId\nFROM (\n\tSELECT identifier_type_id,identifier FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0\n\tUNION\n\tSELECT identifier_type_id,identifier FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0\n) AS identifiers"
                },
                {
                    "name": "IdentifierSourceUpdate",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET source_id=?\n\tWHERE  source_id !=? AND identifier_type_id=? AND identifier=? AND person_id=?"
                },
                {
                    "name": "IdentifierReallocationUpdate",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET person_id = ?\n\tWHERE identifier_type_id=? AND identifier=? AND person_id !=? AND identifier_status_id != (SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active');"
                },
                {
                    "name": "IdentifierStatusUpdate",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET identifier_status_id = (SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active') AND merge_date=NOW()\n\tWHERE identifier_type_id=? AND identifier=? AND person_id=? AND identifier_status_id != (SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active');"
                },
                {
                    "name": "NameChangeDetection",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS prefix,? AS FirstName,? AS MiddleName,? AS LastName,? AS Suffix,? AS SourceId,? AS personId\nFROM DUAL WHERE \n(SELECT COUNT(*) FROM (\n\tSELECT prefix,firstname,middlename,lastname,suffix FROM prs_names WHERE source_id=? AND person_id=? ORDER BY last_changed DESC LIMIT 1\n) AS lastNameBySource\nWHERE prefix=? AND firstname=? AND middlename=? AND lastname=? AND suffix=?) < 1"
                },
                {
                    "name": "NameCreateNew",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO prs_names (prefix,firstname,middlename,lastname,suffix,source_id,person_id,last_changed) VALUES(?,?,?,?,?,?,?,NOW())"
                },
                {
                    "name": "BioDemChangeDetection",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS date_of_birth,? AS date_of_death,? AS gender,? AS SourceId,? AS PersonId\nFROM DUAL WHERE \n(SELECT COUNT(*) FROM (\n\tSELECT date_of_birth,date_of_death,gender FROM prs_biodem WHERE source_id=? AND person_id=? ORDER BY last_changed DESC LIMIT 1\n) AS lastNameBySource\nWHERE date_of_birth=? AND date_of_death=? AND gender=?) < 1"
                },
                {
                    "name": "BioDemCreateNew",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO prs_biodem (date_of_birth,date_of_death,gender,source_id,person_id,last_changed) VALUES(?,?,?,?,?,NOW())"
                },
                {
                    "name": "IdentifierNewDetection",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS identifier_type_id,? AS identifier,? AS sourceId,? AS personId\n\tFROM DUAL\n\tWHERE LENGTH(TRIM(?)) > 0 AND (SELECT COUNT(*) FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0) < 1"
                },
                {
                    "name": "IdentifierCreateNew",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO pro_identifiers (identifier_type_id,identifier,source_id,person_id,merge_date,identifier_status_id) VALUES(?,?,?,?,NOW(),(SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active'))"
                },
                {
                    "name": "EndLoop_Filler",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 FROM DUAL"
                },
                {
                    "name": "NoUniqueIdentifierCheck",
                    "class": "SQLQuery",
                    "rule": "SELECT \n? AS PrimaryIdentifierType,\n? AS PrimaryIdentifier,\n? AS SecondaryIdentifierType,\n? AS SecondaryIdentifier,\n? AS BirthDate,\n? AS DeathDate,\n? AS Gender,\n? AS Prefix,\n? AS FirstName,\n? AS MiddleName,\n? AS LastName,\n? AS Suffix,\n? AS SourceId\nFROM DUAL\nWHERE\n(SELECT COUNT(*) FROM\n(\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n\tUNION\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n) AS foundUniquePerson) !=1"
                }
            ]     
        },
        { 
            "name": "Snippets",
            "rules": [
                {
                    "name": "IdentityMergeChainDualIdentifiers",
                    "class": "Snippet"
                }
            ]      
        },
        { 
            "name": "AndysRuleSet",
            "rules": [
                {
                    "name": "Create_Table",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE andy \n(\nid INT,\ndata VARCHAR(100)\n);"
                },
                {
                    "name": "Create_Table_2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE andy2\n(\nid INT,\ndata VARCHAR(100),\ndata2 VARCHAR(100)\n);"
                },
                {
                    "name": "Populate",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES ('1', 'Andy1');"
                },
                {
                    "name": "Populate2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES ('2', 'Andy2');"
                },
                {
                    "name": "Populate4",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy2 VALUES (?,?,CONCAT(?,?));"
                },
                {
                    "name": "SELECT_FROM_DUAL",
                    "class": "SQLQuery",
                    "rule": "Select \"3\", \"Andy4\" FROM DUAL"
                },
                {
                    "name": "Populate3",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?,?);"
                },
                {
                    "name": "loop",
                    "class": "SQLQuery",
                    "rule": "SELECT id, data FROM andy"
                }
            ]      
        },
        { 
            "name": "AndysSecondRuleSet",
            "rules": [
                {
                    "name": "DROP_TABLE",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS cool"
                },
                {
                    "name": "DROP_TABLE_cool2",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS cool2"
                },
                {
                    "name": "Create_Table_cool",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE cool ( id INT, data VARCHAR(100));"
                },
                {
                    "name": "Create_Table_cool2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE cool2 (id INT, data VARCHAR(100), id2 INT, data2 VARCHAR(100))"
                },
                {
                    "name": "Populate_cool_1",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool VALUES ('1', 'dataone')"
                },
                {
                    "name": "Populate_cool_2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool VALUES ('2', 'datatwo')"
                },
                {
                    "name": "Select_From_Table_cool",
                    "class": "SQLQuery",
                    "rule": "SELECT id, data FROM cool WHERE id = 1;"
                },
                {
                    "name": "Select_From_Table_cool_2",
                    "class": "SQLQuery",
                    "rule": "SELECT id, data FROM cool WHERE id = 2"
                },
                {
                    "name": "Insert_Into_Cool2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool2 (id, data, id2, data2) VALUES (?,?,?,?)"
                }
            ]       
        },
        { 
            "name": "WaynesFirstRuleSet",
            "rules": [
                {
                    "name": "Create_Table",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE cool\n(\nid int, data VARCHAR(100)\n);"
                },
                {
                    "name": "Populate_Table",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool\nVALUES\n(1, dataone);"
                },
                {
                    "name": "Populate_Table_2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool\nVALUES\n(1, dataone);"
                }
            ]      
        },
        { 
            "name": "PrependJPJ",
            "rules": [
                {
                    "name": "Rule1",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 FROM DUAL"
                },
                {
                    "name": "Rule2",
                    "class": "SQLQuery",
                    "rule": "SELECT \"Andy\" FROM DUAL"
                },
                {
                    "name": "Rule3",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES(?,?)"
                }
            ]      
        },
        { 
            "name": "WaynesDemofilecabinet",
            "rules": [
                {
                    "name": "Create_Table_1",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE demo\n(\nfirst_name VARCHAR(25),\nlast_name VARCHAR(25),\ncity VARCHAR(20),\nstate VARCHAR(2),\nbirth DATE NOT NULL\n);"
                },
                {
                    "name": "Populate_value_1",
                    "class": "SQLQuery",
                    "rule": "SELECT \"Randy\", \"Smith\", \"Tampa\", \"FL\", \"2012-01-18\" FROM DUAL"
                },
                {
                    "name": "Insert_values_1",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO demo\nVALUES (\n?, ?, ?, ?, ?\n);"
                },
                {
                    "name": "Drop_Table",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS demo;"
                },
                {
                    "name": "Update_Table",
                    "class": "SQLQuery",
                    "rule": "UPDATE demo\nSET\ndate = \"2012-01-23\"\nWHERE date = \"2012-01-18\";"
                }
            ]     
        },
        { 
            "name": "Drink_InfoExercise1set",
            "rules": [
                {
                    "name": "drop_output_drinks_table",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS output_drinks;"
                },
                {
                    "name": "create_output_drinks_table",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE output_drinks\n(\nname VARCHAR(25),\ncalcost VARCHAR(5)\n);"
                },
                {
                    "name": "query_results",
                    "class": "SQLQuery",
                    "rule": "SELECT drink_name, ROUND(calories/cost, 2) AS calcost FROM drink_info"
                },
                {
                    "name": "output_to_output_drinks",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO output_drinks\nVALUES (\n?, ?\n);"
                }
            ]     
        },
        {   
            "name": "Drink_InfoExercise2set",
            "rules": [
                {
                    "name": "drop_table_output_drinks2",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS output_drinks2;"
                },
                {
                    "name": "create_table_output_drinks2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE output_drinks2\n(\ndrink_name VARCHAR(25),\ncal_carbs VARCHAR(20)\n);"
                },
                {
                    "name": "query_drink_info",
                    "class": "SQLQuery",
                    "rule": "SELECT drink_name, ROUND(calories/carbs, 2) AS cal_carbs FROM drink_info;"
                },
                {
                    "name": "output_to_output_drinks2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO output_drinks2\nVALUES (\n?, ?\n);"
                }                
            ]   
        },
        {   
            "name": "AndysLoop",
            "rules": [
                {
                    "name": "Drop_Tables_Created",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS loop1, loop2"
                },
                {
                    "name": "Create_Loop_Table_1",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE loop1 (id INT, dataone VARCHAR(20), datatwo VARCHAR(20))"
                },
                {
                    "name": "Create_Loop_Table_2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE loop2 (id INT, dataone VARCHAR(20), datatwo VARCHAR(20))"
                },
                {
                    "name": "Populate_Loop_Table_1",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO loop1 VALUES (1,'a','b'),(2,'c','d'),(3,'e','f'),(4,'g','h'),(5,'i','j'),(6,'k','l')"
                },
                {
                    "name": "Select_where_id_lt_4",
                    "class": "SQLQuery",
                    "rule": "SELECT id, dataone, datatwo FROM loop1 where id < 4"
                },
                {
                    "name": "Populate_Loop_Table_2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO loop2 VALUES (?,?,?)"
                }
            ]      
        },
        {   
            "name": "Drink_infoexerciseset3",
            "rules": [
                {
                    "name": "DROP_TABLE",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS output_drinks3;"
                },
                {
                    "name": "CREATE_TABLE",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE output_drinks3\n(\ndrink_name VARCHAR(30),\ncarbs_cost VARCHAR(30)\n);"
                },
                {
                    "name": "QUERY_drink_info_TABLE",
                    "class": "SQLQuery",
                    "rule": "SELECT drink_name, ROUND(carbs/cost, 2) AS carbs_cost FROM drink_info;"
                },
                {
                    "name": "OUTPUT_TO_NEW_TABLE",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO output_drinks3\nVALUES (\n?,?\n);"
                }
            ]      
        },
        {   
            "name": "AndysThirdRuleSet",
            "rules": [
                {
                    "name": "Create_Table_andy3",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE IF NOT EXISTS andy3 (column1 VARCHAR(20), column2 VARCHAR(20))"
                },
                {
                    "name": "Create_Table_andy4",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE IF NOT EXISTS andy4 (column1 VARCHAR(20), column2 VARCHAR(20))"
                },
                {
                    "name": "Populate_andy3",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy3 VALUES ('1', 'ONE'), ('2', 'two'), ('3', 'three'), ('4', 'four')"
                },
                {
                    "name": "SELECT_WHERE_column1_lt_4",
                    "class": "SQLQuery",
                    "rule": "SELECT column1, column2 FROM andy3 WHERE column1 < 4;"
                },
                {
                    "name": "Populate_andy4_With_Loop_Data",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy4 VALUES (?,?)"
                }                
            ]     
        },
        {   
            "name": "AndysSnippit",
            "rules": [
                {
                    "name": "AndysRuleChain",
                    "class": "Snippet"
                }
            ]    
        },
        {   
            "name": "GEMSLiteHourly",
            "rules": [
                {
                    "name": "GEMS_Recent_Active_Pop",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,p.emplid,\n  CASE\n    WHEN substr(n.national_id, 1, 3)  IN ('949') THEN 13\n    ELSE 1\n  END AS SSN_IDENTIFIER_TYPE\n  , trim(n.national_id) as ssn\n  , to_char(p.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n  , to_char(p.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n  , pde.sex\n  , CASE WHEN TRIM(na.name_title) IS NULL OR na.name_title IS NULL \n    THEN substr(trim(na.name_prefix),1,10)\n    ELSE substr(trim(na.name_title),1,10)\n    END as name_prefix \n  , substr(trim(na.first_name),1,100) as first_name\n  , substr(trim(na.middle_name),1,100) as middle_name\n  , substr(trim(na.last_name),1,100) as last_name\n  , substr(trim(na.name_suffix),1,10) as name_suffix\n  , 12 AS gems_source_id\n  from ps_person p\n  join ps_names na on na.emplid = p.emplid\n  left outer join (select pde1.emplid, pde1.lastupddttm, pde1.sex from ps_pers_data_effdt pde1 \n         where pde1.effdt = (select max(pde2.effdt) from ps_pers_data_effdt pde2 where pde2.emplid = pde1.emplid and pde2.effdt <= sysdate)\n       ) pde on pde.emplid = p.emplid\n  left outer join ps_pers_nid n on n.emplid = p.emplid and n.country = 'USA' and n.national_id_type = 'PR'\n  where SUBSTR(p.EMPLID,1,5) = '00000'  \n  AND REGEXP_LIKE(p.emplid, '^[[:digit:]]{11}$') \n  AND na.name_type = 'PRI'\n  AND na.effdt = (select max(na2.effdt) from ps_names na2 where na2.emplid = na.emplid and na2.name_type = na.name_type and na2.effdt <= sysdate)\n  AND TRIM(na.last_name) IS NOT NULL\n  AND ( p.birthdate IS NOT NULL OR TRIM(n.national_id) IS NOT NULL )\n and ((p.last_child_upddtm > (sysdate - 45) or na.lastupddttm > (sysdate - 45) or pde.lastupddttm > (sysdate - 45) or n.lastupddttm > (sysdate - 45))\n      or p.emplid in ('00000064435'))\n  ORDER BY p.emplid desc"
                },
                {
                    "name": "CIMS_PR_Identity_Merge",
                    "class": "SQLQuery",
                    "rule": "CALL cims_pr.idr_identity_merge(?,?,?,?,?,?,?,?,?,?,?,?,?)"
                },
                {
                    "name": "InsertConflicts",
                    "class": "SQLQuery",
                    "rule": "insert ignore into ctx_identifier_conflicts (\n   identifier_type_id,\n   identifier,\n   source_id,\n   current_identity_id,\n   conflicting_identity_id\n) select '42' as id_type_id, \n\t\t\t'DOB+LN+FN dup' as identifier, \n\t\t\tb1.source_id,\n\t\t\tb1.identity_id,\n\t\t\tb2.identity_id\nfrom idr_biodem b1\njoin idr_names na1 on na1.identity_id = b1.identity_id \njoin idr_identifiers e1 on e1.identity_id = b1.identity_id and e1.identifier_type_id not in ( 2, 4, 1, 13, 10, 11, 42 ) and e1.status = 'Active'\nleft outer join idr_identifiers u1 on u1.identity_id = b1.identity_id and u1.identifier_type_id = 2 and u1.status = 'Active'\nleft outer join ctx_identifier_conflicts ic on ic.current_identity_id = b1.identity_id and ic.identifier = 'DOB+LN+FN dup'\nleft outer join idr_identifiers ssn1 on ssn1.identity_id = b1.identity_id and ssn1.identifier_type_id = 1 and ssn1.status = 'Active'\njoin idr_biodem b2 on b2.date_of_birth = b1.date_of_birth and b2.identity_id <> b1.identity_id\njoin idr_names na2 on na2.identity_id = b2.identity_id and na2.lastname = na1.lastname and na2.firstname = na1.firstname\nleft outer join idr_identifiers ssn2 on ssn2.identity_id = b2.identity_id and ssn2.identifier_type_id = 1 and ssn2.status = 'Active'\nwhere (ssn1.identifier IS NULL or ssn2.identifier IS NULL)\nand u1.identity_id IS NULL\nand ic.current_identity_id IS NULL\nand na1.change_id = (select max(naX.change_id) from idr_names naX where naX.identity_id = na1.identity_id and naX.source_id = na1.source_id)\nand na2.change_id = (select max(naY.change_id) from idr_names naY where naY.identity_id = na2.identity_id and naY.source_id = na2.source_id)\ngroup by '42', \n\t\t\t'DOB+LN+FN dup', \n\t\t\tb1.source_id, \n\t\t\tb1.identity_id,\n\t\t\tb2.identity_id\nUNION\nselect '42' as id_type_id, \n\t\t\t'Multiple active SSNs' as identifier, \n\t\t\tssn1.source_id as source_id1,\n\t\t\tssn1.identity_id as ident1,\n\t\t\tssn2.identity_id as ident2\t\nfrom idr_identifiers ssn1\njoin idr_identifiers ssn2 on ssn2.identity_id = ssn1.identity_id \n\t\t\tand ssn2.identifier_type_id = 1\n\t\t\tand ssn2.status = 'Active'\n\t\t\tand ssn2.identifier <> ssn1.identifier\nleft outer join ctx_identifier_conflicts ic on ic.current_identity_id = ssn1.identity_id \n\t\t\tand ic.identifier = 'Multiple active SSNs'\nwhere ssn1.identifier_type_id = 1\nand ssn1.status = 'Active'\nand ic.current_identity_id IS NULL\ngroup by '42', \n\t\t\t'Multiple active SSNs', \n\t\t\tssn1.source_id,\n\t\t\tssn1.identity_id,\n\t\t\tssn2.identity_id\nUNION\nselect '42' as id_type_id, \n\t\t\t'Multiple active EmplIDs' as identifier, \n\t\t\te1.source_id as source_id1,\n\t\t\te1.identity_id as ident1,\n\t\t\te2.identity_id as ident2\nfrom idr_identifiers e1\njoin idr_identifiers e2 on e2.identity_id = e1.identity_id \n\t\t\tand e2.identifier_type_id = e1.identifier_type_id\n\t\t\tand e2.status = e1.status\n\t\t\tand e2.identifier <> e1.identifier\nleft outer join ctx_identifier_conflicts ic on ic.current_identity_id = e1.identity_id \n\t\t\tand ic.identifier = 'Multiple active EmplIDs'\nwhere e1.identifier_type_id = 3\nand e1.status = 'Active'\nand ic.current_identity_id IS NULL\ngroup by '42', \n\t\t\t'Multiple active EmplIDs', \n\t\t\te1.source_id,\n\t\t\te1.identity_id,\n\t\t\te2.identity_id"
                },
                {
                    "name": "ImportIdentityToBaggageClaimGEMS",
                    "class": "Snippet"
                },
                {
                    "name": "Reconcile",
                    "class": "DefinedService"
                },
                {
                    "name": "PrcPersonMerge",
                    "class": "NamedQuery"
                }
            ]    
        },
        {   
            "name": "AndysSnippit2",
            "rules": [
                {
                    "name": "SimpleSelect",
                    "class": "SQLQuery",
                    "rule": "SELECT * FROM andy"
                },
                {
                    "name": "AndysSnippit2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?, ?)"
                },
                {
                    "name": "AndysSnippit2",
                    "class": "Snippet"
                }
            ]     
        },
        {   
            "name": "AndysSnippit3",
            "rules": [
                {
                    "name": "AndysSnippit3_Select",
                    "class": "SQLQuery",
                    "rule": "SELECT * FROM andy"
                },
                {
                    "name": "AndysSnippit3",
                    "class": "Snippet"
                },
                {
                    "name": "InsertIntoTable",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?, ?)"
                }
            ]    
        },
        {   
            "name": "AndysSnippit4",
            "rules": [
                {
                    "name": "AndysSnippitInput",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy\nVALUES (?,?)"
                },
                {
                    "name": "AndysSnippitOutput",
                    "class": "SQLQuery",
                    "rule": "SELECT *\nFROM andy"
                },
                {
                    "name": "AndysSnippit4",
                    "class": "Snippet"
                },
                {
                    "name": "Select",
                    "class": "SQLQuery",
                    "rule": "SELECT *\nFROM andy"
                },
                {
                    "name": "Insert",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?, ?)"
                }
            ]     
        },
        {   
            "name": "ConvertNetidToMail",
            "rules": [
                {
                    "name": "SELECT_jabarthe",
                    "class": "SQLQuery",
                    "rule": "SELECT 'netid', 'mail', 'json', 'jabarthe'\nFROM DUAL"
                },
                {
                    "name": "WsConvertNetidToMail",
                    "class": "DefinedService",
                    "method": "GET",
                    "authType": "CAS",
                    "parse": "JSON",
                    "url": "https://netid.usf.edu/nams/ws_convert",
                    "user": "casuser",
                    "password": "caspassword"
                },
                {
                    "name": "INSERT_jabarthe",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO ConvertNetidToMail/nVALUES (?, ?, ?)"
                }                
            ]   
        },
        {   
            "name": "PR-Create-Stg_VIP",
            "rules": [
                {
                    "name": "SELECT_jabarthe",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE IF NOT EXISTS staging.stg_vip ( \n  vipid integer(11) NULL COMMENT 'Directly from NAMS VIP table',\n  vip_created_dt timestamp NULL COMMENT 'From NAMS VIP table',\n  vrs_status varchar(1) NULL COMMENT 'From NAMS VIP_RES_SET table',\n  raw_ssn integer(11) NULL COMMENT 'Directly from NAMS NAMES table',\n  id_ssn varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  biodem_dob date NULL COMMENT 'From NAMS VIP table for matching idr_biodem birthdate',\n  biodem_dod date NULL DEFAULT NULL COMMENT 'Not in NAMS',\n  biodem_gender varchar(1) NULL DEFAULT NULL COMMENT 'Not in NAMS',\n  raw_lname varchar(256) NULL COMMENT 'Directly from NAMS VIP table',\n  names_last varchar(100) NULL COMMENT 'For maching on idr_names',\n  raw_fname varchar(256) NULL COMMENT 'Directly from NAMS VIP table',\n  names_first varchar(100) NULL COMMENT 'For maching on idr_names',\n  raw_mname varchar(256) NULL COMMENT 'Directly from NAMS VIP table',\n  names_middle varchar(100) NULL COMMENT 'For maching on idr_names',\n  names_prefix varchar(10) NULL DEFAULT NULL COMMENT 'Not in NAMS',\n  raw_gen varchar(4) NULL COMMENT 'Directly from NAMS NAMES table',\n  names_suffix varchar(10) NULL COMMENT 'For maching on idr_names',\n  confid_ind varchar(1) NULL DEFAULT NULL COMMENT 'Copy from NAMS NAMES since not in VIP',\n  ethn_code varchar(2) NULL COMMENT 'Not in NAMS for VIPs',\n  citz_code varchar(2) NULL COMMENT 'Not in NAMS for VIPs',\n  raw_pidm integer(11) NULL COMMENT 'Directly from NAMS OASIS table',\n  id_pidm varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  raw_usfid varchar(9) NULL COMMENT 'Directly from NAMS OASIS table',\n  id_usfid varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  raw_emplid integer(11) NULL COMMENT 'Directly from NAMS GEMS table',\n  id_emplid varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  role_n_name varchar(50) NULL COMMENT 'Directly from NAMS NAMES and ROLES tables',\n  activity_date timestamp NOT NULL DEFAULT now() COMMENT 'When inserted',\n  comments254 varchar(255) NULL DEFAULT NULL COMMENT 'Placeholder if later need to pickup more columns from NAMS',\n  INDEX idx_vipid ( vipid ),\n  INDEX idx_id_ssn ( id_ssn ),\n  INDEX idx_id_pidm ( id_pidm ),\n  INDEX idx_id_usfid ( id_usfid ),\n  INDEX idx_id_emplid ( id_emplid )\n)"
                },
                {
                    "name": "PR-Trunc-Stg_VIP",
                    "class": "SQLQuery",
                    "rule": "TRUNCATE TABLE staging.stg_vip"
                },
                {
                    "name": "VIP-Get-Idents",
                    "class": "SQLQuery",
                    "rule": "SELECT DISTINCT\n\tv.vipid \n\t, v.created_dt\n\t, vrs.status\n\t, na.ssn \n  , CASE WHEN na.ssn > 999999 and na.ssn < 900000000 THEN lpad(na.ssn, 9, '0') ELSE NULL END \n\t, v.dob\n\t, v.lname \n  , CASE WHEN length( v.lname ) > 0 THEN TRIM(substr( v.lname, 1, 100 )) ELSE NULL END\n\t, v.fname \n  , CASE WHEN length( v.fname ) > 0 THEN TRIM(substr( v.fname, 1, 100 )) ELSE NULL END\n\t, v.mname \n  , CASE WHEN length( v.mname ) > 0 THEN TRIM(substr( v.mname, 1, 100 )) ELSE NULL END\n\t, na.gen \n  , CASE WHEN length( na.gen ) > 0 THEN TRIM(SUBSTR( na.gen, 1, 10 )) ELSE NULL END\n\t, CASE WHEN na.privacy = 255 THEN 'Y' ELSE 'N' END \n\t, o.pidm \n  , CASE WHEN o.pidm > 0 THEN o.pidm ELSE NULL END \n\t, o.usfid \n  , CASE WHEN length(o.usfid)=9 and substr(o.usfid,1,1)='U' THEN o.usfid ELSE NULL END\n\t, g.emplid \n  , CASE WHEN g.emplid > 0 and g.emplid < 1000000 THEN lpad(g.emplid, 11, '0') ELSE NULL END\n\t, concat(concat(na.role,'-'),r.name)\nFROM vip v\nLEFT OUTER JOIN vip_res_set vrs on vrs.vipid = v.vipid\nLEFT OUTER JOIN names na on na.badge = v.vipid\nLEFT OUTER JOIN vip_resource vr on vr.rid = vrs.rid \nLEFT OUTER JOIN oasis o on o.badge = na.badge\nLEFT OUTER JOIN gems g on g.badge = na.badge\nLEFT OUTER JOIN roles r on r.code = na.role\nWHERE ( vr.label = 'USFID'\nAND vrs.status = 'P' \n) OR v.vipid in ( 1798583, 1011799, 1319044, 1470331, 1662969 )\norder by v.created_dt"
                },
                {
                    "name": "PR-Insert-Stg_VIP",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO staging.stg_vip (\n  vipid,\n  vip_created_dt,\n  vrs_status,\n  raw_ssn,\n  id_ssn,\n  biodem_dob,\n  raw_lname,\n  names_last,\n  raw_fname,\n  names_first,\n  raw_mname,\n  names_middle,\n  raw_gen,\n  names_suffix,\n  confid_ind,\n  raw_pidm,\n  id_pidm,\n  raw_usfid,\n  id_usfid,\n  raw_emplid,\n  id_emplid,\n  role_n_name\n) VALUES (\n?, ?, ?, ?, ?, \n?, ?, ?, ?, ?, \n?, ?, ?, ?, ?, \n?, ?, ?, ?, ?, \n?, ? )"
                },
                {
                    "name": "PR-Inactivate-VIPID-SSN",
                    "class": "SQLQuery",
                    "rule": "SELECT ssn.source_id, ssn.identifier, ssn.identifier_type_id, 0\nFROM pro_identifiers vipid\nJOIN pro_identifiers ssn on ssn.person_id = vipid.person_id and ssn.identifier_type_id = 1 /*SSN*/ and \nssn.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nLEFT OUTER JOIN staging.stg_vip sv on sv.vipid = vipid.identifier and sv.id_ssn = ssn.identifier\nWHERE vipid.identifier_type_id = 18\nAND vipid.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nAND ssn.source_id = vipid.source_id\nAND sv.vipid IS NULL \nAND 0 < (select count(*) from staging.stg_vip)"
                },
                {
                    "name": "ProIdentifierStatusSet",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "PR-Inactivate-VIPID-HRPRNs",
                    "class": "SQLQuery",
                    "rule": "SELECT hrprn.source_id, hrprn.identifier, hrprn.identifier_type_id, 0\nFROM pro_identifiers vipid\nJOIN pro_identifiers hrprn on hrprn.person_id = vipid.person_id and hrprn.identifier_type_id = 13 /*hrprn*/ and \nhrprn.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nLEFT OUTER JOIN staging.stg_vip sv on sv.vipid = vipid.identifier and sv.id_ssn = hrprn.identifier\nWHERE vipid.identifier_type_id = 18\nAND vipid.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nAND hrprn.source_id = vipid.source_id\nAND sv.vipid IS NULL \nAND 0 < (select count(*) from staging.stg_vip)"
                },
                {
                    "name": "PR-Inactivate-VIPIDs",
                    "class": "SQLQuery",
                    "rule": "SELECT vipid.source_id, vipid.identifier, vipid.identifier_type_id, 0\nFROM pro_identifiers vipid\nLEFT OUTER JOIN staging.stg_vip sv on sv.vipid = vipid.identifier\nWHERE vipid.identifier_type_id = 18\nAND vipid.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nAND sv.vipid IS NULL \nAND 0 < (select count(*) from staging.stg_vip)"
                },
                {
                    "name": "PR-IdentMergeofVIPs",
                    "class": "SQLQuery",
                    "rule": "TRUNCATE TABLE staging.stg_vip"
                }
                
                
                
                
27	9	PR-IdentMergeofVIPs		1	SELECT DISTINCT 18 as vipid_identifier_type\n       , sv.vipid\n       , CASE WHEN substr(sv.id_ssn, 1, 3) IN ('949') THEN 13 ELSE 1 END as ssn_identifier_type\n       , sv.id_ssn\n       , sv.biodem_dob\n       , sv.biodem_dod\n       , sv.biodem_gender\n       , sv.names_prefix\n       , sv.names_first\n       , sv.names_middle\n       , sv.names_last\n       , sv.names_suffix\n       , 17 as vip_source_id\nFROM staging.stg_vip sv\nWHERE sv.vipid IS NOT NULL\nAND sv.names_first IS NOT NULL\nAND sv.names_last IS NOT NULL\nAND ( sv.biodem_dob IS NOT NULL or sv.id_ssn IS NOT NULL )\nORDER BY sv.vipid DESC	
27	10	CIMS_PR Identity Merge		1	CALL cims_pr.idr_identity_merge(?,?,?,?,?,?,?,?,?,?,?,?,?)	
27	11	PR-AddVIPConflicts		1	insert ignore into ctx_identifier_conflicts (
   identifier_type_id,
   identifier,
   source_id,
   current_identity_id,
   conflicting_identity_id
) select '42', 
      concat(sv.id_usfid, ' USFID only in VIP'),
      min(id.source_id),
      id.identity_id,
      id.identity_id
from idr_identifiers id
join staging.stg_vip sv on sv.vipid = id.identifier
left outer join idr_identifiers usfid on usfid.identity_id = id.identity_id and usfid.identifier_type_id = 2 /*USFID*/ and usfid.status = 'Active'
left outer join idr_identifiers usfid2 on usfid2.identifier = sv.id_usfid and usfid2.identifier_type_id = 2 /*USFID*/ and usfid2.status = 'Active'
where id.identifier_type_id = 18 /* VIPID */
and id.status = 'Active'
and usfid.identifier IS NULL
and sv.id_usfid IS NOT NULL
and usfid2.identifier IS NOT NULL
and not exists (select 'alreadythere' from ctx_identifier_conflicts ic 
      where ic.identifier = concat(sv.id_usfid, ' USFID only in VIP')
      and ic.current_identity_id = id.identity_id 
          )
group by '42', 
      concat(sv.id_usfid, ' USFID only in VIP'),
      id.identity_id,
      id.identity_id
UNION
select '42', 
      concat(sv.id_emplid, ' EmplID only in VIP'), 
      min(id.source_id),
      id.identity_id,
      id.identity_id
from idr_identifiers id
join stg_vip sv on sv.vipid = id.identifier 
left outer join idr_identifiers emplid on emplid.identity_id = id.identity_id and emplid.identifier_type_id = 3 and emplid.status = 'Active'
left outer join idr_identifiers emplid2 on emplid2.identifier = sv.id_emplid and emplid2.identifier_type_id = 3 and emplid2.status = 'Active'
where id.identifier_type_id = 18 /* VIPID */
and id.status = 'Active'
and sv.id_emplid IS NOT NULL
and emplid2.identifier IS NOT NULL
and (emplid.identifier IS NULL or emplid.identifier <> sv.id_emplid)
and not exists (select 'alreadythere' from ctx_identifier_conflicts ic 
      where ic.identifier = concat(sv.id_emplid, ' EmplID only in VIP')
      and ic.current_identity_id = id.identity_id 
          )
group by '42', 
      concat(sv.id_emplid, ' EmplID only in VIP'), 
      id.identity_id,
      id.identity_id	
27	12	InsertConflicts		1	insert ignore into ctx_identifier_conflicts (
   identifier_type_id,
   identifier,
   source_id,
   current_identity_id,
   conflicting_identity_id
) select '42' as id_type_id, 
			'DOB+LN+FN dup' as identifier, 
			b1.source_id,
			b1.identity_id,
			b2.identity_id
from idr_biodem b1
join idr_names na1 on na1.identity_id = b1.identity_id 
join idr_identifiers e1 on e1.identity_id = b1.identity_id and e1.identifier_type_id not in ( 2, 4, 1, 13, 10, 11, 42 ) and e1.status = 'Active'
left outer join idr_identifiers u1 on u1.identity_id = b1.identity_id and u1.identifier_type_id = 2 and u1.status = 'Active'
left outer join ctx_identifier_conflicts ic on ic.current_identity_id = b1.identity_id and ic.identifier = 'DOB+LN+FN dup'
left outer join idr_identifiers ssn1 on ssn1.identity_id = b1.identity_id and ssn1.identifier_type_id = 1 and ssn1.status = 'Active'
join idr_biodem b2 on b2.date_of_birth = b1.date_of_birth and b2.identity_id <> b1.identity_id
join idr_names na2 on na2.identity_id = b2.identity_id and na2.lastname = na1.lastname and na2.firstname = na1.firstname
left outer join idr_identifiers ssn2 on ssn2.identity_id = b2.identity_id and ssn2.identifier_type_id = 1 and ssn2.status = 'Active'
where (ssn1.identifier IS NULL or ssn2.identifier IS NULL)
and u1.identity_id IS NULL
and ic.current_identity_id IS NULL
and na1.change_id = (select max(naX.change_id) from idr_names naX where naX.identity_id = na1.identity_id and naX.source_id = na1.source_id)
and na2.change_id = (select max(naY.change_id) from idr_names naY where naY.identity_id = na2.identity_id and naY.source_id = na2.source_id)
group by '42', 
			'DOB+LN+FN dup', 
			b1.source_id, 
			b1.identity_id,
			b2.identity_id
UNION
select '42' as id_type_id, 
			'Multiple active SSNs' as identifier, 
			ssn1.source_id as source_id1,
			ssn1.identity_id as ident1,
			ssn2.identity_id as ident2	
from idr_identifiers ssn1
join idr_identifiers ssn2 on ssn2.identity_id = ssn1.identity_id 
			and ssn2.identifier_type_id = 1
			and ssn2.status = 'Active'
			and ssn2.identifier <> ssn1.identifier
left outer join ctx_identifier_conflicts ic on ic.current_identity_id = ssn1.identity_id 
			and ic.identifier = 'Multiple active SSNs'
where ssn1.identifier_type_id = 1
and ssn1.status = 'Active'
and ic.current_identity_id IS NULL
group by '42', 
			'Multiple active SSNs', 
			ssn1.source_id,
			ssn1.identity_id,
			ssn2.identity_id
UNION
select '42' as id_type_id, 
			'Multiple active EmplIDs' as identifier, 
			e1.source_id as source_id1,
			e1.identity_id as ident1,
			e2.identity_id as ident2
from idr_identifiers e1
join idr_identifiers e2 on e2.identity_id = e1.identity_id 
			and e2.identifier_type_id = e1.identifier_type_id
			and e2.status = e1.status
			and e2.identifier <> e1.identifier
left outer join ctx_identifier_conflicts ic on ic.current_identity_id = e1.identity_id 
			and ic.identifier = 'Multiple active EmplIDs'
where e1.identifier_type_id = 3
and e1.status = 'Active'
and ic.current_identity_id IS NULL
group by '42', 
			'Multiple active EmplIDs', 
			e1.source_id,
			e1.identity_id,
			e2.identity_id	
27	13	ImportIdentityToBaggageClaimVIP Snippit		1	DEFINEDSERVICE:ImportIdentityToBaggageClaimVIP	
                
            ]     
        },
        {   
            "name": "OASISLiteHourlyModified",
            "rules": [
                
            ]   
        },
        {   
            "name": "OASISLiteHourly1_5",
            "rules": [
                
            ]    
        },
        {   
            "name": "ToBeDeleted",
            "rules": [
                
            ]     
        },
        {   
            "name": "HSCDW_Import2x",
            "rules": [
                
            ]     
        },
        {   
            "name": "AddConflicts2x",
            "rules": [
                
            ]   
        },
        {   
            "name": "OASIS_Import2x",
            "rules": [
                
            ]   
        },
        {   
            "name": "OasisImportSourceandCurrentTimestamp",
            "rules": [
                
            ]   
        },
        {   
            "name": "Oasisp-create2x",
            "rules": [
                
            ]     
        },
        {   
            "name": "PeopleAdminBCToGEMS_2x",
            "rules": [
                
            ]   
        }
    ]
}

	at org.codehaus.groovy.grails.web.json.JSONTokener.syntaxError(JSONTokener.java:470)
	at org.codehaus.groovy.grails.web.json.JSONArray.<init>(JSONArray.java:134)
	at org.codehaus.groovy.grails.web.json.JSONTokener.nextValue(JSONTokener.java:331)
	at org.codehaus.groovy.grails.web.json.JSONObject.<init>(JSONObject.java:219)
	at org.codehaus.groovy.grails.web.json.JSONTokener.nextValue(JSONTokener.java:328)
	at org.codehaus.groovy.grails.web.json.JSONArray.<init>(JSONArray.java:121)
	at org.codehaus.groovy.grails.web.json.JSONTokener.nextValue(JSONTokener.java:331)
	at org.codehaus.groovy.grails.web.json.JSONObject.<init>(JSONObject.java:219)
	at org.codehaus.groovy.grails.web.json.JSONTokener.nextValue(JSONTokener.java:328)
	at grails.converters.JSON.parse(JSON.java:281)
	... 37 more
2013-05-09 11:55:57,721 [localhost-startStop-1] ERROR StackTrace  - Full Stack Trace:
org.codehaus.groovy.grails.web.json.JSONException: Expected a ',' or ']' at character 59794 of {    
    "ruleSets": [
        {   
            "name": "debugRuleSet",
            "rules": [
                {
                    "name": "GEMS_test_rule_2",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "GEMS_test_rule",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "GEMS_test_rule_again",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "GEMS_test_rule_again_2",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "Dummy_Insert_Input_Reorder",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO test_dump_min (identifier_type_id,identifier,ssn_identifier_type_id,ssn,birthdate,deathdate,sex,prefix,firstName,middleName,lastName,suffix,source_id) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)"
                },
                {
                    "name": "Dummy_INSERT",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO test_dump (\n\tidentifier_type_id,\n\tidentifier,\n\tssn_identifier_type_id,\n\tssn,\n\tbirthdate,\n\tdeathdate,\n\tsex,prefix,\n\tfirstName,\n\tmiddleName,\n\tlastName,\n\tsuffix,\n\tsource_id) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)"
                },
                {
                    "name": "This_is_a_bum_rule",
                    "class": "SQLQuery",
                    "rule": "SELECT '1' FROM DUAL"
                },
                {
                    "name": "This_is_a_bum_PA_rule",
                    "class": "SQLQuery",
                    "rule": "SELECT loaded_dt FROM people_admin"
                },
                {
                    "name": "BC_Select",
                    "class": "SQLQuery",
                    "rule": "SELECT ssn,birthdate,firstName,lastName FROM test_dump_min"
                },
                {
                    "name": "Select_Test",
                    "class": "SQLQuery",
                    "rule": "SELECT 'James','Patrick','Jones' FROM DUAL"
                },
                {
                    "name": "Select_Prepare",
                    "class": "SQLQuery",
                    "rule": "SELECT ?,?,? FROM DUAL"
                },
                {
                    "name": "Append_Wilhoit",
                    "class": "SQLQuery",
                    "rule": "SELECT 'Wilhoit' FROM DUAL"
                },
                {
                    "name": "DROP_TABLE_cool2",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE cool2"
                },
                {
                    "name": "adsf",
                    "class": "SQLQuery",
                    "rule": "SELECT *\nFROM Andy"
                }
                
            ]
        },
        {
            "name": "GEMS_Silver_Rule_Set_2_x",
            "rules": [
                {
                    "name": "GEMS_Silver_Rule_Population",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN TRIM(pd.name_title) IS NULL OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n        AND SUBSTR(pd.EMPLID,1,5) = '00000'  \n        AND REGEXP_LIKE(pd.emplid, '^[[:digit:]]{11}$') \n\tORDER BY pd.emplid desc"
                },
                {
                    "name": "Update_Active_Status_Emplid",
                    "class": "SQLQuery",
                    "rule": "SELECT identifier\n\tFROM pro_identifiers \n\tWHERE identifier_type_id=3 AND source_id=12\n\tORDER BY identifier"
                },
                {
                    "name": "Update_Active_Status_SSN_GEMS",
                    "class": "SQLQuery",
                    "rule": "SELECT identifier\n\tFROM pro_identifiers \n\tWHERE identifier_type_id=1 AND source_id =12\n\tORDER BY identifier"
                },
                {
                    "name": "GEMS_HRPR_Iterator",
                    "class": "SQLQuery",
                    "rule": "SELECT identifier\n\tFROM pro_identifiers \n\tWHERE identifier_type_id=13 AND source_id =12\n\tORDER BY identifier"
                },
                {
                    "name": "GEMS_SSNExistTest",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 AS SSN_IDENTIFIER_TYPE,COUNT(*) AS GEMS_SSNCount\n\tFROM ps_pers_nid n\n\tWHERE n.country(+) = 'USA'\n\tAND n.national_id_type(+) = 'PR'\n\tAND trim(n.national_id) = ?"
                },
                {
                    "name": "GEMS_HRPRExistTest",
                    "class": "SQLQuery",
                    "rule": "SELECT 13 AS HRPR_IDENTIFIER_TYPE,COUNT(*) AS HRPRCount\n\tFROM ps_pers_nid n\n\tWHERE n.country(+) = 'USA'\n\tAND n.national_id_type(+) = 'PR'\n\tAND trim(n.national_id) = ?"
                },
                {
                    "name": "Emplid_Exist_Test",
                    "class": "SQLQuery",
                    "rule": "SELECT 3 AS EMPL_IDENTIFIER_TYPE, COUNT(*) AS EmplidCount\n\tFROM ps_personal_data pd\n\tWHERE pd.emplid=?"
                },
                {
                    "name": "Set_Empl_Active_Flag",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET status='Active',\n\tsource_id=?\n\tWHERE identifier=?\n\tAND identifier_type_id=?\n\tAND identifier_status_id != (\n\t\tSELECT identifier_status_id \n\t\t\tFROM identifier_statuses \n\t\t\tWHERE `name`='Active'\n\t)\n\tAND ? > 0"
                },
                {
                    "name": "Set_Empl_Inactive_Flag",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET status='Inactive'\n\tWHERE source_id=?\n\tAND identifier=?\n\tAND identifier_type_id=?\n\tAND identifier_status_id != (\n\t\tSELECT identifier_status_id \n\t\t\tFROM identifier_statuses \n\t\t\tWHERE `name`='Inactive'\n\t)\n\tAND ? < 1"
                },
                {
                    "name": "Add_GEMS_Source",
                    "class": "SQLQuery",
                    "rule": "SELECT 14 AS source_id FROM DUAL"
                },
                {
                    "name": "BaggageClaimSORCreate",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE `incomming_sor_records` (\n  `primary_identifier_type_id` bigint(18) unsigned DEFAULT NULL,\n  `primary_identifier` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `secondary_identifier_type_id` bigint(18) unsigned DEFAULT NULL,\n  `secondary_identifier` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `birthday` date DEFAULT NULL,\n  `deathday` date DEFAULT NULL,\n  `gender` varchar(10) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `prefix` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `firstname` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `middlename` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `lastname` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `suffix` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `baggage_source_id` bigint(18) unsigned DEFAULT NULL,\n  `status` enum('Valid','Invalid') COLLATE utf8_unicode_ci DEFAULT NULL,\n  KEY `incomming_sor_records_baggage_source_id` (`baggage_source_id`),\n  CONSTRAINT `incomming_sor_records_baggage_source_id` FOREIGN KEY (`baggage_source_id`) REFERENCES `baggage_sources` (`baggage_source_id`) ON DELETE SET NULL ON UPDATE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;"
                },
                {
                    "name": "Add_new_BC_Source",
                    "class": "SQLQuery",
                    "rule": "INSERT IGNORE INTO baggage_sources (baggage_source_id,cims_pr_source_id,name,format) \nVALUES ('5','14','GEMS-DATABASE','DATABASE')"
                },
                {
                    "name": "Update_SOR",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO incomming_sor_records\n(primary_identifier_type_id,primary_identifier,secondary_identifier_type_id,\nsecondary_identifier,birthday,deathday,gender,prefix,firstname,middlename,lastname,\nsuffix,baggage_source_id,status) VALUES\n(?,?,?,?,?,?,?,?,?,?,?,?,5,'Valid')"
                },
                {
                    "name": "GEMS_Recent_Activ_Pop",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN TRIM(pd.name_title) IS NULL OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n        AND SUBSTR(pd.EMPLID,1,5) = '00000'  \n        AND REGEXP_LIKE(pd.emplid, '^[[:digit:]]{11}$') \nand (pd.lastupddttm > (sysdate - 1) or n.lastupddttm > (sysdate - 1))\n\tORDER BY pd.emplid desc"
                },
                {
                    "name": "Reassemble_Params",
                    "class": "SQLQuery",
                    "rule": "SELECT idinfo.source_id,idinfo.identifier_type_id,idinfo.identifier,idinfo.source_id\n\tFROM\n\t\t(\n\t\t\tSELECT \n\t\t\t\t? AS identifier_type_id,\n\t\t\t\t? AS identifier,\n\t\t\t\t? AS ssn_identifier_type_id,\n\t\t\t\t? AS ssn,\n\t\t\t\t? AS birthdate,\n\t\t\t\t? AS deathdate,\n\t\t\t\t? AS gender,\n\t\t\t\t? AS prefix,\n\t\t\t\t? AS first_name,\n\t\t\t\t? AS middle_name,\n\t\t\t\t? AS last_name,\n\t\t\t\t? AS suffix,\n\t\t\t\t? AS source_id\n\t\t\tFROM DUAL\n\t\t) AS idinfo"
                },
                {
                    "name": "Set_the_authoritative_source",
                    "class": "SQLQuery",
                    "rule": "UPDATE idr_identifiers\n\tSET status='Active' AND source_id=?\n\tWHERE identifier_type_id=? AND identifier=? AND source_id != ?"
                },
                {
                    "name": "Set_the_Gems_import_source",
                    "class": "SQLQuery",
                    "rule": "SELECT 5 AS importSourceId FROM DUAL"
                }
            ]  
        },
        {
            "name": "CIMS_PRStoredProcedures2x",
            "rules": [
                {
                    "name": "PrsBiodemUpdater",
                    "class": "NamedQuery",
                    "rule": "personId,birthday,deathday,gender,sourceId"
                },
                {
                    "name": "PrsNamesUpdater",
                    "class": "NamedQuery",
                    "rule": "personId,prefix,firstname,middlename,lastname,suffix,sourceId"
                },
                {
                    "name": "PrcPersonSilverRuleCheck",
                    "class": "NamedQuery",
                    "rule": "ssn,birthday,firstname,lastname"
                },
                {
                    "name": "PrsBiodemValidPastDate",
                    "class": "NamedQuery",
                    "rule": "dateString"
                },
                {
                    "name": "PrcPersonByIdentifier",
                    "class": "NamedQuery",
                    "rule": "identifierTypeId,identifier"
                },
                {
                    "name": "PrcPersonsCreateNew",
                    "class": "NamedQuery",
                    "rule": "sourceId"
                },
                {
                    "name": "PrcPersonMerge",
                    "class": "NamedQuery",
                    "rule": "primaryIdentifierTypeId, primaryIdentifier,secondaryIdentifierTypeId,secondaryIdentifier,birthday,deathday,gender,prefix,firstname,middlename,lastname,suffix,sourceId"
                },
                {
                    "name": "ProIdentifierStatusSet",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "ImpRepositoryIdentityNew",
                    "class": "SQLQuery",
                    "rule": "SELECT imp_repository_identity_new(?) FROM DUAL"
                },
                {
                    "name": "ImpRepositoryMerge",
                    "class": "NamedQuery",
                    "rule": "importSourceId,firstname,middlename,lastname,gender,birthday,unparsedLine"
                }
            ]   
        },
        {
            "name": "CIMS_PRBaggageClaimMerge",
            "rules": [
                {
                    "name": "PeopleAdmin_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT loaded_dt,\n\thpid AS HPID,\n\tIF(ssn = 'No Response','',REPLACE(ssn,'-','')) AS SSN,\n\tIF(LEFT(UPPER(usfid),1) != 'U','',IF(LENGTH(usfid) = 9,usfid,'')) AS USFID,\n\tIF(emplid = 'No Response','',LPAD(TRIM(emplid),11,'0')) AS EMPLID,\n\tIF(fname = 'No Response','',TRIM(fname)) AS FIRSTNAME,\n\tIF(mname = 'No Response','',TRIM(mname)) AS MIDDLENAME,\n\tIF(lname = 'No Response','',TRIM(lname)) AS LASTNAME,\n\tIF(gender IN('M','F'),gender,'') AS GENDER,\n\tIF(dob = 'No Response',NULL,TRIM(dob)) AS BIRTHDAY,\n\tRTRIM(baggage) AS BAGGAGE\n\tFROM nams.people_admin\n\tWHERE DATE(loaded_dt) != '0000-00-00'"
                },
                {
                    "name": "CardID_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT to_char(ID_ISSUE_DATE,'YYYY-MM-DD') AS IMPORT_DATE,\n\tID_CARD_NUMBER,\n\tNAME_FIRST AS FIRSTNAME,\n\tNAME_MIDDLE AS MIDDLENAME,\n\tNAME_LAST AS LASTNAME,\n\tto_char(BIRTH_DATE,'YYYY-MM-DD') AS BIRTHDAY\n\tFROM ID WHERE ROWNUM < 50"
                },
                {
                    "name": "NAMS_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT \n\tNOW() AS IMPORT_DATE,\n\tn.badge AS NAMSID,\n\tn.fname AS FIRSTNAME,\n\tn.mname AS MIDDLENAME,\n\tn.lname AS LASTNAME,\n\tSTR_TO_DATE(CONCAT('',\n\t\tIF(\n\t\t\t((SELECT COUNT(*) FROM bdays WHERE badge=n.badge AND bday > 0 ORDER BY bdayid DESC LIMIT 1) < 1),\n\t\t\tn.bday,\n\t\t\t(SELECT bday FROM bdays WHERE badge=n.badge AND bday > 0 ORDER BY bdayid DESC LIMIT 1)\n\t\t) \n\t) ,'%Y%m%d') AS BIRTHDAY\n\tFROM names n\n\tWHERE \n\t(SELECT COUNT(*) FROM oasis WHERE badge=n.badge LIMIT 1) > 0 \n\tOR\n\t(SELECT COUNT(*) FROM gems WHERE badge=n.badge LIMIT 1) > 0"
                }
            ]   
        },
        {
            "name": "CIMS_PRBaggageClaimMergeOtherRules",
            "rules": [
                {
                    "name": "People_Admin_Request",
                    "class": "SQLQuery",
                    "rule": "SELECT 2 AS importSourceId,0 AS reconcile FROM DUAL;"
                },
                {
                    "name": "People_Admin_Request",
                    "class": "SQLQuery",
                    "rule": "SELECT 2 AS importSourceId,0 AS reconcile FROM DUAL;"
                },
                {
                    "name": "ImportToBaggageClaim",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "Dummy_ParamCollector_for_ImportToBaggageClaim_Defined_Service_loop",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS baggageClaimIdentityId, CAST(? AS UNSIGNED) AS personId, ? AS importSourceId, ? AS sourceId, ? AS baggageClaimIdentityStatusId, ? AS firstName, ? AS middleName, ? AS lastName, ? AS gender, ? AS dateOfBirth"
                },
                {
                    "name": "AddToBaggageClaim",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "PeopleAdmin_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT \n\t2 AS importSourceId,\n\tIF(fname = 'No Response','',TRIM(fname)) AS FIRSTNAME,\n\tIF(mname = 'No Response','',TRIM(mname)) AS MIDDLENAME,\n\tIF(lname = 'No Response','',TRIM(lname)) AS LASTNAME,\n\tIF(gender IN('M','F'),gender,'') AS GENDER,\n\tIF(dob = 'No Response','',TRIM(REPLACE(dob,'/','-'))) AS BIRTHDAY,\n\tloaded_dt,\n\tCONCAT('[{\"identifier\":\"',hpid,'\",\"identifierType\":{\"identifierTypeId\":\"10\"}},{\"identifier\":\"',IF(ssn = 'No Response','',REPLACE(ssn,'-','')),'\",\"identifierType\":{\"identifierTypeId\":\"1\"}},{\"identifier\":\"',IF(LEFT(UPPER(usfid),1) != 'U','',IF(LENGTH(usfid) = 9,usfid,'')),'\",\"identifierType\":{\"identifierTypeId\":\"2\"}},{\"identifier\":\"',IF(emplid = 'No Response','',LPAD(TRIM(emplid),11,'0')),'\",\"identifierType\":{\"identifierTypeId\":\"3\"}}]') AS baggageClaimIdentifiers,\n\tRTRIM(baggage) AS BAGGAGE\n\tFROM nams.people_admin\n\tWHERE DATE(loaded_dt) != '0000-00-00' LIMIT 10"
                },
                {
                    "name": "Reconcile_Defined_Service",
                    "class": "DefinedService"
                },
                {
                    "name": "ImportIdentityToBaggageClaimPeopleAdmin",
                    "class": "DefinedService"
                },
                {
                    "name": "Prepend_PeopleAdmin_Source",
                    "class": "SQLQuery",
                    "rule": "SELECT 2 AS importSourceId FROM DUAL"
                },
                {
                    "name": "Prepend_Gems_Import_Source",
                    "class": "SQLQuery",
                    "rule": "SELECT 5 AS importSourceId FROM DUAL"
                },
                {
                    "name": "Prepend_Gems_Import_Source_and_Current_Timestamp",
                    "class": "SQLQuery",
                    "rule": "SELECT 5 AS importSourceId,NOW() AS importTimestamp,\"\" AS claimInfo FROM DUAL"
                },
                {
                    "name": "Prepend_VIP_Import_Source_and_Current_Timestamp",
                    "class": "SQLQuery",
                    "rule": "SELECT 8 AS importSourceId,NOW() AS importTimestamp FROM DUAL"
                },
                {
                    "name": "ImportIdentityToBaggageClaimHealth",
                    "class": "DefinedService"
                },
                {
                    "name": "ImportIdentityToBaggageClaimGEMS",
                    "class": "DefinedService"
                }
            ]    
        },
        {
            "name": "NamsDefinedServices",
            "rules": [
                {
                    "name": "NetIDToEMail_Defaults",
                    "class": "SQLQuery",
                    "rule": "SELECT 'netid' AS submit_type,'mail' AS return_type,'json' AS `return`,? AS `value` FROM DUAL"
                },
                {
                    "name": "WsConvertNetidToMail",
                    "class": "DefinedService"
                }
            ]     
        },
        { 
            "name": "UnumberDefinedServices",
            "rules": [
                {
                    "name": "Unumber_Defaults",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 AS personId,2 AS personAllocatedId,2 AS identifierTypeId, ? AS amount FROM DUAL"
                },
                {
                    "name": "ReallocatePoolIdentifiers",
                    "class": "DefinedService"
                }
            ]      
        },
        { 
            "name": "IdentityMergeRules",
            "rules": [
                {
                    "name": "Unumber_Defaults",
                    "class": "SQLQuery",
                    "rule": "SELECT \n? AS PrimaryIdentifierType,\n? AS PrimaryIdentifier,\n? AS SecondaryIdentifierType,\n? AS SecondaryIdentifier,\n? AS BirthDate,\n? AS DeathDate,\n? AS Gender,\n? AS Prefix,\n? AS FirstName,\n? AS MiddleName,\n? AS LastName,\n? AS Suffix,\n? AS SourceId\nFROM DUAL\t"
                },
                {
                    "name": "Set_Past_year_Limit",
                    "class": "SQLQuery",
                    "rule": "SELECT 150 AS maxyears FROM DUAL"
                },
                {
                    "name": "PrsBiodemValidPastDateLimit",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "PrsBiodemValidPastDate",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "FilterIdentifier",
                    "class": "DefinedService"
                },
                {
                    "name": "UniqueIdentifierMatch",
                    "class": "SQLQuery",
                    "rule": "SELECT foundUniquePerson.person_id AS personId,\n? AS PrimaryIdentifierType,\n? AS PrimaryIdentifier,\n? AS SecondaryIdentifierType,\n? AS SecondaryIdentifier,\n? AS BirthDate,\n? AS DeathDate,\n? AS Gender,\n? AS Prefix,\n? AS FirstName,\n? AS MiddleName,\n? AS LastName,\n? AS Suffix,\n? AS SourceId\nFROM (\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n\tUNION\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n) AS foundUniquePerson HAVING COUNT(*)=1"
                },
                {
                    "name": "ValidIdentfiersSet",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS person_id,\nidentifiers.identifier_type_id,\nidentifiers.identifier,\n? AS SourceId\nFROM (\n\tSELECT identifier_type_id,identifier FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0\n\tUNION\n\tSELECT identifier_type_id,identifier FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0\n) AS identifiers"
                },
                {
                    "name": "IdentifierSourceUpdate",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET source_id=?\n\tWHERE  source_id !=? AND identifier_type_id=? AND identifier=? AND person_id=?"
                },
                {
                    "name": "IdentifierReallocationUpdate",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET person_id = ?\n\tWHERE identifier_type_id=? AND identifier=? AND person_id !=? AND identifier_status_id != (SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active');"
                },
                {
                    "name": "IdentifierStatusUpdate",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET identifier_status_id = (SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active') AND merge_date=NOW()\n\tWHERE identifier_type_id=? AND identifier=? AND person_id=? AND identifier_status_id != (SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active');"
                },
                {
                    "name": "NameChangeDetection",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS prefix,? AS FirstName,? AS MiddleName,? AS LastName,? AS Suffix,? AS SourceId,? AS personId\nFROM DUAL WHERE \n(SELECT COUNT(*) FROM (\n\tSELECT prefix,firstname,middlename,lastname,suffix FROM prs_names WHERE source_id=? AND person_id=? ORDER BY last_changed DESC LIMIT 1\n) AS lastNameBySource\nWHERE prefix=? AND firstname=? AND middlename=? AND lastname=? AND suffix=?) < 1"
                },
                {
                    "name": "NameCreateNew",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO prs_names (prefix,firstname,middlename,lastname,suffix,source_id,person_id,last_changed) VALUES(?,?,?,?,?,?,?,NOW())"
                },
                {
                    "name": "BioDemChangeDetection",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS date_of_birth,? AS date_of_death,? AS gender,? AS SourceId,? AS PersonId\nFROM DUAL WHERE \n(SELECT COUNT(*) FROM (\n\tSELECT date_of_birth,date_of_death,gender FROM prs_biodem WHERE source_id=? AND person_id=? ORDER BY last_changed DESC LIMIT 1\n) AS lastNameBySource\nWHERE date_of_birth=? AND date_of_death=? AND gender=?) < 1"
                },
                {
                    "name": "BioDemCreateNew",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO prs_biodem (date_of_birth,date_of_death,gender,source_id,person_id,last_changed) VALUES(?,?,?,?,?,NOW())"
                },
                {
                    "name": "IdentifierNewDetection",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS identifier_type_id,? AS identifier,? AS sourceId,? AS personId\n\tFROM DUAL\n\tWHERE LENGTH(TRIM(?)) > 0 AND (SELECT COUNT(*) FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0) < 1"
                },
                {
                    "name": "IdentifierCreateNew",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO pro_identifiers (identifier_type_id,identifier,source_id,person_id,merge_date,identifier_status_id) VALUES(?,?,?,?,NOW(),(SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active'))"
                },
                {
                    "name": "EndLoop_Filler",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 FROM DUAL"
                },
                {
                    "name": "NoUniqueIdentifierCheck",
                    "class": "SQLQuery",
                    "rule": "SELECT \n? AS PrimaryIdentifierType,\n? AS PrimaryIdentifier,\n? AS SecondaryIdentifierType,\n? AS SecondaryIdentifier,\n? AS BirthDate,\n? AS DeathDate,\n? AS Gender,\n? AS Prefix,\n? AS FirstName,\n? AS MiddleName,\n? AS LastName,\n? AS Suffix,\n? AS SourceId\nFROM DUAL\nWHERE\n(SELECT COUNT(*) FROM\n(\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n\tUNION\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n) AS foundUniquePerson) !=1"
                }
            ]     
        },
        { 
            "name": "Snippets",
            "rules": [
                {
                    "name": "IdentityMergeChainDualIdentifiers",
                    "class": "Snippet"
                }
            ]      
        },
        { 
            "name": "AndysRuleSet",
            "rules": [
                {
                    "name": "Create_Table",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE andy \n(\nid INT,\ndata VARCHAR(100)\n);"
                },
                {
                    "name": "Create_Table_2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE andy2\n(\nid INT,\ndata VARCHAR(100),\ndata2 VARCHAR(100)\n);"
                },
                {
                    "name": "Populate",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES ('1', 'Andy1');"
                },
                {
                    "name": "Populate2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES ('2', 'Andy2');"
                },
                {
                    "name": "Populate4",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy2 VALUES (?,?,CONCAT(?,?));"
                },
                {
                    "name": "SELECT_FROM_DUAL",
                    "class": "SQLQuery",
                    "rule": "Select \"3\", \"Andy4\" FROM DUAL"
                },
                {
                    "name": "Populate3",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?,?);"
                },
                {
                    "name": "loop",
                    "class": "SQLQuery",
                    "rule": "SELECT id, data FROM andy"
                }
            ]      
        },
        { 
            "name": "AndysSecondRuleSet",
            "rules": [
                {
                    "name": "DROP_TABLE",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS cool"
                },
                {
                    "name": "DROP_TABLE_cool2",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS cool2"
                },
                {
                    "name": "Create_Table_cool",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE cool ( id INT, data VARCHAR(100));"
                },
                {
                    "name": "Create_Table_cool2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE cool2 (id INT, data VARCHAR(100), id2 INT, data2 VARCHAR(100))"
                },
                {
                    "name": "Populate_cool_1",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool VALUES ('1', 'dataone')"
                },
                {
                    "name": "Populate_cool_2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool VALUES ('2', 'datatwo')"
                },
                {
                    "name": "Select_From_Table_cool",
                    "class": "SQLQuery",
                    "rule": "SELECT id, data FROM cool WHERE id = 1;"
                },
                {
                    "name": "Select_From_Table_cool_2",
                    "class": "SQLQuery",
                    "rule": "SELECT id, data FROM cool WHERE id = 2"
                },
                {
                    "name": "Insert_Into_Cool2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool2 (id, data, id2, data2) VALUES (?,?,?,?)"
                }
            ]       
        },
        { 
            "name": "WaynesFirstRuleSet",
            "rules": [
                {
                    "name": "Create_Table",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE cool\n(\nid int, data VARCHAR(100)\n);"
                },
                {
                    "name": "Populate_Table",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool\nVALUES\n(1, dataone);"
                },
                {
                    "name": "Populate_Table_2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool\nVALUES\n(1, dataone);"
                }
            ]      
        },
        { 
            "name": "PrependJPJ",
            "rules": [
                {
                    "name": "Rule1",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 FROM DUAL"
                },
                {
                    "name": "Rule2",
                    "class": "SQLQuery",
                    "rule": "SELECT \"Andy\" FROM DUAL"
                },
                {
                    "name": "Rule3",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES(?,?)"
                }
            ]      
        },
        { 
            "name": "WaynesDemofilecabinet",
            "rules": [
                {
                    "name": "Create_Table_1",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE demo\n(\nfirst_name VARCHAR(25),\nlast_name VARCHAR(25),\ncity VARCHAR(20),\nstate VARCHAR(2),\nbirth DATE NOT NULL\n);"
                },
                {
                    "name": "Populate_value_1",
                    "class": "SQLQuery",
                    "rule": "SELECT \"Randy\", \"Smith\", \"Tampa\", \"FL\", \"2012-01-18\" FROM DUAL"
                },
                {
                    "name": "Insert_values_1",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO demo\nVALUES (\n?, ?, ?, ?, ?\n);"
                },
                {
                    "name": "Drop_Table",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS demo;"
                },
                {
                    "name": "Update_Table",
                    "class": "SQLQuery",
                    "rule": "UPDATE demo\nSET\ndate = \"2012-01-23\"\nWHERE date = \"2012-01-18\";"
                }
            ]     
        },
        { 
            "name": "Drink_InfoExercise1set",
            "rules": [
                {
                    "name": "drop_output_drinks_table",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS output_drinks;"
                },
                {
                    "name": "create_output_drinks_table",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE output_drinks\n(\nname VARCHAR(25),\ncalcost VARCHAR(5)\n);"
                },
                {
                    "name": "query_results",
                    "class": "SQLQuery",
                    "rule": "SELECT drink_name, ROUND(calories/cost, 2) AS calcost FROM drink_info"
                },
                {
                    "name": "output_to_output_drinks",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO output_drinks\nVALUES (\n?, ?\n);"
                }
            ]     
        },
        {   
            "name": "Drink_InfoExercise2set",
            "rules": [
                {
                    "name": "drop_table_output_drinks2",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS output_drinks2;"
                },
                {
                    "name": "create_table_output_drinks2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE output_drinks2\n(\ndrink_name VARCHAR(25),\ncal_carbs VARCHAR(20)\n);"
                },
                {
                    "name": "query_drink_info",
                    "class": "SQLQuery",
                    "rule": "SELECT drink_name, ROUND(calories/carbs, 2) AS cal_carbs FROM drink_info;"
                },
                {
                    "name": "output_to_output_drinks2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO output_drinks2\nVALUES (\n?, ?\n);"
                }                
            ]   
        },
        {   
            "name": "AndysLoop",
            "rules": [
                {
                    "name": "Drop_Tables_Created",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS loop1, loop2"
                },
                {
                    "name": "Create_Loop_Table_1",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE loop1 (id INT, dataone VARCHAR(20), datatwo VARCHAR(20))"
                },
                {
                    "name": "Create_Loop_Table_2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE loop2 (id INT, dataone VARCHAR(20), datatwo VARCHAR(20))"
                },
                {
                    "name": "Populate_Loop_Table_1",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO loop1 VALUES (1,'a','b'),(2,'c','d'),(3,'e','f'),(4,'g','h'),(5,'i','j'),(6,'k','l')"
                },
                {
                    "name": "Select_where_id_lt_4",
                    "class": "SQLQuery",
                    "rule": "SELECT id, dataone, datatwo FROM loop1 where id < 4"
                },
                {
                    "name": "Populate_Loop_Table_2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO loop2 VALUES (?,?,?)"
                }
            ]      
        },
        {   
            "name": "Drink_infoexerciseset3",
            "rules": [
                {
                    "name": "DROP_TABLE",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS output_drinks3;"
                },
                {
                    "name": "CREATE_TABLE",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE output_drinks3\n(\ndrink_name VARCHAR(30),\ncarbs_cost VARCHAR(30)\n);"
                },
                {
                    "name": "QUERY_drink_info_TABLE",
                    "class": "SQLQuery",
                    "rule": "SELECT drink_name, ROUND(carbs/cost, 2) AS carbs_cost FROM drink_info;"
                },
                {
                    "name": "OUTPUT_TO_NEW_TABLE",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO output_drinks3\nVALUES (\n?,?\n);"
                }
            ]      
        },
        {   
            "name": "AndysThirdRuleSet",
            "rules": [
                {
                    "name": "Create_Table_andy3",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE IF NOT EXISTS andy3 (column1 VARCHAR(20), column2 VARCHAR(20))"
                },
                {
                    "name": "Create_Table_andy4",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE IF NOT EXISTS andy4 (column1 VARCHAR(20), column2 VARCHAR(20))"
                },
                {
                    "name": "Populate_andy3",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy3 VALUES ('1', 'ONE'), ('2', 'two'), ('3', 'three'), ('4', 'four')"
                },
                {
                    "name": "SELECT_WHERE_column1_lt_4",
                    "class": "SQLQuery",
                    "rule": "SELECT column1, column2 FROM andy3 WHERE column1 < 4;"
                },
                {
                    "name": "Populate_andy4_With_Loop_Data",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy4 VALUES (?,?)"
                }                
            ]     
        },
        {   
            "name": "AndysSnippit",
            "rules": [
                {
                    "name": "AndysRuleChain",
                    "class": "Snippet"
                }
            ]    
        },
        {   
            "name": "GEMSLiteHourly",
            "rules": [
                {
                    "name": "GEMS_Recent_Active_Pop",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,p.emplid,\n  CASE\n    WHEN substr(n.national_id, 1, 3)  IN ('949') THEN 13\n    ELSE 1\n  END AS SSN_IDENTIFIER_TYPE\n  , trim(n.national_id) as ssn\n  , to_char(p.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n  , to_char(p.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n  , pde.sex\n  , CASE WHEN TRIM(na.name_title) IS NULL OR na.name_title IS NULL \n    THEN substr(trim(na.name_prefix),1,10)\n    ELSE substr(trim(na.name_title),1,10)\n    END as name_prefix \n  , substr(trim(na.first_name),1,100) as first_name\n  , substr(trim(na.middle_name),1,100) as middle_name\n  , substr(trim(na.last_name),1,100) as last_name\n  , substr(trim(na.name_suffix),1,10) as name_suffix\n  , 12 AS gems_source_id\n  from ps_person p\n  join ps_names na on na.emplid = p.emplid\n  left outer join (select pde1.emplid, pde1.lastupddttm, pde1.sex from ps_pers_data_effdt pde1 \n         where pde1.effdt = (select max(pde2.effdt) from ps_pers_data_effdt pde2 where pde2.emplid = pde1.emplid and pde2.effdt <= sysdate)\n       ) pde on pde.emplid = p.emplid\n  left outer join ps_pers_nid n on n.emplid = p.emplid and n.country = 'USA' and n.national_id_type = 'PR'\n  where SUBSTR(p.EMPLID,1,5) = '00000'  \n  AND REGEXP_LIKE(p.emplid, '^[[:digit:]]{11}$') \n  AND na.name_type = 'PRI'\n  AND na.effdt = (select max(na2.effdt) from ps_names na2 where na2.emplid = na.emplid and na2.name_type = na.name_type and na2.effdt <= sysdate)\n  AND TRIM(na.last_name) IS NOT NULL\n  AND ( p.birthdate IS NOT NULL OR TRIM(n.national_id) IS NOT NULL )\n and ((p.last_child_upddtm > (sysdate - 45) or na.lastupddttm > (sysdate - 45) or pde.lastupddttm > (sysdate - 45) or n.lastupddttm > (sysdate - 45))\n      or p.emplid in ('00000064435'))\n  ORDER BY p.emplid desc"
                },
                {
                    "name": "CIMS_PR_Identity_Merge",
                    "class": "SQLQuery",
                    "rule": "CALL cims_pr.idr_identity_merge(?,?,?,?,?,?,?,?,?,?,?,?,?)"
                },
                {
                    "name": "InsertConflicts",
                    "class": "SQLQuery",
                    "rule": "insert ignore into ctx_identifier_conflicts (\n   identifier_type_id,\n   identifier,\n   source_id,\n   current_identity_id,\n   conflicting_identity_id\n) select '42' as id_type_id, \n\t\t\t'DOB+LN+FN dup' as identifier, \n\t\t\tb1.source_id,\n\t\t\tb1.identity_id,\n\t\t\tb2.identity_id\nfrom idr_biodem b1\njoin idr_names na1 on na1.identity_id = b1.identity_id \njoin idr_identifiers e1 on e1.identity_id = b1.identity_id and e1.identifier_type_id not in ( 2, 4, 1, 13, 10, 11, 42 ) and e1.status = 'Active'\nleft outer join idr_identifiers u1 on u1.identity_id = b1.identity_id and u1.identifier_type_id = 2 and u1.status = 'Active'\nleft outer join ctx_identifier_conflicts ic on ic.current_identity_id = b1.identity_id and ic.identifier = 'DOB+LN+FN dup'\nleft outer join idr_identifiers ssn1 on ssn1.identity_id = b1.identity_id and ssn1.identifier_type_id = 1 and ssn1.status = 'Active'\njoin idr_biodem b2 on b2.date_of_birth = b1.date_of_birth and b2.identity_id <> b1.identity_id\njoin idr_names na2 on na2.identity_id = b2.identity_id and na2.lastname = na1.lastname and na2.firstname = na1.firstname\nleft outer join idr_identifiers ssn2 on ssn2.identity_id = b2.identity_id and ssn2.identifier_type_id = 1 and ssn2.status = 'Active'\nwhere (ssn1.identifier IS NULL or ssn2.identifier IS NULL)\nand u1.identity_id IS NULL\nand ic.current_identity_id IS NULL\nand na1.change_id = (select max(naX.change_id) from idr_names naX where naX.identity_id = na1.identity_id and naX.source_id = na1.source_id)\nand na2.change_id = (select max(naY.change_id) from idr_names naY where naY.identity_id = na2.identity_id and naY.source_id = na2.source_id)\ngroup by '42', \n\t\t\t'DOB+LN+FN dup', \n\t\t\tb1.source_id, \n\t\t\tb1.identity_id,\n\t\t\tb2.identity_id\nUNION\nselect '42' as id_type_id, \n\t\t\t'Multiple active SSNs' as identifier, \n\t\t\tssn1.source_id as source_id1,\n\t\t\tssn1.identity_id as ident1,\n\t\t\tssn2.identity_id as ident2\t\nfrom idr_identifiers ssn1\njoin idr_identifiers ssn2 on ssn2.identity_id = ssn1.identity_id \n\t\t\tand ssn2.identifier_type_id = 1\n\t\t\tand ssn2.status = 'Active'\n\t\t\tand ssn2.identifier <> ssn1.identifier\nleft outer join ctx_identifier_conflicts ic on ic.current_identity_id = ssn1.identity_id \n\t\t\tand ic.identifier = 'Multiple active SSNs'\nwhere ssn1.identifier_type_id = 1\nand ssn1.status = 'Active'\nand ic.current_identity_id IS NULL\ngroup by '42', \n\t\t\t'Multiple active SSNs', \n\t\t\tssn1.source_id,\n\t\t\tssn1.identity_id,\n\t\t\tssn2.identity_id\nUNION\nselect '42' as id_type_id, \n\t\t\t'Multiple active EmplIDs' as identifier, \n\t\t\te1.source_id as source_id1,\n\t\t\te1.identity_id as ident1,\n\t\t\te2.identity_id as ident2\nfrom idr_identifiers e1\njoin idr_identifiers e2 on e2.identity_id = e1.identity_id \n\t\t\tand e2.identifier_type_id = e1.identifier_type_id\n\t\t\tand e2.status = e1.status\n\t\t\tand e2.identifier <> e1.identifier\nleft outer join ctx_identifier_conflicts ic on ic.current_identity_id = e1.identity_id \n\t\t\tand ic.identifier = 'Multiple active EmplIDs'\nwhere e1.identifier_type_id = 3\nand e1.status = 'Active'\nand ic.current_identity_id IS NULL\ngroup by '42', \n\t\t\t'Multiple active EmplIDs', \n\t\t\te1.source_id,\n\t\t\te1.identity_id,\n\t\t\te2.identity_id"
                },
                {
                    "name": "ImportIdentityToBaggageClaimGEMS",
                    "class": "Snippet"
                },
                {
                    "name": "Reconcile",
                    "class": "DefinedService"
                },
                {
                    "name": "PrcPersonMerge",
                    "class": "NamedQuery"
                }
            ]    
        },
        {   
            "name": "AndysSnippit2",
            "rules": [
                {
                    "name": "SimpleSelect",
                    "class": "SQLQuery",
                    "rule": "SELECT * FROM andy"
                },
                {
                    "name": "AndysSnippit2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?, ?)"
                },
                {
                    "name": "AndysSnippit2",
                    "class": "Snippet"
                }
            ]     
        },
        {   
            "name": "AndysSnippit3",
            "rules": [
                {
                    "name": "AndysSnippit3_Select",
                    "class": "SQLQuery",
                    "rule": "SELECT * FROM andy"
                },
                {
                    "name": "AndysSnippit3",
                    "class": "Snippet"
                },
                {
                    "name": "InsertIntoTable",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?, ?)"
                }
            ]    
        },
        {   
            "name": "AndysSnippit4",
            "rules": [
                {
                    "name": "AndysSnippitInput",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy\nVALUES (?,?)"
                },
                {
                    "name": "AndysSnippitOutput",
                    "class": "SQLQuery",
                    "rule": "SELECT *\nFROM andy"
                },
                {
                    "name": "AndysSnippit4",
                    "class": "Snippet"
                },
                {
                    "name": "Select",
                    "class": "SQLQuery",
                    "rule": "SELECT *\nFROM andy"
                },
                {
                    "name": "Insert",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?, ?)"
                }
            ]     
        },
        {   
            "name": "ConvertNetidToMail",
            "rules": [
                {
                    "name": "SELECT_jabarthe",
                    "class": "SQLQuery",
                    "rule": "SELECT 'netid', 'mail', 'json', 'jabarthe'\nFROM DUAL"
                },
                {
                    "name": "WsConvertNetidToMail",
                    "class": "DefinedService",
                    "method": "GET",
                    "authType": "CAS",
                    "parse": "JSON",
                    "url": "https://netid.usf.edu/nams/ws_convert",
                    "user": "casuser",
                    "password": "caspassword"
                },
                {
                    "name": "INSERT_jabarthe",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO ConvertNetidToMail/nVALUES (?, ?, ?)"
                }                
            ]   
        },
        {   
            "name": "PR-Create-Stg_VIP",
            "rules": [
                {
                    "name": "SELECT_jabarthe",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE IF NOT EXISTS staging.stg_vip ( \n  vipid integer(11) NULL COMMENT 'Directly from NAMS VIP table',\n  vip_created_dt timestamp NULL COMMENT 'From NAMS VIP table',\n  vrs_status varchar(1) NULL COMMENT 'From NAMS VIP_RES_SET table',\n  raw_ssn integer(11) NULL COMMENT 'Directly from NAMS NAMES table',\n  id_ssn varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  biodem_dob date NULL COMMENT 'From NAMS VIP table for matching idr_biodem birthdate',\n  biodem_dod date NULL DEFAULT NULL COMMENT 'Not in NAMS',\n  biodem_gender varchar(1) NULL DEFAULT NULL COMMENT 'Not in NAMS',\n  raw_lname varchar(256) NULL COMMENT 'Directly from NAMS VIP table',\n  names_last varchar(100) NULL COMMENT 'For maching on idr_names',\n  raw_fname varchar(256) NULL COMMENT 'Directly from NAMS VIP table',\n  names_first varchar(100) NULL COMMENT 'For maching on idr_names',\n  raw_mname varchar(256) NULL COMMENT 'Directly from NAMS VIP table',\n  names_middle varchar(100) NULL COMMENT 'For maching on idr_names',\n  names_prefix varchar(10) NULL DEFAULT NULL COMMENT 'Not in NAMS',\n  raw_gen varchar(4) NULL COMMENT 'Directly from NAMS NAMES table',\n  names_suffix varchar(10) NULL COMMENT 'For maching on idr_names',\n  confid_ind varchar(1) NULL DEFAULT NULL COMMENT 'Copy from NAMS NAMES since not in VIP',\n  ethn_code varchar(2) NULL COMMENT 'Not in NAMS for VIPs',\n  citz_code varchar(2) NULL COMMENT 'Not in NAMS for VIPs',\n  raw_pidm integer(11) NULL COMMENT 'Directly from NAMS OASIS table',\n  id_pidm varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  raw_usfid varchar(9) NULL COMMENT 'Directly from NAMS OASIS table',\n  id_usfid varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  raw_emplid integer(11) NULL COMMENT 'Directly from NAMS GEMS table',\n  id_emplid varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  role_n_name varchar(50) NULL COMMENT 'Directly from NAMS NAMES and ROLES tables',\n  activity_date timestamp NOT NULL DEFAULT now() COMMENT 'When inserted',\n  comments254 varchar(255) NULL DEFAULT NULL COMMENT 'Placeholder if later need to pickup more columns from NAMS',\n  INDEX idx_vipid ( vipid ),\n  INDEX idx_id_ssn ( id_ssn ),\n  INDEX idx_id_pidm ( id_pidm ),\n  INDEX idx_id_usfid ( id_usfid ),\n  INDEX idx_id_emplid ( id_emplid )\n)"
                },
                {
                    "name": "PR-Trunc-Stg_VIP",
                    "class": "SQLQuery",
                    "rule": "TRUNCATE TABLE staging.stg_vip"
                },
                {
                    "name": "VIP-Get-Idents",
                    "class": "SQLQuery",
                    "rule": "SELECT DISTINCT\n\tv.vipid \n\t, v.created_dt\n\t, vrs.status\n\t, na.ssn \n  , CASE WHEN na.ssn > 999999 and na.ssn < 900000000 THEN lpad(na.ssn, 9, '0') ELSE NULL END \n\t, v.dob\n\t, v.lname \n  , CASE WHEN length( v.lname ) > 0 THEN TRIM(substr( v.lname, 1, 100 )) ELSE NULL END\n\t, v.fname \n  , CASE WHEN length( v.fname ) > 0 THEN TRIM(substr( v.fname, 1, 100 )) ELSE NULL END\n\t, v.mname \n  , CASE WHEN length( v.mname ) > 0 THEN TRIM(substr( v.mname, 1, 100 )) ELSE NULL END\n\t, na.gen \n  , CASE WHEN length( na.gen ) > 0 THEN TRIM(SUBSTR( na.gen, 1, 10 )) ELSE NULL END\n\t, CASE WHEN na.privacy = 255 THEN 'Y' ELSE 'N' END \n\t, o.pidm \n  , CASE WHEN o.pidm > 0 THEN o.pidm ELSE NULL END \n\t, o.usfid \n  , CASE WHEN length(o.usfid)=9 and substr(o.usfid,1,1)='U' THEN o.usfid ELSE NULL END\n\t, g.emplid \n  , CASE WHEN g.emplid > 0 and g.emplid < 1000000 THEN lpad(g.emplid, 11, '0') ELSE NULL END\n\t, concat(concat(na.role,'-'),r.name)\nFROM vip v\nLEFT OUTER JOIN vip_res_set vrs on vrs.vipid = v.vipid\nLEFT OUTER JOIN names na on na.badge = v.vipid\nLEFT OUTER JOIN vip_resource vr on vr.rid = vrs.rid \nLEFT OUTER JOIN oasis o on o.badge = na.badge\nLEFT OUTER JOIN gems g on g.badge = na.badge\nLEFT OUTER JOIN roles r on r.code = na.role\nWHERE ( vr.label = 'USFID'\nAND vrs.status = 'P' \n) OR v.vipid in ( 1798583, 1011799, 1319044, 1470331, 1662969 )\norder by v.created_dt"
                },
                {
                    "name": "PR-Insert-Stg_VIP",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO staging.stg_vip (\n  vipid,\n  vip_created_dt,\n  vrs_status,\n  raw_ssn,\n  id_ssn,\n  biodem_dob,\n  raw_lname,\n  names_last,\n  raw_fname,\n  names_first,\n  raw_mname,\n  names_middle,\n  raw_gen,\n  names_suffix,\n  confid_ind,\n  raw_pidm,\n  id_pidm,\n  raw_usfid,\n  id_usfid,\n  raw_emplid,\n  id_emplid,\n  role_n_name\n) VALUES (\n?, ?, ?, ?, ?, \n?, ?, ?, ?, ?, \n?, ?, ?, ?, ?, \n?, ?, ?, ?, ?, \n?, ? )"
                },
                {
                    "name": "PR-Inactivate-VIPID-SSN",
                    "class": "SQLQuery",
                    "rule": "SELECT ssn.source_id, ssn.identifier, ssn.identifier_type_id, 0\nFROM pro_identifiers vipid\nJOIN pro_identifiers ssn on ssn.person_id = vipid.person_id and ssn.identifier_type_id = 1 /*SSN*/ and \nssn.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nLEFT OUTER JOIN staging.stg_vip sv on sv.vipid = vipid.identifier and sv.id_ssn = ssn.identifier\nWHERE vipid.identifier_type_id = 18\nAND vipid.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nAND ssn.source_id = vipid.source_id\nAND sv.vipid IS NULL \nAND 0 < (select count(*) from staging.stg_vip)"
                },
                {
                    "name": "ProIdentifierStatusSet",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "PR-Inactivate-VIPID-HRPRNs",
                    "class": "SQLQuery",
                    "rule": "SELECT hrprn.source_id, hrprn.identifier, hrprn.identifier_type_id, 0\nFROM pro_identifiers vipid\nJOIN pro_identifiers hrprn on hrprn.person_id = vipid.person_id and hrprn.identifier_type_id = 13 /*hrprn*/ and \nhrprn.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nLEFT OUTER JOIN staging.stg_vip sv on sv.vipid = vipid.identifier and sv.id_ssn = hrprn.identifier\nWHERE vipid.identifier_type_id = 18\nAND vipid.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nAND hrprn.source_id = vipid.source_id\nAND sv.vipid IS NULL \nAND 0 < (select count(*) from staging.stg_vip)"
                },
                {
                    "name": "PR-Inactivate-VIPIDs",
                    "class": "SQLQuery",
                    "rule": "SELECT vipid.source_id, vipid.identifier, vipid.identifier_type_id, 0\nFROM pro_identifiers vipid\nLEFT OUTER JOIN staging.stg_vip sv on sv.vipid = vipid.identifier\nWHERE vipid.identifier_type_id = 18\nAND vipid.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nAND sv.vipid IS NULL \nAND 0 < (select count(*) from staging.stg_vip)"
                },
                {
                    "name": "PR-IdentMergeofVIPs",
                    "class": "SQLQuery",
                    "rule": "TRUNCATE TABLE staging.stg_vip"
                }
                
                
                
                
27	9	PR-IdentMergeofVIPs		1	SELECT DISTINCT 18 as vipid_identifier_type\n       , sv.vipid\n       , CASE WHEN substr(sv.id_ssn, 1, 3) IN ('949') THEN 13 ELSE 1 END as ssn_identifier_type\n       , sv.id_ssn\n       , sv.biodem_dob\n       , sv.biodem_dod\n       , sv.biodem_gender\n       , sv.names_prefix\n       , sv.names_first\n       , sv.names_middle\n       , sv.names_last\n       , sv.names_suffix\n       , 17 as vip_source_id\nFROM staging.stg_vip sv\nWHERE sv.vipid IS NOT NULL\nAND sv.names_first IS NOT NULL\nAND sv.names_last IS NOT NULL\nAND ( sv.biodem_dob IS NOT NULL or sv.id_ssn IS NOT NULL )\nORDER BY sv.vipid DESC	
27	10	CIMS_PR Identity Merge		1	CALL cims_pr.idr_identity_merge(?,?,?,?,?,?,?,?,?,?,?,?,?)	
27	11	PR-AddVIPConflicts		1	insert ignore into ctx_identifier_conflicts (
   identifier_type_id,
   identifier,
   source_id,
   current_identity_id,
   conflicting_identity_id
) select '42', 
      concat(sv.id_usfid, ' USFID only in VIP'),
      min(id.source_id),
      id.identity_id,
      id.identity_id
from idr_identifiers id
join staging.stg_vip sv on sv.vipid = id.identifier
left outer join idr_identifiers usfid on usfid.identity_id = id.identity_id and usfid.identifier_type_id = 2 /*USFID*/ and usfid.status = 'Active'
left outer join idr_identifiers usfid2 on usfid2.identifier = sv.id_usfid and usfid2.identifier_type_id = 2 /*USFID*/ and usfid2.status = 'Active'
where id.identifier_type_id = 18 /* VIPID */
and id.status = 'Active'
and usfid.identifier IS NULL
and sv.id_usfid IS NOT NULL
and usfid2.identifier IS NOT NULL
and not exists (select 'alreadythere' from ctx_identifier_conflicts ic 
      where ic.identifier = concat(sv.id_usfid, ' USFID only in VIP')
      and ic.current_identity_id = id.identity_id 
          )
group by '42', 
      concat(sv.id_usfid, ' USFID only in VIP'),
      id.identity_id,
      id.identity_id
UNION
select '42', 
      concat(sv.id_emplid, ' EmplID only in VIP'), 
      min(id.source_id),
      id.identity_id,
      id.identity_id
from idr_identifiers id
join stg_vip sv on sv.vipid = id.identifier 
left outer join idr_identifiers emplid on emplid.identity_id = id.identity_id and emplid.identifier_type_id = 3 and emplid.status = 'Active'
left outer join idr_identifiers emplid2 on emplid2.identifier = sv.id_emplid and emplid2.identifier_type_id = 3 and emplid2.status = 'Active'
where id.identifier_type_id = 18 /* VIPID */
and id.status = 'Active'
and sv.id_emplid IS NOT NULL
and emplid2.identifier IS NOT NULL
and (emplid.identifier IS NULL or emplid.identifier <> sv.id_emplid)
and not exists (select 'alreadythere' from ctx_identifier_conflicts ic 
      where ic.identifier = concat(sv.id_emplid, ' EmplID only in VIP')
      and ic.current_identity_id = id.identity_id 
          )
group by '42', 
      concat(sv.id_emplid, ' EmplID only in VIP'), 
      id.identity_id,
      id.identity_id	
27	12	InsertConflicts		1	insert ignore into ctx_identifier_conflicts (
   identifier_type_id,
   identifier,
   source_id,
   current_identity_id,
   conflicting_identity_id
) select '42' as id_type_id, 
			'DOB+LN+FN dup' as identifier, 
			b1.source_id,
			b1.identity_id,
			b2.identity_id
from idr_biodem b1
join idr_names na1 on na1.identity_id = b1.identity_id 
join idr_identifiers e1 on e1.identity_id = b1.identity_id and e1.identifier_type_id not in ( 2, 4, 1, 13, 10, 11, 42 ) and e1.status = 'Active'
left outer join idr_identifiers u1 on u1.identity_id = b1.identity_id and u1.identifier_type_id = 2 and u1.status = 'Active'
left outer join ctx_identifier_conflicts ic on ic.current_identity_id = b1.identity_id and ic.identifier = 'DOB+LN+FN dup'
left outer join idr_identifiers ssn1 on ssn1.identity_id = b1.identity_id and ssn1.identifier_type_id = 1 and ssn1.status = 'Active'
join idr_biodem b2 on b2.date_of_birth = b1.date_of_birth and b2.identity_id <> b1.identity_id
join idr_names na2 on na2.identity_id = b2.identity_id and na2.lastname = na1.lastname and na2.firstname = na1.firstname
left outer join idr_identifiers ssn2 on ssn2.identity_id = b2.identity_id and ssn2.identifier_type_id = 1 and ssn2.status = 'Active'
where (ssn1.identifier IS NULL or ssn2.identifier IS NULL)
and u1.identity_id IS NULL
and ic.current_identity_id IS NULL
and na1.change_id = (select max(naX.change_id) from idr_names naX where naX.identity_id = na1.identity_id and naX.source_id = na1.source_id)
and na2.change_id = (select max(naY.change_id) from idr_names naY where naY.identity_id = na2.identity_id and naY.source_id = na2.source_id)
group by '42', 
			'DOB+LN+FN dup', 
			b1.source_id, 
			b1.identity_id,
			b2.identity_id
UNION
select '42' as id_type_id, 
			'Multiple active SSNs' as identifier, 
			ssn1.source_id as source_id1,
			ssn1.identity_id as ident1,
			ssn2.identity_id as ident2	
from idr_identifiers ssn1
join idr_identifiers ssn2 on ssn2.identity_id = ssn1.identity_id 
			and ssn2.identifier_type_id = 1
			and ssn2.status = 'Active'
			and ssn2.identifier <> ssn1.identifier
left outer join ctx_identifier_conflicts ic on ic.current_identity_id = ssn1.identity_id 
			and ic.identifier = 'Multiple active SSNs'
where ssn1.identifier_type_id = 1
and ssn1.status = 'Active'
and ic.current_identity_id IS NULL
group by '42', 
			'Multiple active SSNs', 
			ssn1.source_id,
			ssn1.identity_id,
			ssn2.identity_id
UNION
select '42' as id_type_id, 
			'Multiple active EmplIDs' as identifier, 
			e1.source_id as source_id1,
			e1.identity_id as ident1,
			e2.identity_id as ident2
from idr_identifiers e1
join idr_identifiers e2 on e2.identity_id = e1.identity_id 
			and e2.identifier_type_id = e1.identifier_type_id
			and e2.status = e1.status
			and e2.identifier <> e1.identifier
left outer join ctx_identifier_conflicts ic on ic.current_identity_id = e1.identity_id 
			and ic.identifier = 'Multiple active EmplIDs'
where e1.identifier_type_id = 3
and e1.status = 'Active'
and ic.current_identity_id IS NULL
group by '42', 
			'Multiple active EmplIDs', 
			e1.source_id,
			e1.identity_id,
			e2.identity_id	
27	13	ImportIdentityToBaggageClaimVIP Snippit		1	DEFINEDSERVICE:ImportIdentityToBaggageClaimVIP	
                
            ]     
        },
        {   
            "name": "OASISLiteHourlyModified",
            "rules": [
                
            ]   
        },
        {   
            "name": "OASISLiteHourly1_5",
            "rules": [
                
            ]    
        },
        {   
            "name": "ToBeDeleted",
            "rules": [
                
            ]     
        },
        {   
            "name": "HSCDW_Import2x",
            "rules": [
                
            ]     
        },
        {   
            "name": "AddConflicts2x",
            "rules": [
                
            ]   
        },
        {   
            "name": "OASIS_Import2x",
            "rules": [
                
            ]   
        },
        {   
            "name": "OasisImportSourceandCurrentTimestamp",
            "rules": [
                
            ]   
        },
        {   
            "name": "Oasisp-create2x",
            "rules": [
                
            ]     
        },
        {   
            "name": "PeopleAdminBCToGEMS_2x",
            "rules": [
                
            ]   
        }
    ]
}

	at org.codehaus.groovy.grails.web.json.JSONTokener.syntaxError(JSONTokener.java:470)
	at org.codehaus.groovy.grails.web.json.JSONArray.<init>(JSONArray.java:134)
	at org.codehaus.groovy.grails.web.json.JSONTokener.nextValue(JSONTokener.java:331)
	at org.codehaus.groovy.grails.web.json.JSONObject.<init>(JSONObject.java:219)
	at org.codehaus.groovy.grails.web.json.JSONTokener.nextValue(JSONTokener.java:328)
	at org.codehaus.groovy.grails.web.json.JSONArray.<init>(JSONArray.java:121)
	at org.codehaus.groovy.grails.web.json.JSONTokener.nextValue(JSONTokener.java:331)
	at org.codehaus.groovy.grails.web.json.JSONObject.<init>(JSONObject.java:219)
	at org.codehaus.groovy.grails.web.json.JSONTokener.nextValue(JSONTokener.java:328)
	at grails.converters.JSON.parse(JSON.java:281)
	at grails.converters.JSON$parse.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at BootStrap$_closure1.doCall(BootStrap.groovy:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1243)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1082)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:956)
	at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1106)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:906)
	at groovy.lang.Closure.call(Closure.java:412)
	at groovy.lang.Closure.call(Closure.java:406)
	at grails.util.Environment.evaluateEnvironmentSpecificBlock(Environment.java:308)
	at grails.util.Environment.executeForEnvironment(Environment.java:301)
	at grails.util.Environment.executeForCurrentEnvironment(Environment.java:277)
	at org.codehaus.groovy.grails.commons.DefaultGrailsBootstrapClass.callInit(DefaultGrailsBootstrapClass.java:60)
	at org.codehaus.groovy.grails.web.context.GrailsConfigUtils.executeGrailsBootstraps(GrailsConfigUtils.java:74)
	at org.codehaus.groovy.grails.web.context.GrailsContextLoader.initWebApplicationContext(GrailsContextLoader.java:108)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4887)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5381)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1559)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1549)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
	at java.lang.Thread.run(Thread.java:680)
2013-05-09 11:55:57,724 [localhost-startStop-1] ERROR StackTrace  - Full Stack Trace:
org.codehaus.groovy.grails.web.converters.exceptions.ConverterException: Error parsing JSON
	at grails.converters.JSON.parse(JSON.java:290)
	at BootStrap$_closure1.doCall(BootStrap.groovy:28)
	at grails.util.Environment.evaluateEnvironmentSpecificBlock(Environment.java:308)
	at grails.util.Environment.executeForEnvironment(Environment.java:301)
	at grails.util.Environment.executeForCurrentEnvironment(Environment.java:277)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
	at java.lang.Thread.run(Thread.java:680)
Caused by: org.codehaus.groovy.grails.web.json.JSONException: Expected a ',' or ']' at character 59794 of {    
    "ruleSets": [
        {   
            "name": "debugRuleSet",
            "rules": [
                {
                    "name": "GEMS_test_rule_2",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "GEMS_test_rule",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "GEMS_test_rule_again",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "GEMS_test_rule_again_2",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "Dummy_Insert_Input_Reorder",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO test_dump_min (identifier_type_id,identifier,ssn_identifier_type_id,ssn,birthdate,deathdate,sex,prefix,firstName,middleName,lastName,suffix,source_id) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)"
                },
                {
                    "name": "Dummy_INSERT",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO test_dump (\n\tidentifier_type_id,\n\tidentifier,\n\tssn_identifier_type_id,\n\tssn,\n\tbirthdate,\n\tdeathdate,\n\tsex,prefix,\n\tfirstName,\n\tmiddleName,\n\tlastName,\n\tsuffix,\n\tsource_id) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)"
                },
                {
                    "name": "This_is_a_bum_rule",
                    "class": "SQLQuery",
                    "rule": "SELECT '1' FROM DUAL"
                },
                {
                    "name": "This_is_a_bum_PA_rule",
                    "class": "SQLQuery",
                    "rule": "SELECT loaded_dt FROM people_admin"
                },
                {
                    "name": "BC_Select",
                    "class": "SQLQuery",
                    "rule": "SELECT ssn,birthdate,firstName,lastName FROM test_dump_min"
                },
                {
                    "name": "Select_Test",
                    "class": "SQLQuery",
                    "rule": "SELECT 'James','Patrick','Jones' FROM DUAL"
                },
                {
                    "name": "Select_Prepare",
                    "class": "SQLQuery",
                    "rule": "SELECT ?,?,? FROM DUAL"
                },
                {
                    "name": "Append_Wilhoit",
                    "class": "SQLQuery",
                    "rule": "SELECT 'Wilhoit' FROM DUAL"
                },
                {
                    "name": "DROP_TABLE_cool2",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE cool2"
                },
                {
                    "name": "adsf",
                    "class": "SQLQuery",
                    "rule": "SELECT *\nFROM Andy"
                }
                
            ]
        },
        {
            "name": "GEMS_Silver_Rule_Set_2_x",
            "rules": [
                {
                    "name": "GEMS_Silver_Rule_Population",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN TRIM(pd.name_title) IS NULL OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n        AND SUBSTR(pd.EMPLID,1,5) = '00000'  \n        AND REGEXP_LIKE(pd.emplid, '^[[:digit:]]{11}$') \n\tORDER BY pd.emplid desc"
                },
                {
                    "name": "Update_Active_Status_Emplid",
                    "class": "SQLQuery",
                    "rule": "SELECT identifier\n\tFROM pro_identifiers \n\tWHERE identifier_type_id=3 AND source_id=12\n\tORDER BY identifier"
                },
                {
                    "name": "Update_Active_Status_SSN_GEMS",
                    "class": "SQLQuery",
                    "rule": "SELECT identifier\n\tFROM pro_identifiers \n\tWHERE identifier_type_id=1 AND source_id =12\n\tORDER BY identifier"
                },
                {
                    "name": "GEMS_HRPR_Iterator",
                    "class": "SQLQuery",
                    "rule": "SELECT identifier\n\tFROM pro_identifiers \n\tWHERE identifier_type_id=13 AND source_id =12\n\tORDER BY identifier"
                },
                {
                    "name": "GEMS_SSNExistTest",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 AS SSN_IDENTIFIER_TYPE,COUNT(*) AS GEMS_SSNCount\n\tFROM ps_pers_nid n\n\tWHERE n.country(+) = 'USA'\n\tAND n.national_id_type(+) = 'PR'\n\tAND trim(n.national_id) = ?"
                },
                {
                    "name": "GEMS_HRPRExistTest",
                    "class": "SQLQuery",
                    "rule": "SELECT 13 AS HRPR_IDENTIFIER_TYPE,COUNT(*) AS HRPRCount\n\tFROM ps_pers_nid n\n\tWHERE n.country(+) = 'USA'\n\tAND n.national_id_type(+) = 'PR'\n\tAND trim(n.national_id) = ?"
                },
                {
                    "name": "Emplid_Exist_Test",
                    "class": "SQLQuery",
                    "rule": "SELECT 3 AS EMPL_IDENTIFIER_TYPE, COUNT(*) AS EmplidCount\n\tFROM ps_personal_data pd\n\tWHERE pd.emplid=?"
                },
                {
                    "name": "Set_Empl_Active_Flag",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET status='Active',\n\tsource_id=?\n\tWHERE identifier=?\n\tAND identifier_type_id=?\n\tAND identifier_status_id != (\n\t\tSELECT identifier_status_id \n\t\t\tFROM identifier_statuses \n\t\t\tWHERE `name`='Active'\n\t)\n\tAND ? > 0"
                },
                {
                    "name": "Set_Empl_Inactive_Flag",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET status='Inactive'\n\tWHERE source_id=?\n\tAND identifier=?\n\tAND identifier_type_id=?\n\tAND identifier_status_id != (\n\t\tSELECT identifier_status_id \n\t\t\tFROM identifier_statuses \n\t\t\tWHERE `name`='Inactive'\n\t)\n\tAND ? < 1"
                },
                {
                    "name": "Add_GEMS_Source",
                    "class": "SQLQuery",
                    "rule": "SELECT 14 AS source_id FROM DUAL"
                },
                {
                    "name": "BaggageClaimSORCreate",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE `incomming_sor_records` (\n  `primary_identifier_type_id` bigint(18) unsigned DEFAULT NULL,\n  `primary_identifier` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `secondary_identifier_type_id` bigint(18) unsigned DEFAULT NULL,\n  `secondary_identifier` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `birthday` date DEFAULT NULL,\n  `deathday` date DEFAULT NULL,\n  `gender` varchar(10) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `prefix` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `firstname` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `middlename` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `lastname` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `suffix` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `baggage_source_id` bigint(18) unsigned DEFAULT NULL,\n  `status` enum('Valid','Invalid') COLLATE utf8_unicode_ci DEFAULT NULL,\n  KEY `incomming_sor_records_baggage_source_id` (`baggage_source_id`),\n  CONSTRAINT `incomming_sor_records_baggage_source_id` FOREIGN KEY (`baggage_source_id`) REFERENCES `baggage_sources` (`baggage_source_id`) ON DELETE SET NULL ON UPDATE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;"
                },
                {
                    "name": "Add_new_BC_Source",
                    "class": "SQLQuery",
                    "rule": "INSERT IGNORE INTO baggage_sources (baggage_source_id,cims_pr_source_id,name,format) \nVALUES ('5','14','GEMS-DATABASE','DATABASE')"
                },
                {
                    "name": "Update_SOR",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO incomming_sor_records\n(primary_identifier_type_id,primary_identifier,secondary_identifier_type_id,\nsecondary_identifier,birthday,deathday,gender,prefix,firstname,middlename,lastname,\nsuffix,baggage_source_id,status) VALUES\n(?,?,?,?,?,?,?,?,?,?,?,?,5,'Valid')"
                },
                {
                    "name": "GEMS_Recent_Activ_Pop",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN TRIM(pd.name_title) IS NULL OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n        AND SUBSTR(pd.EMPLID,1,5) = '00000'  \n        AND REGEXP_LIKE(pd.emplid, '^[[:digit:]]{11}$') \nand (pd.lastupddttm > (sysdate - 1) or n.lastupddttm > (sysdate - 1))\n\tORDER BY pd.emplid desc"
                },
                {
                    "name": "Reassemble_Params",
                    "class": "SQLQuery",
                    "rule": "SELECT idinfo.source_id,idinfo.identifier_type_id,idinfo.identifier,idinfo.source_id\n\tFROM\n\t\t(\n\t\t\tSELECT \n\t\t\t\t? AS identifier_type_id,\n\t\t\t\t? AS identifier,\n\t\t\t\t? AS ssn_identifier_type_id,\n\t\t\t\t? AS ssn,\n\t\t\t\t? AS birthdate,\n\t\t\t\t? AS deathdate,\n\t\t\t\t? AS gender,\n\t\t\t\t? AS prefix,\n\t\t\t\t? AS first_name,\n\t\t\t\t? AS middle_name,\n\t\t\t\t? AS last_name,\n\t\t\t\t? AS suffix,\n\t\t\t\t? AS source_id\n\t\t\tFROM DUAL\n\t\t) AS idinfo"
                },
                {
                    "name": "Set_the_authoritative_source",
                    "class": "SQLQuery",
                    "rule": "UPDATE idr_identifiers\n\tSET status='Active' AND source_id=?\n\tWHERE identifier_type_id=? AND identifier=? AND source_id != ?"
                },
                {
                    "name": "Set_the_Gems_import_source",
                    "class": "SQLQuery",
                    "rule": "SELECT 5 AS importSourceId FROM DUAL"
                }
            ]  
        },
        {
            "name": "CIMS_PRStoredProcedures2x",
            "rules": [
                {
                    "name": "PrsBiodemUpdater",
                    "class": "NamedQuery",
                    "rule": "personId,birthday,deathday,gender,sourceId"
                },
                {
                    "name": "PrsNamesUpdater",
                    "class": "NamedQuery",
                    "rule": "personId,prefix,firstname,middlename,lastname,suffix,sourceId"
                },
                {
                    "name": "PrcPersonSilverRuleCheck",
                    "class": "NamedQuery",
                    "rule": "ssn,birthday,firstname,lastname"
                },
                {
                    "name": "PrsBiodemValidPastDate",
                    "class": "NamedQuery",
                    "rule": "dateString"
                },
                {
                    "name": "PrcPersonByIdentifier",
                    "class": "NamedQuery",
                    "rule": "identifierTypeId,identifier"
                },
                {
                    "name": "PrcPersonsCreateNew",
                    "class": "NamedQuery",
                    "rule": "sourceId"
                },
                {
                    "name": "PrcPersonMerge",
                    "class": "NamedQuery",
                    "rule": "primaryIdentifierTypeId, primaryIdentifier,secondaryIdentifierTypeId,secondaryIdentifier,birthday,deathday,gender,prefix,firstname,middlename,lastname,suffix,sourceId"
                },
                {
                    "name": "ProIdentifierStatusSet",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "ImpRepositoryIdentityNew",
                    "class": "SQLQuery",
                    "rule": "SELECT imp_repository_identity_new(?) FROM DUAL"
                },
                {
                    "name": "ImpRepositoryMerge",
                    "class": "NamedQuery",
                    "rule": "importSourceId,firstname,middlename,lastname,gender,birthday,unparsedLine"
                }
            ]   
        },
        {
            "name": "CIMS_PRBaggageClaimMerge",
            "rules": [
                {
                    "name": "PeopleAdmin_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT loaded_dt,\n\thpid AS HPID,\n\tIF(ssn = 'No Response','',REPLACE(ssn,'-','')) AS SSN,\n\tIF(LEFT(UPPER(usfid),1) != 'U','',IF(LENGTH(usfid) = 9,usfid,'')) AS USFID,\n\tIF(emplid = 'No Response','',LPAD(TRIM(emplid),11,'0')) AS EMPLID,\n\tIF(fname = 'No Response','',TRIM(fname)) AS FIRSTNAME,\n\tIF(mname = 'No Response','',TRIM(mname)) AS MIDDLENAME,\n\tIF(lname = 'No Response','',TRIM(lname)) AS LASTNAME,\n\tIF(gender IN('M','F'),gender,'') AS GENDER,\n\tIF(dob = 'No Response',NULL,TRIM(dob)) AS BIRTHDAY,\n\tRTRIM(baggage) AS BAGGAGE\n\tFROM nams.people_admin\n\tWHERE DATE(loaded_dt) != '0000-00-00'"
                },
                {
                    "name": "CardID_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT to_char(ID_ISSUE_DATE,'YYYY-MM-DD') AS IMPORT_DATE,\n\tID_CARD_NUMBER,\n\tNAME_FIRST AS FIRSTNAME,\n\tNAME_MIDDLE AS MIDDLENAME,\n\tNAME_LAST AS LASTNAME,\n\tto_char(BIRTH_DATE,'YYYY-MM-DD') AS BIRTHDAY\n\tFROM ID WHERE ROWNUM < 50"
                },
                {
                    "name": "NAMS_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT \n\tNOW() AS IMPORT_DATE,\n\tn.badge AS NAMSID,\n\tn.fname AS FIRSTNAME,\n\tn.mname AS MIDDLENAME,\n\tn.lname AS LASTNAME,\n\tSTR_TO_DATE(CONCAT('',\n\t\tIF(\n\t\t\t((SELECT COUNT(*) FROM bdays WHERE badge=n.badge AND bday > 0 ORDER BY bdayid DESC LIMIT 1) < 1),\n\t\t\tn.bday,\n\t\t\t(SELECT bday FROM bdays WHERE badge=n.badge AND bday > 0 ORDER BY bdayid DESC LIMIT 1)\n\t\t) \n\t) ,'%Y%m%d') AS BIRTHDAY\n\tFROM names n\n\tWHERE \n\t(SELECT COUNT(*) FROM oasis WHERE badge=n.badge LIMIT 1) > 0 \n\tOR\n\t(SELECT COUNT(*) FROM gems WHERE badge=n.badge LIMIT 1) > 0"
                }
            ]   
        },
        {
            "name": "CIMS_PRBaggageClaimMergeOtherRules",
            "rules": [
                {
                    "name": "People_Admin_Request",
                    "class": "SQLQuery",
                    "rule": "SELECT 2 AS importSourceId,0 AS reconcile FROM DUAL;"
                },
                {
                    "name": "People_Admin_Request",
                    "class": "SQLQuery",
                    "rule": "SELECT 2 AS importSourceId,0 AS reconcile FROM DUAL;"
                },
                {
                    "name": "ImportToBaggageClaim",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "Dummy_ParamCollector_for_ImportToBaggageClaim_Defined_Service_loop",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS baggageClaimIdentityId, CAST(? AS UNSIGNED) AS personId, ? AS importSourceId, ? AS sourceId, ? AS baggageClaimIdentityStatusId, ? AS firstName, ? AS middleName, ? AS lastName, ? AS gender, ? AS dateOfBirth"
                },
                {
                    "name": "AddToBaggageClaim",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "PeopleAdmin_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT \n\t2 AS importSourceId,\n\tIF(fname = 'No Response','',TRIM(fname)) AS FIRSTNAME,\n\tIF(mname = 'No Response','',TRIM(mname)) AS MIDDLENAME,\n\tIF(lname = 'No Response','',TRIM(lname)) AS LASTNAME,\n\tIF(gender IN('M','F'),gender,'') AS GENDER,\n\tIF(dob = 'No Response','',TRIM(REPLACE(dob,'/','-'))) AS BIRTHDAY,\n\tloaded_dt,\n\tCONCAT('[{\"identifier\":\"',hpid,'\",\"identifierType\":{\"identifierTypeId\":\"10\"}},{\"identifier\":\"',IF(ssn = 'No Response','',REPLACE(ssn,'-','')),'\",\"identifierType\":{\"identifierTypeId\":\"1\"}},{\"identifier\":\"',IF(LEFT(UPPER(usfid),1) != 'U','',IF(LENGTH(usfid) = 9,usfid,'')),'\",\"identifierType\":{\"identifierTypeId\":\"2\"}},{\"identifier\":\"',IF(emplid = 'No Response','',LPAD(TRIM(emplid),11,'0')),'\",\"identifierType\":{\"identifierTypeId\":\"3\"}}]') AS baggageClaimIdentifiers,\n\tRTRIM(baggage) AS BAGGAGE\n\tFROM nams.people_admin\n\tWHERE DATE(loaded_dt) != '0000-00-00' LIMIT 10"
                },
                {
                    "name": "Reconcile_Defined_Service",
                    "class": "DefinedService"
                },
                {
                    "name": "ImportIdentityToBaggageClaimPeopleAdmin",
                    "class": "DefinedService"
                },
                {
                    "name": "Prepend_PeopleAdmin_Source",
                    "class": "SQLQuery",
                    "rule": "SELECT 2 AS importSourceId FROM DUAL"
                },
                {
                    "name": "Prepend_Gems_Import_Source",
                    "class": "SQLQuery",
                    "rule": "SELECT 5 AS importSourceId FROM DUAL"
                },
                {
                    "name": "Prepend_Gems_Import_Source_and_Current_Timestamp",
                    "class": "SQLQuery",
                    "rule": "SELECT 5 AS importSourceId,NOW() AS importTimestamp,\"\" AS claimInfo FROM DUAL"
                },
                {
                    "name": "Prepend_VIP_Import_Source_and_Current_Timestamp",
                    "class": "SQLQuery",
                    "rule": "SELECT 8 AS importSourceId,NOW() AS importTimestamp FROM DUAL"
                },
                {
                    "name": "ImportIdentityToBaggageClaimHealth",
                    "class": "DefinedService"
                },
                {
                    "name": "ImportIdentityToBaggageClaimGEMS",
                    "class": "DefinedService"
                }
            ]    
        },
        {
            "name": "NamsDefinedServices",
            "rules": [
                {
                    "name": "NetIDToEMail_Defaults",
                    "class": "SQLQuery",
                    "rule": "SELECT 'netid' AS submit_type,'mail' AS return_type,'json' AS `return`,? AS `value` FROM DUAL"
                },
                {
                    "name": "WsConvertNetidToMail",
                    "class": "DefinedService"
                }
            ]     
        },
        { 
            "name": "UnumberDefinedServices",
            "rules": [
                {
                    "name": "Unumber_Defaults",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 AS personId,2 AS personAllocatedId,2 AS identifierTypeId, ? AS amount FROM DUAL"
                },
                {
                    "name": "ReallocatePoolIdentifiers",
                    "class": "DefinedService"
                }
            ]      
        },
        { 
            "name": "IdentityMergeRules",
            "rules": [
                {
                    "name": "Unumber_Defaults",
                    "class": "SQLQuery",
                    "rule": "SELECT \n? AS PrimaryIdentifierType,\n? AS PrimaryIdentifier,\n? AS SecondaryIdentifierType,\n? AS SecondaryIdentifier,\n? AS BirthDate,\n? AS DeathDate,\n? AS Gender,\n? AS Prefix,\n? AS FirstName,\n? AS MiddleName,\n? AS LastName,\n? AS Suffix,\n? AS SourceId\nFROM DUAL\t"
                },
                {
                    "name": "Set_Past_year_Limit",
                    "class": "SQLQuery",
                    "rule": "SELECT 150 AS maxyears FROM DUAL"
                },
                {
                    "name": "PrsBiodemValidPastDateLimit",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "PrsBiodemValidPastDate",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "FilterIdentifier",
                    "class": "DefinedService"
                },
                {
                    "name": "UniqueIdentifierMatch",
                    "class": "SQLQuery",
                    "rule": "SELECT foundUniquePerson.person_id AS personId,\n? AS PrimaryIdentifierType,\n? AS PrimaryIdentifier,\n? AS SecondaryIdentifierType,\n? AS SecondaryIdentifier,\n? AS BirthDate,\n? AS DeathDate,\n? AS Gender,\n? AS Prefix,\n? AS FirstName,\n? AS MiddleName,\n? AS LastName,\n? AS Suffix,\n? AS SourceId\nFROM (\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n\tUNION\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n) AS foundUniquePerson HAVING COUNT(*)=1"
                },
                {
                    "name": "ValidIdentfiersSet",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS person_id,\nidentifiers.identifier_type_id,\nidentifiers.identifier,\n? AS SourceId\nFROM (\n\tSELECT identifier_type_id,identifier FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0\n\tUNION\n\tSELECT identifier_type_id,identifier FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0\n) AS identifiers"
                },
                {
                    "name": "IdentifierSourceUpdate",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET source_id=?\n\tWHERE  source_id !=? AND identifier_type_id=? AND identifier=? AND person_id=?"
                },
                {
                    "name": "IdentifierReallocationUpdate",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET person_id = ?\n\tWHERE identifier_type_id=? AND identifier=? AND person_id !=? AND identifier_status_id != (SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active');"
                },
                {
                    "name": "IdentifierStatusUpdate",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET identifier_status_id = (SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active') AND merge_date=NOW()\n\tWHERE identifier_type_id=? AND identifier=? AND person_id=? AND identifier_status_id != (SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active');"
                },
                {
                    "name": "NameChangeDetection",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS prefix,? AS FirstName,? AS MiddleName,? AS LastName,? AS Suffix,? AS SourceId,? AS personId\nFROM DUAL WHERE \n(SELECT COUNT(*) FROM (\n\tSELECT prefix,firstname,middlename,lastname,suffix FROM prs_names WHERE source_id=? AND person_id=? ORDER BY last_changed DESC LIMIT 1\n) AS lastNameBySource\nWHERE prefix=? AND firstname=? AND middlename=? AND lastname=? AND suffix=?) < 1"
                },
                {
                    "name": "NameCreateNew",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO prs_names (prefix,firstname,middlename,lastname,suffix,source_id,person_id,last_changed) VALUES(?,?,?,?,?,?,?,NOW())"
                },
                {
                    "name": "BioDemChangeDetection",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS date_of_birth,? AS date_of_death,? AS gender,? AS SourceId,? AS PersonId\nFROM DUAL WHERE \n(SELECT COUNT(*) FROM (\n\tSELECT date_of_birth,date_of_death,gender FROM prs_biodem WHERE source_id=? AND person_id=? ORDER BY last_changed DESC LIMIT 1\n) AS lastNameBySource\nWHERE date_of_birth=? AND date_of_death=? AND gender=?) < 1"
                },
                {
                    "name": "BioDemCreateNew",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO prs_biodem (date_of_birth,date_of_death,gender,source_id,person_id,last_changed) VALUES(?,?,?,?,?,NOW())"
                },
                {
                    "name": "IdentifierNewDetection",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS identifier_type_id,? AS identifier,? AS sourceId,? AS personId\n\tFROM DUAL\n\tWHERE LENGTH(TRIM(?)) > 0 AND (SELECT COUNT(*) FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0) < 1"
                },
                {
                    "name": "IdentifierCreateNew",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO pro_identifiers (identifier_type_id,identifier,source_id,person_id,merge_date,identifier_status_id) VALUES(?,?,?,?,NOW(),(SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active'))"
                },
                {
                    "name": "EndLoop_Filler",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 FROM DUAL"
                },
                {
                    "name": "NoUniqueIdentifierCheck",
                    "class": "SQLQuery",
                    "rule": "SELECT \n? AS PrimaryIdentifierType,\n? AS PrimaryIdentifier,\n? AS SecondaryIdentifierType,\n? AS SecondaryIdentifier,\n? AS BirthDate,\n? AS DeathDate,\n? AS Gender,\n? AS Prefix,\n? AS FirstName,\n? AS MiddleName,\n? AS LastName,\n? AS Suffix,\n? AS SourceId\nFROM DUAL\nWHERE\n(SELECT COUNT(*) FROM\n(\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n\tUNION\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n) AS foundUniquePerson) !=1"
                }
            ]     
        },
        { 
            "name": "Snippets",
            "rules": [
                {
                    "name": "IdentityMergeChainDualIdentifiers",
                    "class": "Snippet"
                }
            ]      
        },
        { 
            "name": "AndysRuleSet",
            "rules": [
                {
                    "name": "Create_Table",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE andy \n(\nid INT,\ndata VARCHAR(100)\n);"
                },
                {
                    "name": "Create_Table_2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE andy2\n(\nid INT,\ndata VARCHAR(100),\ndata2 VARCHAR(100)\n);"
                },
                {
                    "name": "Populate",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES ('1', 'Andy1');"
                },
                {
                    "name": "Populate2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES ('2', 'Andy2');"
                },
                {
                    "name": "Populate4",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy2 VALUES (?,?,CONCAT(?,?));"
                },
                {
                    "name": "SELECT_FROM_DUAL",
                    "class": "SQLQuery",
                    "rule": "Select \"3\", \"Andy4\" FROM DUAL"
                },
                {
                    "name": "Populate3",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?,?);"
                },
                {
                    "name": "loop",
                    "class": "SQLQuery",
                    "rule": "SELECT id, data FROM andy"
                }
            ]      
        },
        { 
            "name": "AndysSecondRuleSet",
            "rules": [
                {
                    "name": "DROP_TABLE",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS cool"
                },
                {
                    "name": "DROP_TABLE_cool2",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS cool2"
                },
                {
                    "name": "Create_Table_cool",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE cool ( id INT, data VARCHAR(100));"
                },
                {
                    "name": "Create_Table_cool2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE cool2 (id INT, data VARCHAR(100), id2 INT, data2 VARCHAR(100))"
                },
                {
                    "name": "Populate_cool_1",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool VALUES ('1', 'dataone')"
                },
                {
                    "name": "Populate_cool_2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool VALUES ('2', 'datatwo')"
                },
                {
                    "name": "Select_From_Table_cool",
                    "class": "SQLQuery",
                    "rule": "SELECT id, data FROM cool WHERE id = 1;"
                },
                {
                    "name": "Select_From_Table_cool_2",
                    "class": "SQLQuery",
                    "rule": "SELECT id, data FROM cool WHERE id = 2"
                },
                {
                    "name": "Insert_Into_Cool2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool2 (id, data, id2, data2) VALUES (?,?,?,?)"
                }
            ]       
        },
        { 
            "name": "WaynesFirstRuleSet",
            "rules": [
                {
                    "name": "Create_Table",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE cool\n(\nid int, data VARCHAR(100)\n);"
                },
                {
                    "name": "Populate_Table",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool\nVALUES\n(1, dataone);"
                },
                {
                    "name": "Populate_Table_2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool\nVALUES\n(1, dataone);"
                }
            ]      
        },
        { 
            "name": "PrependJPJ",
            "rules": [
                {
                    "name": "Rule1",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 FROM DUAL"
                },
                {
                    "name": "Rule2",
                    "class": "SQLQuery",
                    "rule": "SELECT \"Andy\" FROM DUAL"
                },
                {
                    "name": "Rule3",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES(?,?)"
                }
            ]      
        },
        { 
            "name": "WaynesDemofilecabinet",
            "rules": [
                {
                    "name": "Create_Table_1",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE demo\n(\nfirst_name VARCHAR(25),\nlast_name VARCHAR(25),\ncity VARCHAR(20),\nstate VARCHAR(2),\nbirth DATE NOT NULL\n);"
                },
                {
                    "name": "Populate_value_1",
                    "class": "SQLQuery",
                    "rule": "SELECT \"Randy\", \"Smith\", \"Tampa\", \"FL\", \"2012-01-18\" FROM DUAL"
                },
                {
                    "name": "Insert_values_1",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO demo\nVALUES (\n?, ?, ?, ?, ?\n);"
                },
                {
                    "name": "Drop_Table",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS demo;"
                },
                {
                    "name": "Update_Table",
                    "class": "SQLQuery",
                    "rule": "UPDATE demo\nSET\ndate = \"2012-01-23\"\nWHERE date = \"2012-01-18\";"
                }
            ]     
        },
        { 
            "name": "Drink_InfoExercise1set",
            "rules": [
                {
                    "name": "drop_output_drinks_table",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS output_drinks;"
                },
                {
                    "name": "create_output_drinks_table",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE output_drinks\n(\nname VARCHAR(25),\ncalcost VARCHAR(5)\n);"
                },
                {
                    "name": "query_results",
                    "class": "SQLQuery",
                    "rule": "SELECT drink_name, ROUND(calories/cost, 2) AS calcost FROM drink_info"
                },
                {
                    "name": "output_to_output_drinks",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO output_drinks\nVALUES (\n?, ?\n);"
                }
            ]     
        },
        {   
            "name": "Drink_InfoExercise2set",
            "rules": [
                {
                    "name": "drop_table_output_drinks2",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS output_drinks2;"
                },
                {
                    "name": "create_table_output_drinks2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE output_drinks2\n(\ndrink_name VARCHAR(25),\ncal_carbs VARCHAR(20)\n);"
                },
                {
                    "name": "query_drink_info",
                    "class": "SQLQuery",
                    "rule": "SELECT drink_name, ROUND(calories/carbs, 2) AS cal_carbs FROM drink_info;"
                },
                {
                    "name": "output_to_output_drinks2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO output_drinks2\nVALUES (\n?, ?\n);"
                }                
            ]   
        },
        {   
            "name": "AndysLoop",
            "rules": [
                {
                    "name": "Drop_Tables_Created",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS loop1, loop2"
                },
                {
                    "name": "Create_Loop_Table_1",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE loop1 (id INT, dataone VARCHAR(20), datatwo VARCHAR(20))"
                },
                {
                    "name": "Create_Loop_Table_2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE loop2 (id INT, dataone VARCHAR(20), datatwo VARCHAR(20))"
                },
                {
                    "name": "Populate_Loop_Table_1",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO loop1 VALUES (1,'a','b'),(2,'c','d'),(3,'e','f'),(4,'g','h'),(5,'i','j'),(6,'k','l')"
                },
                {
                    "name": "Select_where_id_lt_4",
                    "class": "SQLQuery",
                    "rule": "SELECT id, dataone, datatwo FROM loop1 where id < 4"
                },
                {
                    "name": "Populate_Loop_Table_2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO loop2 VALUES (?,?,?)"
                }
            ]      
        },
        {   
            "name": "Drink_infoexerciseset3",
            "rules": [
                {
                    "name": "DROP_TABLE",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS output_drinks3;"
                },
                {
                    "name": "CREATE_TABLE",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE output_drinks3\n(\ndrink_name VARCHAR(30),\ncarbs_cost VARCHAR(30)\n);"
                },
                {
                    "name": "QUERY_drink_info_TABLE",
                    "class": "SQLQuery",
                    "rule": "SELECT drink_name, ROUND(carbs/cost, 2) AS carbs_cost FROM drink_info;"
                },
                {
                    "name": "OUTPUT_TO_NEW_TABLE",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO output_drinks3\nVALUES (\n?,?\n);"
                }
            ]      
        },
        {   
            "name": "AndysThirdRuleSet",
            "rules": [
                {
                    "name": "Create_Table_andy3",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE IF NOT EXISTS andy3 (column1 VARCHAR(20), column2 VARCHAR(20))"
                },
                {
                    "name": "Create_Table_andy4",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE IF NOT EXISTS andy4 (column1 VARCHAR(20), column2 VARCHAR(20))"
                },
                {
                    "name": "Populate_andy3",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy3 VALUES ('1', 'ONE'), ('2', 'two'), ('3', 'three'), ('4', 'four')"
                },
                {
                    "name": "SELECT_WHERE_column1_lt_4",
                    "class": "SQLQuery",
                    "rule": "SELECT column1, column2 FROM andy3 WHERE column1 < 4;"
                },
                {
                    "name": "Populate_andy4_With_Loop_Data",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy4 VALUES (?,?)"
                }                
            ]     
        },
        {   
            "name": "AndysSnippit",
            "rules": [
                {
                    "name": "AndysRuleChain",
                    "class": "Snippet"
                }
            ]    
        },
        {   
            "name": "GEMSLiteHourly",
            "rules": [
                {
                    "name": "GEMS_Recent_Active_Pop",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,p.emplid,\n  CASE\n    WHEN substr(n.national_id, 1, 3)  IN ('949') THEN 13\n    ELSE 1\n  END AS SSN_IDENTIFIER_TYPE\n  , trim(n.national_id) as ssn\n  , to_char(p.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n  , to_char(p.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n  , pde.sex\n  , CASE WHEN TRIM(na.name_title) IS NULL OR na.name_title IS NULL \n    THEN substr(trim(na.name_prefix),1,10)\n    ELSE substr(trim(na.name_title),1,10)\n    END as name_prefix \n  , substr(trim(na.first_name),1,100) as first_name\n  , substr(trim(na.middle_name),1,100) as middle_name\n  , substr(trim(na.last_name),1,100) as last_name\n  , substr(trim(na.name_suffix),1,10) as name_suffix\n  , 12 AS gems_source_id\n  from ps_person p\n  join ps_names na on na.emplid = p.emplid\n  left outer join (select pde1.emplid, pde1.lastupddttm, pde1.sex from ps_pers_data_effdt pde1 \n         where pde1.effdt = (select max(pde2.effdt) from ps_pers_data_effdt pde2 where pde2.emplid = pde1.emplid and pde2.effdt <= sysdate)\n       ) pde on pde.emplid = p.emplid\n  left outer join ps_pers_nid n on n.emplid = p.emplid and n.country = 'USA' and n.national_id_type = 'PR'\n  where SUBSTR(p.EMPLID,1,5) = '00000'  \n  AND REGEXP_LIKE(p.emplid, '^[[:digit:]]{11}$') \n  AND na.name_type = 'PRI'\n  AND na.effdt = (select max(na2.effdt) from ps_names na2 where na2.emplid = na.emplid and na2.name_type = na.name_type and na2.effdt <= sysdate)\n  AND TRIM(na.last_name) IS NOT NULL\n  AND ( p.birthdate IS NOT NULL OR TRIM(n.national_id) IS NOT NULL )\n and ((p.last_child_upddtm > (sysdate - 45) or na.lastupddttm > (sysdate - 45) or pde.lastupddttm > (sysdate - 45) or n.lastupddttm > (sysdate - 45))\n      or p.emplid in ('00000064435'))\n  ORDER BY p.emplid desc"
                },
                {
                    "name": "CIMS_PR_Identity_Merge",
                    "class": "SQLQuery",
                    "rule": "CALL cims_pr.idr_identity_merge(?,?,?,?,?,?,?,?,?,?,?,?,?)"
                },
                {
                    "name": "InsertConflicts",
                    "class": "SQLQuery",
                    "rule": "insert ignore into ctx_identifier_conflicts (\n   identifier_type_id,\n   identifier,\n   source_id,\n   current_identity_id,\n   conflicting_identity_id\n) select '42' as id_type_id, \n\t\t\t'DOB+LN+FN dup' as identifier, \n\t\t\tb1.source_id,\n\t\t\tb1.identity_id,\n\t\t\tb2.identity_id\nfrom idr_biodem b1\njoin idr_names na1 on na1.identity_id = b1.identity_id \njoin idr_identifiers e1 on e1.identity_id = b1.identity_id and e1.identifier_type_id not in ( 2, 4, 1, 13, 10, 11, 42 ) and e1.status = 'Active'\nleft outer join idr_identifiers u1 on u1.identity_id = b1.identity_id and u1.identifier_type_id = 2 and u1.status = 'Active'\nleft outer join ctx_identifier_conflicts ic on ic.current_identity_id = b1.identity_id and ic.identifier = 'DOB+LN+FN dup'\nleft outer join idr_identifiers ssn1 on ssn1.identity_id = b1.identity_id and ssn1.identifier_type_id = 1 and ssn1.status = 'Active'\njoin idr_biodem b2 on b2.date_of_birth = b1.date_of_birth and b2.identity_id <> b1.identity_id\njoin idr_names na2 on na2.identity_id = b2.identity_id and na2.lastname = na1.lastname and na2.firstname = na1.firstname\nleft outer join idr_identifiers ssn2 on ssn2.identity_id = b2.identity_id and ssn2.identifier_type_id = 1 and ssn2.status = 'Active'\nwhere (ssn1.identifier IS NULL or ssn2.identifier IS NULL)\nand u1.identity_id IS NULL\nand ic.current_identity_id IS NULL\nand na1.change_id = (select max(naX.change_id) from idr_names naX where naX.identity_id = na1.identity_id and naX.source_id = na1.source_id)\nand na2.change_id = (select max(naY.change_id) from idr_names naY where naY.identity_id = na2.identity_id and naY.source_id = na2.source_id)\ngroup by '42', \n\t\t\t'DOB+LN+FN dup', \n\t\t\tb1.source_id, \n\t\t\tb1.identity_id,\n\t\t\tb2.identity_id\nUNION\nselect '42' as id_type_id, \n\t\t\t'Multiple active SSNs' as identifier, \n\t\t\tssn1.source_id as source_id1,\n\t\t\tssn1.identity_id as ident1,\n\t\t\tssn2.identity_id as ident2\t\nfrom idr_identifiers ssn1\njoin idr_identifiers ssn2 on ssn2.identity_id = ssn1.identity_id \n\t\t\tand ssn2.identifier_type_id = 1\n\t\t\tand ssn2.status = 'Active'\n\t\t\tand ssn2.identifier <> ssn1.identifier\nleft outer join ctx_identifier_conflicts ic on ic.current_identity_id = ssn1.identity_id \n\t\t\tand ic.identifier = 'Multiple active SSNs'\nwhere ssn1.identifier_type_id = 1\nand ssn1.status = 'Active'\nand ic.current_identity_id IS NULL\ngroup by '42', \n\t\t\t'Multiple active SSNs', \n\t\t\tssn1.source_id,\n\t\t\tssn1.identity_id,\n\t\t\tssn2.identity_id\nUNION\nselect '42' as id_type_id, \n\t\t\t'Multiple active EmplIDs' as identifier, \n\t\t\te1.source_id as source_id1,\n\t\t\te1.identity_id as ident1,\n\t\t\te2.identity_id as ident2\nfrom idr_identifiers e1\njoin idr_identifiers e2 on e2.identity_id = e1.identity_id \n\t\t\tand e2.identifier_type_id = e1.identifier_type_id\n\t\t\tand e2.status = e1.status\n\t\t\tand e2.identifier <> e1.identifier\nleft outer join ctx_identifier_conflicts ic on ic.current_identity_id = e1.identity_id \n\t\t\tand ic.identifier = 'Multiple active EmplIDs'\nwhere e1.identifier_type_id = 3\nand e1.status = 'Active'\nand ic.current_identity_id IS NULL\ngroup by '42', \n\t\t\t'Multiple active EmplIDs', \n\t\t\te1.source_id,\n\t\t\te1.identity_id,\n\t\t\te2.identity_id"
                },
                {
                    "name": "ImportIdentityToBaggageClaimGEMS",
                    "class": "Snippet"
                },
                {
                    "name": "Reconcile",
                    "class": "DefinedService"
                },
                {
                    "name": "PrcPersonMerge",
                    "class": "NamedQuery"
                }
            ]    
        },
        {   
            "name": "AndysSnippit2",
            "rules": [
                {
                    "name": "SimpleSelect",
                    "class": "SQLQuery",
                    "rule": "SELECT * FROM andy"
                },
                {
                    "name": "AndysSnippit2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?, ?)"
                },
                {
                    "name": "AndysSnippit2",
                    "class": "Snippet"
                }
            ]     
        },
        {   
            "name": "AndysSnippit3",
            "rules": [
                {
                    "name": "AndysSnippit3_Select",
                    "class": "SQLQuery",
                    "rule": "SELECT * FROM andy"
                },
                {
                    "name": "AndysSnippit3",
                    "class": "Snippet"
                },
                {
                    "name": "InsertIntoTable",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?, ?)"
                }
            ]    
        },
        {   
            "name": "AndysSnippit4",
            "rules": [
                {
                    "name": "AndysSnippitInput",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy\nVALUES (?,?)"
                },
                {
                    "name": "AndysSnippitOutput",
                    "class": "SQLQuery",
                    "rule": "SELECT *\nFROM andy"
                },
                {
                    "name": "AndysSnippit4",
                    "class": "Snippet"
                },
                {
                    "name": "Select",
                    "class": "SQLQuery",
                    "rule": "SELECT *\nFROM andy"
                },
                {
                    "name": "Insert",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?, ?)"
                }
            ]     
        },
        {   
            "name": "ConvertNetidToMail",
            "rules": [
                {
                    "name": "SELECT_jabarthe",
                    "class": "SQLQuery",
                    "rule": "SELECT 'netid', 'mail', 'json', 'jabarthe'\nFROM DUAL"
                },
                {
                    "name": "WsConvertNetidToMail",
                    "class": "DefinedService",
                    "method": "GET",
                    "authType": "CAS",
                    "parse": "JSON",
                    "url": "https://netid.usf.edu/nams/ws_convert",
                    "user": "casuser",
                    "password": "caspassword"
                },
                {
                    "name": "INSERT_jabarthe",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO ConvertNetidToMail/nVALUES (?, ?, ?)"
                }                
            ]   
        },
        {   
            "name": "PR-Create-Stg_VIP",
            "rules": [
                {
                    "name": "SELECT_jabarthe",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE IF NOT EXISTS staging.stg_vip ( \n  vipid integer(11) NULL COMMENT 'Directly from NAMS VIP table',\n  vip_created_dt timestamp NULL COMMENT 'From NAMS VIP table',\n  vrs_status varchar(1) NULL COMMENT 'From NAMS VIP_RES_SET table',\n  raw_ssn integer(11) NULL COMMENT 'Directly from NAMS NAMES table',\n  id_ssn varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  biodem_dob date NULL COMMENT 'From NAMS VIP table for matching idr_biodem birthdate',\n  biodem_dod date NULL DEFAULT NULL COMMENT 'Not in NAMS',\n  biodem_gender varchar(1) NULL DEFAULT NULL COMMENT 'Not in NAMS',\n  raw_lname varchar(256) NULL COMMENT 'Directly from NAMS VIP table',\n  names_last varchar(100) NULL COMMENT 'For maching on idr_names',\n  raw_fname varchar(256) NULL COMMENT 'Directly from NAMS VIP table',\n  names_first varchar(100) NULL COMMENT 'For maching on idr_names',\n  raw_mname varchar(256) NULL COMMENT 'Directly from NAMS VIP table',\n  names_middle varchar(100) NULL COMMENT 'For maching on idr_names',\n  names_prefix varchar(10) NULL DEFAULT NULL COMMENT 'Not in NAMS',\n  raw_gen varchar(4) NULL COMMENT 'Directly from NAMS NAMES table',\n  names_suffix varchar(10) NULL COMMENT 'For maching on idr_names',\n  confid_ind varchar(1) NULL DEFAULT NULL COMMENT 'Copy from NAMS NAMES since not in VIP',\n  ethn_code varchar(2) NULL COMMENT 'Not in NAMS for VIPs',\n  citz_code varchar(2) NULL COMMENT 'Not in NAMS for VIPs',\n  raw_pidm integer(11) NULL COMMENT 'Directly from NAMS OASIS table',\n  id_pidm varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  raw_usfid varchar(9) NULL COMMENT 'Directly from NAMS OASIS table',\n  id_usfid varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  raw_emplid integer(11) NULL COMMENT 'Directly from NAMS GEMS table',\n  id_emplid varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  role_n_name varchar(50) NULL COMMENT 'Directly from NAMS NAMES and ROLES tables',\n  activity_date timestamp NOT NULL DEFAULT now() COMMENT 'When inserted',\n  comments254 varchar(255) NULL DEFAULT NULL COMMENT 'Placeholder if later need to pickup more columns from NAMS',\n  INDEX idx_vipid ( vipid ),\n  INDEX idx_id_ssn ( id_ssn ),\n  INDEX idx_id_pidm ( id_pidm ),\n  INDEX idx_id_usfid ( id_usfid ),\n  INDEX idx_id_emplid ( id_emplid )\n)"
                },
                {
                    "name": "PR-Trunc-Stg_VIP",
                    "class": "SQLQuery",
                    "rule": "TRUNCATE TABLE staging.stg_vip"
                },
                {
                    "name": "VIP-Get-Idents",
                    "class": "SQLQuery",
                    "rule": "SELECT DISTINCT\n\tv.vipid \n\t, v.created_dt\n\t, vrs.status\n\t, na.ssn \n  , CASE WHEN na.ssn > 999999 and na.ssn < 900000000 THEN lpad(na.ssn, 9, '0') ELSE NULL END \n\t, v.dob\n\t, v.lname \n  , CASE WHEN length( v.lname ) > 0 THEN TRIM(substr( v.lname, 1, 100 )) ELSE NULL END\n\t, v.fname \n  , CASE WHEN length( v.fname ) > 0 THEN TRIM(substr( v.fname, 1, 100 )) ELSE NULL END\n\t, v.mname \n  , CASE WHEN length( v.mname ) > 0 THEN TRIM(substr( v.mname, 1, 100 )) ELSE NULL END\n\t, na.gen \n  , CASE WHEN length( na.gen ) > 0 THEN TRIM(SUBSTR( na.gen, 1, 10 )) ELSE NULL END\n\t, CASE WHEN na.privacy = 255 THEN 'Y' ELSE 'N' END \n\t, o.pidm \n  , CASE WHEN o.pidm > 0 THEN o.pidm ELSE NULL END \n\t, o.usfid \n  , CASE WHEN length(o.usfid)=9 and substr(o.usfid,1,1)='U' THEN o.usfid ELSE NULL END\n\t, g.emplid \n  , CASE WHEN g.emplid > 0 and g.emplid < 1000000 THEN lpad(g.emplid, 11, '0') ELSE NULL END\n\t, concat(concat(na.role,'-'),r.name)\nFROM vip v\nLEFT OUTER JOIN vip_res_set vrs on vrs.vipid = v.vipid\nLEFT OUTER JOIN names na on na.badge = v.vipid\nLEFT OUTER JOIN vip_resource vr on vr.rid = vrs.rid \nLEFT OUTER JOIN oasis o on o.badge = na.badge\nLEFT OUTER JOIN gems g on g.badge = na.badge\nLEFT OUTER JOIN roles r on r.code = na.role\nWHERE ( vr.label = 'USFID'\nAND vrs.status = 'P' \n) OR v.vipid in ( 1798583, 1011799, 1319044, 1470331, 1662969 )\norder by v.created_dt"
                },
                {
                    "name": "PR-Insert-Stg_VIP",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO staging.stg_vip (\n  vipid,\n  vip_created_dt,\n  vrs_status,\n  raw_ssn,\n  id_ssn,\n  biodem_dob,\n  raw_lname,\n  names_last,\n  raw_fname,\n  names_first,\n  raw_mname,\n  names_middle,\n  raw_gen,\n  names_suffix,\n  confid_ind,\n  raw_pidm,\n  id_pidm,\n  raw_usfid,\n  id_usfid,\n  raw_emplid,\n  id_emplid,\n  role_n_name\n) VALUES (\n?, ?, ?, ?, ?, \n?, ?, ?, ?, ?, \n?, ?, ?, ?, ?, \n?, ?, ?, ?, ?, \n?, ? )"
                },
                {
                    "name": "PR-Inactivate-VIPID-SSN",
                    "class": "SQLQuery",
                    "rule": "SELECT ssn.source_id, ssn.identifier, ssn.identifier_type_id, 0\nFROM pro_identifiers vipid\nJOIN pro_identifiers ssn on ssn.person_id = vipid.person_id and ssn.identifier_type_id = 1 /*SSN*/ and \nssn.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nLEFT OUTER JOIN staging.stg_vip sv on sv.vipid = vipid.identifier and sv.id_ssn = ssn.identifier\nWHERE vipid.identifier_type_id = 18\nAND vipid.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nAND ssn.source_id = vipid.source_id\nAND sv.vipid IS NULL \nAND 0 < (select count(*) from staging.stg_vip)"
                },
                {
                    "name": "ProIdentifierStatusSet",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "PR-Inactivate-VIPID-HRPRNs",
                    "class": "SQLQuery",
                    "rule": "SELECT hrprn.source_id, hrprn.identifier, hrprn.identifier_type_id, 0\nFROM pro_identifiers vipid\nJOIN pro_identifiers hrprn on hrprn.person_id = vipid.person_id and hrprn.identifier_type_id = 13 /*hrprn*/ and \nhrprn.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nLEFT OUTER JOIN staging.stg_vip sv on sv.vipid = vipid.identifier and sv.id_ssn = hrprn.identifier\nWHERE vipid.identifier_type_id = 18\nAND vipid.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nAND hrprn.source_id = vipid.source_id\nAND sv.vipid IS NULL \nAND 0 < (select count(*) from staging.stg_vip)"
                },
                {
                    "name": "PR-Inactivate-VIPIDs",
                    "class": "SQLQuery",
                    "rule": "SELECT vipid.source_id, vipid.identifier, vipid.identifier_type_id, 0\nFROM pro_identifiers vipid\nLEFT OUTER JOIN staging.stg_vip sv on sv.vipid = vipid.identifier\nWHERE vipid.identifier_type_id = 18\nAND vipid.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nAND sv.vipid IS NULL \nAND 0 < (select count(*) from staging.stg_vip)"
                },
                {
                    "name": "PR-IdentMergeofVIPs",
                    "class": "SQLQuery",
                    "rule": "TRUNCATE TABLE staging.stg_vip"
                }
                
                
                
                
27	9	PR-IdentMergeofVIPs		1	SELECT DISTINCT 18 as vipid_identifier_type\n       , sv.vipid\n       , CASE WHEN substr(sv.id_ssn, 1, 3) IN ('949') THEN 13 ELSE 1 END as ssn_identifier_type\n       , sv.id_ssn\n       , sv.biodem_dob\n       , sv.biodem_dod\n       , sv.biodem_gender\n       , sv.names_prefix\n       , sv.names_first\n       , sv.names_middle\n       , sv.names_last\n       , sv.names_suffix\n       , 17 as vip_source_id\nFROM staging.stg_vip sv\nWHERE sv.vipid IS NOT NULL\nAND sv.names_first IS NOT NULL\nAND sv.names_last IS NOT NULL\nAND ( sv.biodem_dob IS NOT NULL or sv.id_ssn IS NOT NULL )\nORDER BY sv.vipid DESC	
27	10	CIMS_PR Identity Merge		1	CALL cims_pr.idr_identity_merge(?,?,?,?,?,?,?,?,?,?,?,?,?)	
27	11	PR-AddVIPConflicts		1	insert ignore into ctx_identifier_conflicts (
   identifier_type_id,
   identifier,
   source_id,
   current_identity_id,
   conflicting_identity_id
) select '42', 
      concat(sv.id_usfid, ' USFID only in VIP'),
      min(id.source_id),
      id.identity_id,
      id.identity_id
from idr_identifiers id
join staging.stg_vip sv on sv.vipid = id.identifier
left outer join idr_identifiers usfid on usfid.identity_id = id.identity_id and usfid.identifier_type_id = 2 /*USFID*/ and usfid.status = 'Active'
left outer join idr_identifiers usfid2 on usfid2.identifier = sv.id_usfid and usfid2.identifier_type_id = 2 /*USFID*/ and usfid2.status = 'Active'
where id.identifier_type_id = 18 /* VIPID */
and id.status = 'Active'
and usfid.identifier IS NULL
and sv.id_usfid IS NOT NULL
and usfid2.identifier IS NOT NULL
and not exists (select 'alreadythere' from ctx_identifier_conflicts ic 
      where ic.identifier = concat(sv.id_usfid, ' USFID only in VIP')
      and ic.current_identity_id = id.identity_id 
          )
group by '42', 
      concat(sv.id_usfid, ' USFID only in VIP'),
      id.identity_id,
      id.identity_id
UNION
select '42', 
      concat(sv.id_emplid, ' EmplID only in VIP'), 
      min(id.source_id),
      id.identity_id,
      id.identity_id
from idr_identifiers id
join stg_vip sv on sv.vipid = id.identifier 
left outer join idr_identifiers emplid on emplid.identity_id = id.identity_id and emplid.identifier_type_id = 3 and emplid.status = 'Active'
left outer join idr_identifiers emplid2 on emplid2.identifier = sv.id_emplid and emplid2.identifier_type_id = 3 and emplid2.status = 'Active'
where id.identifier_type_id = 18 /* VIPID */
and id.status = 'Active'
and sv.id_emplid IS NOT NULL
and emplid2.identifier IS NOT NULL
and (emplid.identifier IS NULL or emplid.identifier <> sv.id_emplid)
and not exists (select 'alreadythere' from ctx_identifier_conflicts ic 
      where ic.identifier = concat(sv.id_emplid, ' EmplID only in VIP')
      and ic.current_identity_id = id.identity_id 
          )
group by '42', 
      concat(sv.id_emplid, ' EmplID only in VIP'), 
      id.identity_id,
      id.identity_id	
27	12	InsertConflicts		1	insert ignore into ctx_identifier_conflicts (
   identifier_type_id,
   identifier,
   source_id,
   current_identity_id,
   conflicting_identity_id
) select '42' as id_type_id, 
			'DOB+LN+FN dup' as identifier, 
			b1.source_id,
			b1.identity_id,
			b2.identity_id
from idr_biodem b1
join idr_names na1 on na1.identity_id = b1.identity_id 
join idr_identifiers e1 on e1.identity_id = b1.identity_id and e1.identifier_type_id not in ( 2, 4, 1, 13, 10, 11, 42 ) and e1.status = 'Active'
left outer join idr_identifiers u1 on u1.identity_id = b1.identity_id and u1.identifier_type_id = 2 and u1.status = 'Active'
left outer join ctx_identifier_conflicts ic on ic.current_identity_id = b1.identity_id and ic.identifier = 'DOB+LN+FN dup'
left outer join idr_identifiers ssn1 on ssn1.identity_id = b1.identity_id and ssn1.identifier_type_id = 1 and ssn1.status = 'Active'
join idr_biodem b2 on b2.date_of_birth = b1.date_of_birth and b2.identity_id <> b1.identity_id
join idr_names na2 on na2.identity_id = b2.identity_id and na2.lastname = na1.lastname and na2.firstname = na1.firstname
left outer join idr_identifiers ssn2 on ssn2.identity_id = b2.identity_id and ssn2.identifier_type_id = 1 and ssn2.status = 'Active'
where (ssn1.identifier IS NULL or ssn2.identifier IS NULL)
and u1.identity_id IS NULL
and ic.current_identity_id IS NULL
and na1.change_id = (select max(naX.change_id) from idr_names naX where naX.identity_id = na1.identity_id and naX.source_id = na1.source_id)
and na2.change_id = (select max(naY.change_id) from idr_names naY where naY.identity_id = na2.identity_id and naY.source_id = na2.source_id)
group by '42', 
			'DOB+LN+FN dup', 
			b1.source_id, 
			b1.identity_id,
			b2.identity_id
UNION
select '42' as id_type_id, 
			'Multiple active SSNs' as identifier, 
			ssn1.source_id as source_id1,
			ssn1.identity_id as ident1,
			ssn2.identity_id as ident2	
from idr_identifiers ssn1
join idr_identifiers ssn2 on ssn2.identity_id = ssn1.identity_id 
			and ssn2.identifier_type_id = 1
			and ssn2.status = 'Active'
			and ssn2.identifier <> ssn1.identifier
left outer join ctx_identifier_conflicts ic on ic.current_identity_id = ssn1.identity_id 
			and ic.identifier = 'Multiple active SSNs'
where ssn1.identifier_type_id = 1
and ssn1.status = 'Active'
and ic.current_identity_id IS NULL
group by '42', 
			'Multiple active SSNs', 
			ssn1.source_id,
			ssn1.identity_id,
			ssn2.identity_id
UNION
select '42' as id_type_id, 
			'Multiple active EmplIDs' as identifier, 
			e1.source_id as source_id1,
			e1.identity_id as ident1,
			e2.identity_id as ident2
from idr_identifiers e1
join idr_identifiers e2 on e2.identity_id = e1.identity_id 
			and e2.identifier_type_id = e1.identifier_type_id
			and e2.status = e1.status
			and e2.identifier <> e1.identifier
left outer join ctx_identifier_conflicts ic on ic.current_identity_id = e1.identity_id 
			and ic.identifier = 'Multiple active EmplIDs'
where e1.identifier_type_id = 3
and e1.status = 'Active'
and ic.current_identity_id IS NULL
group by '42', 
			'Multiple active EmplIDs', 
			e1.source_id,
			e1.identity_id,
			e2.identity_id	
27	13	ImportIdentityToBaggageClaimVIP Snippit		1	DEFINEDSERVICE:ImportIdentityToBaggageClaimVIP	
                
            ]     
        },
        {   
            "name": "OASISLiteHourlyModified",
            "rules": [
                
            ]   
        },
        {   
            "name": "OASISLiteHourly1_5",
            "rules": [
                
            ]    
        },
        {   
            "name": "ToBeDeleted",
            "rules": [
                
            ]     
        },
        {   
            "name": "HSCDW_Import2x",
            "rules": [
                
            ]     
        },
        {   
            "name": "AddConflicts2x",
            "rules": [
                
            ]   
        },
        {   
            "name": "OASIS_Import2x",
            "rules": [
                
            ]   
        },
        {   
            "name": "OasisImportSourceandCurrentTimestamp",
            "rules": [
                
            ]   
        },
        {   
            "name": "Oasisp-create2x",
            "rules": [
                
            ]     
        },
        {   
            "name": "PeopleAdminBCToGEMS_2x",
            "rules": [
                
            ]   
        }
    ]
}

	at grails.converters.JSON.parse(JSON.java:281)
	... 9 more
2013-05-09 11:55:57,727 [localhost-startStop-1] ERROR StackTrace  - Full Stack Trace:
org.codehaus.groovy.grails.web.converters.exceptions.ConverterException: Error parsing JSON
	at grails.converters.JSON.parse(JSON.java:290)
	at BootStrap$_closure1.doCall(BootStrap.groovy:28)
	at grails.util.Environment.evaluateEnvironmentSpecificBlock(Environment.java:308)
	at grails.util.Environment.executeForEnvironment(Environment.java:301)
	at grails.util.Environment.executeForCurrentEnvironment(Environment.java:277)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
	at java.lang.Thread.run(Thread.java:680)
Caused by: org.codehaus.groovy.grails.web.json.JSONException: Expected a ',' or ']' at character 59794 of {    
    "ruleSets": [
        {   
            "name": "debugRuleSet",
            "rules": [
                {
                    "name": "GEMS_test_rule_2",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "GEMS_test_rule",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "GEMS_test_rule_again",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "GEMS_test_rule_again_2",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "Dummy_Insert_Input_Reorder",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO test_dump_min (identifier_type_id,identifier,ssn_identifier_type_id,ssn,birthdate,deathdate,sex,prefix,firstName,middleName,lastName,suffix,source_id) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)"
                },
                {
                    "name": "Dummy_INSERT",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO test_dump (\n\tidentifier_type_id,\n\tidentifier,\n\tssn_identifier_type_id,\n\tssn,\n\tbirthdate,\n\tdeathdate,\n\tsex,prefix,\n\tfirstName,\n\tmiddleName,\n\tlastName,\n\tsuffix,\n\tsource_id) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)"
                },
                {
                    "name": "This_is_a_bum_rule",
                    "class": "SQLQuery",
                    "rule": "SELECT '1' FROM DUAL"
                },
                {
                    "name": "This_is_a_bum_PA_rule",
                    "class": "SQLQuery",
                    "rule": "SELECT loaded_dt FROM people_admin"
                },
                {
                    "name": "BC_Select",
                    "class": "SQLQuery",
                    "rule": "SELECT ssn,birthdate,firstName,lastName FROM test_dump_min"
                },
                {
                    "name": "Select_Test",
                    "class": "SQLQuery",
                    "rule": "SELECT 'James','Patrick','Jones' FROM DUAL"
                },
                {
                    "name": "Select_Prepare",
                    "class": "SQLQuery",
                    "rule": "SELECT ?,?,? FROM DUAL"
                },
                {
                    "name": "Append_Wilhoit",
                    "class": "SQLQuery",
                    "rule": "SELECT 'Wilhoit' FROM DUAL"
                },
                {
                    "name": "DROP_TABLE_cool2",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE cool2"
                },
                {
                    "name": "adsf",
                    "class": "SQLQuery",
                    "rule": "SELECT *\nFROM Andy"
                }
                
            ]
        },
        {
            "name": "GEMS_Silver_Rule_Set_2_x",
            "rules": [
                {
                    "name": "GEMS_Silver_Rule_Population",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN TRIM(pd.name_title) IS NULL OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n        AND SUBSTR(pd.EMPLID,1,5) = '00000'  \n        AND REGEXP_LIKE(pd.emplid, '^[[:digit:]]{11}$') \n\tORDER BY pd.emplid desc"
                },
                {
                    "name": "Update_Active_Status_Emplid",
                    "class": "SQLQuery",
                    "rule": "SELECT identifier\n\tFROM pro_identifiers \n\tWHERE identifier_type_id=3 AND source_id=12\n\tORDER BY identifier"
                },
                {
                    "name": "Update_Active_Status_SSN_GEMS",
                    "class": "SQLQuery",
                    "rule": "SELECT identifier\n\tFROM pro_identifiers \n\tWHERE identifier_type_id=1 AND source_id =12\n\tORDER BY identifier"
                },
                {
                    "name": "GEMS_HRPR_Iterator",
                    "class": "SQLQuery",
                    "rule": "SELECT identifier\n\tFROM pro_identifiers \n\tWHERE identifier_type_id=13 AND source_id =12\n\tORDER BY identifier"
                },
                {
                    "name": "GEMS_SSNExistTest",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 AS SSN_IDENTIFIER_TYPE,COUNT(*) AS GEMS_SSNCount\n\tFROM ps_pers_nid n\n\tWHERE n.country(+) = 'USA'\n\tAND n.national_id_type(+) = 'PR'\n\tAND trim(n.national_id) = ?"
                },
                {
                    "name": "GEMS_HRPRExistTest",
                    "class": "SQLQuery",
                    "rule": "SELECT 13 AS HRPR_IDENTIFIER_TYPE,COUNT(*) AS HRPRCount\n\tFROM ps_pers_nid n\n\tWHERE n.country(+) = 'USA'\n\tAND n.national_id_type(+) = 'PR'\n\tAND trim(n.national_id) = ?"
                },
                {
                    "name": "Emplid_Exist_Test",
                    "class": "SQLQuery",
                    "rule": "SELECT 3 AS EMPL_IDENTIFIER_TYPE, COUNT(*) AS EmplidCount\n\tFROM ps_personal_data pd\n\tWHERE pd.emplid=?"
                },
                {
                    "name": "Set_Empl_Active_Flag",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET status='Active',\n\tsource_id=?\n\tWHERE identifier=?\n\tAND identifier_type_id=?\n\tAND identifier_status_id != (\n\t\tSELECT identifier_status_id \n\t\t\tFROM identifier_statuses \n\t\t\tWHERE `name`='Active'\n\t)\n\tAND ? > 0"
                },
                {
                    "name": "Set_Empl_Inactive_Flag",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET status='Inactive'\n\tWHERE source_id=?\n\tAND identifier=?\n\tAND identifier_type_id=?\n\tAND identifier_status_id != (\n\t\tSELECT identifier_status_id \n\t\t\tFROM identifier_statuses \n\t\t\tWHERE `name`='Inactive'\n\t)\n\tAND ? < 1"
                },
                {
                    "name": "Add_GEMS_Source",
                    "class": "SQLQuery",
                    "rule": "SELECT 14 AS source_id FROM DUAL"
                },
                {
                    "name": "BaggageClaimSORCreate",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE `incomming_sor_records` (\n  `primary_identifier_type_id` bigint(18) unsigned DEFAULT NULL,\n  `primary_identifier` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `secondary_identifier_type_id` bigint(18) unsigned DEFAULT NULL,\n  `secondary_identifier` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `birthday` date DEFAULT NULL,\n  `deathday` date DEFAULT NULL,\n  `gender` varchar(10) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `prefix` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `firstname` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `middlename` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `lastname` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `suffix` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `baggage_source_id` bigint(18) unsigned DEFAULT NULL,\n  `status` enum('Valid','Invalid') COLLATE utf8_unicode_ci DEFAULT NULL,\n  KEY `incomming_sor_records_baggage_source_id` (`baggage_source_id`),\n  CONSTRAINT `incomming_sor_records_baggage_source_id` FOREIGN KEY (`baggage_source_id`) REFERENCES `baggage_sources` (`baggage_source_id`) ON DELETE SET NULL ON UPDATE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;"
                },
                {
                    "name": "Add_new_BC_Source",
                    "class": "SQLQuery",
                    "rule": "INSERT IGNORE INTO baggage_sources (baggage_source_id,cims_pr_source_id,name,format) \nVALUES ('5','14','GEMS-DATABASE','DATABASE')"
                },
                {
                    "name": "Update_SOR",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO incomming_sor_records\n(primary_identifier_type_id,primary_identifier,secondary_identifier_type_id,\nsecondary_identifier,birthday,deathday,gender,prefix,firstname,middlename,lastname,\nsuffix,baggage_source_id,status) VALUES\n(?,?,?,?,?,?,?,?,?,?,?,?,5,'Valid')"
                },
                {
                    "name": "GEMS_Recent_Activ_Pop",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN TRIM(pd.name_title) IS NULL OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n        AND SUBSTR(pd.EMPLID,1,5) = '00000'  \n        AND REGEXP_LIKE(pd.emplid, '^[[:digit:]]{11}$') \nand (pd.lastupddttm > (sysdate - 1) or n.lastupddttm > (sysdate - 1))\n\tORDER BY pd.emplid desc"
                },
                {
                    "name": "Reassemble_Params",
                    "class": "SQLQuery",
                    "rule": "SELECT idinfo.source_id,idinfo.identifier_type_id,idinfo.identifier,idinfo.source_id\n\tFROM\n\t\t(\n\t\t\tSELECT \n\t\t\t\t? AS identifier_type_id,\n\t\t\t\t? AS identifier,\n\t\t\t\t? AS ssn_identifier_type_id,\n\t\t\t\t? AS ssn,\n\t\t\t\t? AS birthdate,\n\t\t\t\t? AS deathdate,\n\t\t\t\t? AS gender,\n\t\t\t\t? AS prefix,\n\t\t\t\t? AS first_name,\n\t\t\t\t? AS middle_name,\n\t\t\t\t? AS last_name,\n\t\t\t\t? AS suffix,\n\t\t\t\t? AS source_id\n\t\t\tFROM DUAL\n\t\t) AS idinfo"
                },
                {
                    "name": "Set_the_authoritative_source",
                    "class": "SQLQuery",
                    "rule": "UPDATE idr_identifiers\n\tSET status='Active' AND source_id=?\n\tWHERE identifier_type_id=? AND identifier=? AND source_id != ?"
                },
                {
                    "name": "Set_the_Gems_import_source",
                    "class": "SQLQuery",
                    "rule": "SELECT 5 AS importSourceId FROM DUAL"
                }
            ]  
        },
        {
            "name": "CIMS_PRStoredProcedures2x",
            "rules": [
                {
                    "name": "PrsBiodemUpdater",
                    "class": "NamedQuery",
                    "rule": "personId,birthday,deathday,gender,sourceId"
                },
                {
                    "name": "PrsNamesUpdater",
                    "class": "NamedQuery",
                    "rule": "personId,prefix,firstname,middlename,lastname,suffix,sourceId"
                },
                {
                    "name": "PrcPersonSilverRuleCheck",
                    "class": "NamedQuery",
                    "rule": "ssn,birthday,firstname,lastname"
                },
                {
                    "name": "PrsBiodemValidPastDate",
                    "class": "NamedQuery",
                    "rule": "dateString"
                },
                {
                    "name": "PrcPersonByIdentifier",
                    "class": "NamedQuery",
                    "rule": "identifierTypeId,identifier"
                },
                {
                    "name": "PrcPersonsCreateNew",
                    "class": "NamedQuery",
                    "rule": "sourceId"
                },
                {
                    "name": "PrcPersonMerge",
                    "class": "NamedQuery",
                    "rule": "primaryIdentifierTypeId, primaryIdentifier,secondaryIdentifierTypeId,secondaryIdentifier,birthday,deathday,gender,prefix,firstname,middlename,lastname,suffix,sourceId"
                },
                {
                    "name": "ProIdentifierStatusSet",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "ImpRepositoryIdentityNew",
                    "class": "SQLQuery",
                    "rule": "SELECT imp_repository_identity_new(?) FROM DUAL"
                },
                {
                    "name": "ImpRepositoryMerge",
                    "class": "NamedQuery",
                    "rule": "importSourceId,firstname,middlename,lastname,gender,birthday,unparsedLine"
                }
            ]   
        },
        {
            "name": "CIMS_PRBaggageClaimMerge",
            "rules": [
                {
                    "name": "PeopleAdmin_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT loaded_dt,\n\thpid AS HPID,\n\tIF(ssn = 'No Response','',REPLACE(ssn,'-','')) AS SSN,\n\tIF(LEFT(UPPER(usfid),1) != 'U','',IF(LENGTH(usfid) = 9,usfid,'')) AS USFID,\n\tIF(emplid = 'No Response','',LPAD(TRIM(emplid),11,'0')) AS EMPLID,\n\tIF(fname = 'No Response','',TRIM(fname)) AS FIRSTNAME,\n\tIF(mname = 'No Response','',TRIM(mname)) AS MIDDLENAME,\n\tIF(lname = 'No Response','',TRIM(lname)) AS LASTNAME,\n\tIF(gender IN('M','F'),gender,'') AS GENDER,\n\tIF(dob = 'No Response',NULL,TRIM(dob)) AS BIRTHDAY,\n\tRTRIM(baggage) AS BAGGAGE\n\tFROM nams.people_admin\n\tWHERE DATE(loaded_dt) != '0000-00-00'"
                },
                {
                    "name": "CardID_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT to_char(ID_ISSUE_DATE,'YYYY-MM-DD') AS IMPORT_DATE,\n\tID_CARD_NUMBER,\n\tNAME_FIRST AS FIRSTNAME,\n\tNAME_MIDDLE AS MIDDLENAME,\n\tNAME_LAST AS LASTNAME,\n\tto_char(BIRTH_DATE,'YYYY-MM-DD') AS BIRTHDAY\n\tFROM ID WHERE ROWNUM < 50"
                },
                {
                    "name": "NAMS_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT \n\tNOW() AS IMPORT_DATE,\n\tn.badge AS NAMSID,\n\tn.fname AS FIRSTNAME,\n\tn.mname AS MIDDLENAME,\n\tn.lname AS LASTNAME,\n\tSTR_TO_DATE(CONCAT('',\n\t\tIF(\n\t\t\t((SELECT COUNT(*) FROM bdays WHERE badge=n.badge AND bday > 0 ORDER BY bdayid DESC LIMIT 1) < 1),\n\t\t\tn.bday,\n\t\t\t(SELECT bday FROM bdays WHERE badge=n.badge AND bday > 0 ORDER BY bdayid DESC LIMIT 1)\n\t\t) \n\t) ,'%Y%m%d') AS BIRTHDAY\n\tFROM names n\n\tWHERE \n\t(SELECT COUNT(*) FROM oasis WHERE badge=n.badge LIMIT 1) > 0 \n\tOR\n\t(SELECT COUNT(*) FROM gems WHERE badge=n.badge LIMIT 1) > 0"
                }
            ]   
        },
        {
            "name": "CIMS_PRBaggageClaimMergeOtherRules",
            "rules": [
                {
                    "name": "People_Admin_Request",
                    "class": "SQLQuery",
                    "rule": "SELECT 2 AS importSourceId,0 AS reconcile FROM DUAL;"
                },
                {
                    "name": "People_Admin_Request",
                    "class": "SQLQuery",
                    "rule": "SELECT 2 AS importSourceId,0 AS reconcile FROM DUAL;"
                },
                {
                    "name": "ImportToBaggageClaim",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "Dummy_ParamCollector_for_ImportToBaggageClaim_Defined_Service_loop",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS baggageClaimIdentityId, CAST(? AS UNSIGNED) AS personId, ? AS importSourceId, ? AS sourceId, ? AS baggageClaimIdentityStatusId, ? AS firstName, ? AS middleName, ? AS lastName, ? AS gender, ? AS dateOfBirth"
                },
                {
                    "name": "AddToBaggageClaim",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "PeopleAdmin_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT \n\t2 AS importSourceId,\n\tIF(fname = 'No Response','',TRIM(fname)) AS FIRSTNAME,\n\tIF(mname = 'No Response','',TRIM(mname)) AS MIDDLENAME,\n\tIF(lname = 'No Response','',TRIM(lname)) AS LASTNAME,\n\tIF(gender IN('M','F'),gender,'') AS GENDER,\n\tIF(dob = 'No Response','',TRIM(REPLACE(dob,'/','-'))) AS BIRTHDAY,\n\tloaded_dt,\n\tCONCAT('[{\"identifier\":\"',hpid,'\",\"identifierType\":{\"identifierTypeId\":\"10\"}},{\"identifier\":\"',IF(ssn = 'No Response','',REPLACE(ssn,'-','')),'\",\"identifierType\":{\"identifierTypeId\":\"1\"}},{\"identifier\":\"',IF(LEFT(UPPER(usfid),1) != 'U','',IF(LENGTH(usfid) = 9,usfid,'')),'\",\"identifierType\":{\"identifierTypeId\":\"2\"}},{\"identifier\":\"',IF(emplid = 'No Response','',LPAD(TRIM(emplid),11,'0')),'\",\"identifierType\":{\"identifierTypeId\":\"3\"}}]') AS baggageClaimIdentifiers,\n\tRTRIM(baggage) AS BAGGAGE\n\tFROM nams.people_admin\n\tWHERE DATE(loaded_dt) != '0000-00-00' LIMIT 10"
                },
                {
                    "name": "Reconcile_Defined_Service",
                    "class": "DefinedService"
                },
                {
                    "name": "ImportIdentityToBaggageClaimPeopleAdmin",
                    "class": "DefinedService"
                },
                {
                    "name": "Prepend_PeopleAdmin_Source",
                    "class": "SQLQuery",
                    "rule": "SELECT 2 AS importSourceId FROM DUAL"
                },
                {
                    "name": "Prepend_Gems_Import_Source",
                    "class": "SQLQuery",
                    "rule": "SELECT 5 AS importSourceId FROM DUAL"
                },
                {
                    "name": "Prepend_Gems_Import_Source_and_Current_Timestamp",
                    "class": "SQLQuery",
                    "rule": "SELECT 5 AS importSourceId,NOW() AS importTimestamp,\"\" AS claimInfo FROM DUAL"
                },
                {
                    "name": "Prepend_VIP_Import_Source_and_Current_Timestamp",
                    "class": "SQLQuery",
                    "rule": "SELECT 8 AS importSourceId,NOW() AS importTimestamp FROM DUAL"
                },
                {
                    "name": "ImportIdentityToBaggageClaimHealth",
                    "class": "DefinedService"
                },
                {
                    "name": "ImportIdentityToBaggageClaimGEMS",
                    "class": "DefinedService"
                }
            ]    
        },
        {
            "name": "NamsDefinedServices",
            "rules": [
                {
                    "name": "NetIDToEMail_Defaults",
                    "class": "SQLQuery",
                    "rule": "SELECT 'netid' AS submit_type,'mail' AS return_type,'json' AS `return`,? AS `value` FROM DUAL"
                },
                {
                    "name": "WsConvertNetidToMail",
                    "class": "DefinedService"
                }
            ]     
        },
        { 
            "name": "UnumberDefinedServices",
            "rules": [
                {
                    "name": "Unumber_Defaults",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 AS personId,2 AS personAllocatedId,2 AS identifierTypeId, ? AS amount FROM DUAL"
                },
                {
                    "name": "ReallocatePoolIdentifiers",
                    "class": "DefinedService"
                }
            ]      
        },
        { 
            "name": "IdentityMergeRules",
            "rules": [
                {
                    "name": "Unumber_Defaults",
                    "class": "SQLQuery",
                    "rule": "SELECT \n? AS PrimaryIdentifierType,\n? AS PrimaryIdentifier,\n? AS SecondaryIdentifierType,\n? AS SecondaryIdentifier,\n? AS BirthDate,\n? AS DeathDate,\n? AS Gender,\n? AS Prefix,\n? AS FirstName,\n? AS MiddleName,\n? AS LastName,\n? AS Suffix,\n? AS SourceId\nFROM DUAL\t"
                },
                {
                    "name": "Set_Past_year_Limit",
                    "class": "SQLQuery",
                    "rule": "SELECT 150 AS maxyears FROM DUAL"
                },
                {
                    "name": "PrsBiodemValidPastDateLimit",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "PrsBiodemValidPastDate",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "FilterIdentifier",
                    "class": "DefinedService"
                },
                {
                    "name": "UniqueIdentifierMatch",
                    "class": "SQLQuery",
                    "rule": "SELECT foundUniquePerson.person_id AS personId,\n? AS PrimaryIdentifierType,\n? AS PrimaryIdentifier,\n? AS SecondaryIdentifierType,\n? AS SecondaryIdentifier,\n? AS BirthDate,\n? AS DeathDate,\n? AS Gender,\n? AS Prefix,\n? AS FirstName,\n? AS MiddleName,\n? AS LastName,\n? AS Suffix,\n? AS SourceId\nFROM (\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n\tUNION\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n) AS foundUniquePerson HAVING COUNT(*)=1"
                },
                {
                    "name": "ValidIdentfiersSet",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS person_id,\nidentifiers.identifier_type_id,\nidentifiers.identifier,\n? AS SourceId\nFROM (\n\tSELECT identifier_type_id,identifier FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0\n\tUNION\n\tSELECT identifier_type_id,identifier FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0\n) AS identifiers"
                },
                {
                    "name": "IdentifierSourceUpdate",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET source_id=?\n\tWHERE  source_id !=? AND identifier_type_id=? AND identifier=? AND person_id=?"
                },
                {
                    "name": "IdentifierReallocationUpdate",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET person_id = ?\n\tWHERE identifier_type_id=? AND identifier=? AND person_id !=? AND identifier_status_id != (SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active');"
                },
                {
                    "name": "IdentifierStatusUpdate",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET identifier_status_id = (SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active') AND merge_date=NOW()\n\tWHERE identifier_type_id=? AND identifier=? AND person_id=? AND identifier_status_id != (SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active');"
                },
                {
                    "name": "NameChangeDetection",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS prefix,? AS FirstName,? AS MiddleName,? AS LastName,? AS Suffix,? AS SourceId,? AS personId\nFROM DUAL WHERE \n(SELECT COUNT(*) FROM (\n\tSELECT prefix,firstname,middlename,lastname,suffix FROM prs_names WHERE source_id=? AND person_id=? ORDER BY last_changed DESC LIMIT 1\n) AS lastNameBySource\nWHERE prefix=? AND firstname=? AND middlename=? AND lastname=? AND suffix=?) < 1"
                },
                {
                    "name": "NameCreateNew",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO prs_names (prefix,firstname,middlename,lastname,suffix,source_id,person_id,last_changed) VALUES(?,?,?,?,?,?,?,NOW())"
                },
                {
                    "name": "BioDemChangeDetection",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS date_of_birth,? AS date_of_death,? AS gender,? AS SourceId,? AS PersonId\nFROM DUAL WHERE \n(SELECT COUNT(*) FROM (\n\tSELECT date_of_birth,date_of_death,gender FROM prs_biodem WHERE source_id=? AND person_id=? ORDER BY last_changed DESC LIMIT 1\n) AS lastNameBySource\nWHERE date_of_birth=? AND date_of_death=? AND gender=?) < 1"
                },
                {
                    "name": "BioDemCreateNew",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO prs_biodem (date_of_birth,date_of_death,gender,source_id,person_id,last_changed) VALUES(?,?,?,?,?,NOW())"
                },
                {
                    "name": "IdentifierNewDetection",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS identifier_type_id,? AS identifier,? AS sourceId,? AS personId\n\tFROM DUAL\n\tWHERE LENGTH(TRIM(?)) > 0 AND (SELECT COUNT(*) FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0) < 1"
                },
                {
                    "name": "IdentifierCreateNew",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO pro_identifiers (identifier_type_id,identifier,source_id,person_id,merge_date,identifier_status_id) VALUES(?,?,?,?,NOW(),(SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active'))"
                },
                {
                    "name": "EndLoop_Filler",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 FROM DUAL"
                },
                {
                    "name": "NoUniqueIdentifierCheck",
                    "class": "SQLQuery",
                    "rule": "SELECT \n? AS PrimaryIdentifierType,\n? AS PrimaryIdentifier,\n? AS SecondaryIdentifierType,\n? AS SecondaryIdentifier,\n? AS BirthDate,\n? AS DeathDate,\n? AS Gender,\n? AS Prefix,\n? AS FirstName,\n? AS MiddleName,\n? AS LastName,\n? AS Suffix,\n? AS SourceId\nFROM DUAL\nWHERE\n(SELECT COUNT(*) FROM\n(\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n\tUNION\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n) AS foundUniquePerson) !=1"
                }
            ]     
        },
        { 
            "name": "Snippets",
            "rules": [
                {
                    "name": "IdentityMergeChainDualIdentifiers",
                    "class": "Snippet"
                }
            ]      
        },
        { 
            "name": "AndysRuleSet",
            "rules": [
                {
                    "name": "Create_Table",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE andy \n(\nid INT,\ndata VARCHAR(100)\n);"
                },
                {
                    "name": "Create_Table_2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE andy2\n(\nid INT,\ndata VARCHAR(100),\ndata2 VARCHAR(100)\n);"
                },
                {
                    "name": "Populate",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES ('1', 'Andy1');"
                },
                {
                    "name": "Populate2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES ('2', 'Andy2');"
                },
                {
                    "name": "Populate4",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy2 VALUES (?,?,CONCAT(?,?));"
                },
                {
                    "name": "SELECT_FROM_DUAL",
                    "class": "SQLQuery",
                    "rule": "Select \"3\", \"Andy4\" FROM DUAL"
                },
                {
                    "name": "Populate3",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?,?);"
                },
                {
                    "name": "loop",
                    "class": "SQLQuery",
                    "rule": "SELECT id, data FROM andy"
                }
            ]      
        },
        { 
            "name": "AndysSecondRuleSet",
            "rules": [
                {
                    "name": "DROP_TABLE",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS cool"
                },
                {
                    "name": "DROP_TABLE_cool2",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS cool2"
                },
                {
                    "name": "Create_Table_cool",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE cool ( id INT, data VARCHAR(100));"
                },
                {
                    "name": "Create_Table_cool2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE cool2 (id INT, data VARCHAR(100), id2 INT, data2 VARCHAR(100))"
                },
                {
                    "name": "Populate_cool_1",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool VALUES ('1', 'dataone')"
                },
                {
                    "name": "Populate_cool_2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool VALUES ('2', 'datatwo')"
                },
                {
                    "name": "Select_From_Table_cool",
                    "class": "SQLQuery",
                    "rule": "SELECT id, data FROM cool WHERE id = 1;"
                },
                {
                    "name": "Select_From_Table_cool_2",
                    "class": "SQLQuery",
                    "rule": "SELECT id, data FROM cool WHERE id = 2"
                },
                {
                    "name": "Insert_Into_Cool2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool2 (id, data, id2, data2) VALUES (?,?,?,?)"
                }
            ]       
        },
        { 
            "name": "WaynesFirstRuleSet",
            "rules": [
                {
                    "name": "Create_Table",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE cool\n(\nid int, data VARCHAR(100)\n);"
                },
                {
                    "name": "Populate_Table",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool\nVALUES\n(1, dataone);"
                },
                {
                    "name": "Populate_Table_2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool\nVALUES\n(1, dataone);"
                }
            ]      
        },
        { 
            "name": "PrependJPJ",
            "rules": [
                {
                    "name": "Rule1",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 FROM DUAL"
                },
                {
                    "name": "Rule2",
                    "class": "SQLQuery",
                    "rule": "SELECT \"Andy\" FROM DUAL"
                },
                {
                    "name": "Rule3",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES(?,?)"
                }
            ]      
        },
        { 
            "name": "WaynesDemofilecabinet",
            "rules": [
                {
                    "name": "Create_Table_1",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE demo\n(\nfirst_name VARCHAR(25),\nlast_name VARCHAR(25),\ncity VARCHAR(20),\nstate VARCHAR(2),\nbirth DATE NOT NULL\n);"
                },
                {
                    "name": "Populate_value_1",
                    "class": "SQLQuery",
                    "rule": "SELECT \"Randy\", \"Smith\", \"Tampa\", \"FL\", \"2012-01-18\" FROM DUAL"
                },
                {
                    "name": "Insert_values_1",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO demo\nVALUES (\n?, ?, ?, ?, ?\n);"
                },
                {
                    "name": "Drop_Table",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS demo;"
                },
                {
                    "name": "Update_Table",
                    "class": "SQLQuery",
                    "rule": "UPDATE demo\nSET\ndate = \"2012-01-23\"\nWHERE date = \"2012-01-18\";"
                }
            ]     
        },
        { 
            "name": "Drink_InfoExercise1set",
            "rules": [
                {
                    "name": "drop_output_drinks_table",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS output_drinks;"
                },
                {
                    "name": "create_output_drinks_table",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE output_drinks\n(\nname VARCHAR(25),\ncalcost VARCHAR(5)\n);"
                },
                {
                    "name": "query_results",
                    "class": "SQLQuery",
                    "rule": "SELECT drink_name, ROUND(calories/cost, 2) AS calcost FROM drink_info"
                },
                {
                    "name": "output_to_output_drinks",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO output_drinks\nVALUES (\n?, ?\n);"
                }
            ]     
        },
        {   
            "name": "Drink_InfoExercise2set",
            "rules": [
                {
                    "name": "drop_table_output_drinks2",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS output_drinks2;"
                },
                {
                    "name": "create_table_output_drinks2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE output_drinks2\n(\ndrink_name VARCHAR(25),\ncal_carbs VARCHAR(20)\n);"
                },
                {
                    "name": "query_drink_info",
                    "class": "SQLQuery",
                    "rule": "SELECT drink_name, ROUND(calories/carbs, 2) AS cal_carbs FROM drink_info;"
                },
                {
                    "name": "output_to_output_drinks2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO output_drinks2\nVALUES (\n?, ?\n);"
                }                
            ]   
        },
        {   
            "name": "AndysLoop",
            "rules": [
                {
                    "name": "Drop_Tables_Created",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS loop1, loop2"
                },
                {
                    "name": "Create_Loop_Table_1",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE loop1 (id INT, dataone VARCHAR(20), datatwo VARCHAR(20))"
                },
                {
                    "name": "Create_Loop_Table_2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE loop2 (id INT, dataone VARCHAR(20), datatwo VARCHAR(20))"
                },
                {
                    "name": "Populate_Loop_Table_1",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO loop1 VALUES (1,'a','b'),(2,'c','d'),(3,'e','f'),(4,'g','h'),(5,'i','j'),(6,'k','l')"
                },
                {
                    "name": "Select_where_id_lt_4",
                    "class": "SQLQuery",
                    "rule": "SELECT id, dataone, datatwo FROM loop1 where id < 4"
                },
                {
                    "name": "Populate_Loop_Table_2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO loop2 VALUES (?,?,?)"
                }
            ]      
        },
        {   
            "name": "Drink_infoexerciseset3",
            "rules": [
                {
                    "name": "DROP_TABLE",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS output_drinks3;"
                },
                {
                    "name": "CREATE_TABLE",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE output_drinks3\n(\ndrink_name VARCHAR(30),\ncarbs_cost VARCHAR(30)\n);"
                },
                {
                    "name": "QUERY_drink_info_TABLE",
                    "class": "SQLQuery",
                    "rule": "SELECT drink_name, ROUND(carbs/cost, 2) AS carbs_cost FROM drink_info;"
                },
                {
                    "name": "OUTPUT_TO_NEW_TABLE",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO output_drinks3\nVALUES (\n?,?\n);"
                }
            ]      
        },
        {   
            "name": "AndysThirdRuleSet",
            "rules": [
                {
                    "name": "Create_Table_andy3",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE IF NOT EXISTS andy3 (column1 VARCHAR(20), column2 VARCHAR(20))"
                },
                {
                    "name": "Create_Table_andy4",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE IF NOT EXISTS andy4 (column1 VARCHAR(20), column2 VARCHAR(20))"
                },
                {
                    "name": "Populate_andy3",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy3 VALUES ('1', 'ONE'), ('2', 'two'), ('3', 'three'), ('4', 'four')"
                },
                {
                    "name": "SELECT_WHERE_column1_lt_4",
                    "class": "SQLQuery",
                    "rule": "SELECT column1, column2 FROM andy3 WHERE column1 < 4;"
                },
                {
                    "name": "Populate_andy4_With_Loop_Data",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy4 VALUES (?,?)"
                }                
            ]     
        },
        {   
            "name": "AndysSnippit",
            "rules": [
                {
                    "name": "AndysRuleChain",
                    "class": "Snippet"
                }
            ]    
        },
        {   
            "name": "GEMSLiteHourly",
            "rules": [
                {
                    "name": "GEMS_Recent_Active_Pop",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,p.emplid,\n  CASE\n    WHEN substr(n.national_id, 1, 3)  IN ('949') THEN 13\n    ELSE 1\n  END AS SSN_IDENTIFIER_TYPE\n  , trim(n.national_id) as ssn\n  , to_char(p.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n  , to_char(p.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n  , pde.sex\n  , CASE WHEN TRIM(na.name_title) IS NULL OR na.name_title IS NULL \n    THEN substr(trim(na.name_prefix),1,10)\n    ELSE substr(trim(na.name_title),1,10)\n    END as name_prefix \n  , substr(trim(na.first_name),1,100) as first_name\n  , substr(trim(na.middle_name),1,100) as middle_name\n  , substr(trim(na.last_name),1,100) as last_name\n  , substr(trim(na.name_suffix),1,10) as name_suffix\n  , 12 AS gems_source_id\n  from ps_person p\n  join ps_names na on na.emplid = p.emplid\n  left outer join (select pde1.emplid, pde1.lastupddttm, pde1.sex from ps_pers_data_effdt pde1 \n         where pde1.effdt = (select max(pde2.effdt) from ps_pers_data_effdt pde2 where pde2.emplid = pde1.emplid and pde2.effdt <= sysdate)\n       ) pde on pde.emplid = p.emplid\n  left outer join ps_pers_nid n on n.emplid = p.emplid and n.country = 'USA' and n.national_id_type = 'PR'\n  where SUBSTR(p.EMPLID,1,5) = '00000'  \n  AND REGEXP_LIKE(p.emplid, '^[[:digit:]]{11}$') \n  AND na.name_type = 'PRI'\n  AND na.effdt = (select max(na2.effdt) from ps_names na2 where na2.emplid = na.emplid and na2.name_type = na.name_type and na2.effdt <= sysdate)\n  AND TRIM(na.last_name) IS NOT NULL\n  AND ( p.birthdate IS NOT NULL OR TRIM(n.national_id) IS NOT NULL )\n and ((p.last_child_upddtm > (sysdate - 45) or na.lastupddttm > (sysdate - 45) or pde.lastupddttm > (sysdate - 45) or n.lastupddttm > (sysdate - 45))\n      or p.emplid in ('00000064435'))\n  ORDER BY p.emplid desc"
                },
                {
                    "name": "CIMS_PR_Identity_Merge",
                    "class": "SQLQuery",
                    "rule": "CALL cims_pr.idr_identity_merge(?,?,?,?,?,?,?,?,?,?,?,?,?)"
                },
                {
                    "name": "InsertConflicts",
                    "class": "SQLQuery",
                    "rule": "insert ignore into ctx_identifier_conflicts (\n   identifier_type_id,\n   identifier,\n   source_id,\n   current_identity_id,\n   conflicting_identity_id\n) select '42' as id_type_id, \n\t\t\t'DOB+LN+FN dup' as identifier, \n\t\t\tb1.source_id,\n\t\t\tb1.identity_id,\n\t\t\tb2.identity_id\nfrom idr_biodem b1\njoin idr_names na1 on na1.identity_id = b1.identity_id \njoin idr_identifiers e1 on e1.identity_id = b1.identity_id and e1.identifier_type_id not in ( 2, 4, 1, 13, 10, 11, 42 ) and e1.status = 'Active'\nleft outer join idr_identifiers u1 on u1.identity_id = b1.identity_id and u1.identifier_type_id = 2 and u1.status = 'Active'\nleft outer join ctx_identifier_conflicts ic on ic.current_identity_id = b1.identity_id and ic.identifier = 'DOB+LN+FN dup'\nleft outer join idr_identifiers ssn1 on ssn1.identity_id = b1.identity_id and ssn1.identifier_type_id = 1 and ssn1.status = 'Active'\njoin idr_biodem b2 on b2.date_of_birth = b1.date_of_birth and b2.identity_id <> b1.identity_id\njoin idr_names na2 on na2.identity_id = b2.identity_id and na2.lastname = na1.lastname and na2.firstname = na1.firstname\nleft outer join idr_identifiers ssn2 on ssn2.identity_id = b2.identity_id and ssn2.identifier_type_id = 1 and ssn2.status = 'Active'\nwhere (ssn1.identifier IS NULL or ssn2.identifier IS NULL)\nand u1.identity_id IS NULL\nand ic.current_identity_id IS NULL\nand na1.change_id = (select max(naX.change_id) from idr_names naX where naX.identity_id = na1.identity_id and naX.source_id = na1.source_id)\nand na2.change_id = (select max(naY.change_id) from idr_names naY where naY.identity_id = na2.identity_id and naY.source_id = na2.source_id)\ngroup by '42', \n\t\t\t'DOB+LN+FN dup', \n\t\t\tb1.source_id, \n\t\t\tb1.identity_id,\n\t\t\tb2.identity_id\nUNION\nselect '42' as id_type_id, \n\t\t\t'Multiple active SSNs' as identifier, \n\t\t\tssn1.source_id as source_id1,\n\t\t\tssn1.identity_id as ident1,\n\t\t\tssn2.identity_id as ident2\t\nfrom idr_identifiers ssn1\njoin idr_identifiers ssn2 on ssn2.identity_id = ssn1.identity_id \n\t\t\tand ssn2.identifier_type_id = 1\n\t\t\tand ssn2.status = 'Active'\n\t\t\tand ssn2.identifier <> ssn1.identifier\nleft outer join ctx_identifier_conflicts ic on ic.current_identity_id = ssn1.identity_id \n\t\t\tand ic.identifier = 'Multiple active SSNs'\nwhere ssn1.identifier_type_id = 1\nand ssn1.status = 'Active'\nand ic.current_identity_id IS NULL\ngroup by '42', \n\t\t\t'Multiple active SSNs', \n\t\t\tssn1.source_id,\n\t\t\tssn1.identity_id,\n\t\t\tssn2.identity_id\nUNION\nselect '42' as id_type_id, \n\t\t\t'Multiple active EmplIDs' as identifier, \n\t\t\te1.source_id as source_id1,\n\t\t\te1.identity_id as ident1,\n\t\t\te2.identity_id as ident2\nfrom idr_identifiers e1\njoin idr_identifiers e2 on e2.identity_id = e1.identity_id \n\t\t\tand e2.identifier_type_id = e1.identifier_type_id\n\t\t\tand e2.status = e1.status\n\t\t\tand e2.identifier <> e1.identifier\nleft outer join ctx_identifier_conflicts ic on ic.current_identity_id = e1.identity_id \n\t\t\tand ic.identifier = 'Multiple active EmplIDs'\nwhere e1.identifier_type_id = 3\nand e1.status = 'Active'\nand ic.current_identity_id IS NULL\ngroup by '42', \n\t\t\t'Multiple active EmplIDs', \n\t\t\te1.source_id,\n\t\t\te1.identity_id,\n\t\t\te2.identity_id"
                },
                {
                    "name": "ImportIdentityToBaggageClaimGEMS",
                    "class": "Snippet"
                },
                {
                    "name": "Reconcile",
                    "class": "DefinedService"
                },
                {
                    "name": "PrcPersonMerge",
                    "class": "NamedQuery"
                }
            ]    
        },
        {   
            "name": "AndysSnippit2",
            "rules": [
                {
                    "name": "SimpleSelect",
                    "class": "SQLQuery",
                    "rule": "SELECT * FROM andy"
                },
                {
                    "name": "AndysSnippit2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?, ?)"
                },
                {
                    "name": "AndysSnippit2",
                    "class": "Snippet"
                }
            ]     
        },
        {   
            "name": "AndysSnippit3",
            "rules": [
                {
                    "name": "AndysSnippit3_Select",
                    "class": "SQLQuery",
                    "rule": "SELECT * FROM andy"
                },
                {
                    "name": "AndysSnippit3",
                    "class": "Snippet"
                },
                {
                    "name": "InsertIntoTable",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?, ?)"
                }
            ]    
        },
        {   
            "name": "AndysSnippit4",
            "rules": [
                {
                    "name": "AndysSnippitInput",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy\nVALUES (?,?)"
                },
                {
                    "name": "AndysSnippitOutput",
                    "class": "SQLQuery",
                    "rule": "SELECT *\nFROM andy"
                },
                {
                    "name": "AndysSnippit4",
                    "class": "Snippet"
                },
                {
                    "name": "Select",
                    "class": "SQLQuery",
                    "rule": "SELECT *\nFROM andy"
                },
                {
                    "name": "Insert",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?, ?)"
                }
            ]     
        },
        {   
            "name": "ConvertNetidToMail",
            "rules": [
                {
                    "name": "SELECT_jabarthe",
                    "class": "SQLQuery",
                    "rule": "SELECT 'netid', 'mail', 'json', 'jabarthe'\nFROM DUAL"
                },
                {
                    "name": "WsConvertNetidToMail",
                    "class": "DefinedService",
                    "method": "GET",
                    "authType": "CAS",
                    "parse": "JSON",
                    "url": "https://netid.usf.edu/nams/ws_convert",
                    "user": "casuser",
                    "password": "caspassword"
                },
                {
                    "name": "INSERT_jabarthe",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO ConvertNetidToMail/nVALUES (?, ?, ?)"
                }                
            ]   
        },
        {   
            "name": "PR-Create-Stg_VIP",
            "rules": [
                {
                    "name": "SELECT_jabarthe",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE IF NOT EXISTS staging.stg_vip ( \n  vipid integer(11) NULL COMMENT 'Directly from NAMS VIP table',\n  vip_created_dt timestamp NULL COMMENT 'From NAMS VIP table',\n  vrs_status varchar(1) NULL COMMENT 'From NAMS VIP_RES_SET table',\n  raw_ssn integer(11) NULL COMMENT 'Directly from NAMS NAMES table',\n  id_ssn varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  biodem_dob date NULL COMMENT 'From NAMS VIP table for matching idr_biodem birthdate',\n  biodem_dod date NULL DEFAULT NULL COMMENT 'Not in NAMS',\n  biodem_gender varchar(1) NULL DEFAULT NULL COMMENT 'Not in NAMS',\n  raw_lname varchar(256) NULL COMMENT 'Directly from NAMS VIP table',\n  names_last varchar(100) NULL COMMENT 'For maching on idr_names',\n  raw_fname varchar(256) NULL COMMENT 'Directly from NAMS VIP table',\n  names_first varchar(100) NULL COMMENT 'For maching on idr_names',\n  raw_mname varchar(256) NULL COMMENT 'Directly from NAMS VIP table',\n  names_middle varchar(100) NULL COMMENT 'For maching on idr_names',\n  names_prefix varchar(10) NULL DEFAULT NULL COMMENT 'Not in NAMS',\n  raw_gen varchar(4) NULL COMMENT 'Directly from NAMS NAMES table',\n  names_suffix varchar(10) NULL COMMENT 'For maching on idr_names',\n  confid_ind varchar(1) NULL DEFAULT NULL COMMENT 'Copy from NAMS NAMES since not in VIP',\n  ethn_code varchar(2) NULL COMMENT 'Not in NAMS for VIPs',\n  citz_code varchar(2) NULL COMMENT 'Not in NAMS for VIPs',\n  raw_pidm integer(11) NULL COMMENT 'Directly from NAMS OASIS table',\n  id_pidm varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  raw_usfid varchar(9) NULL COMMENT 'Directly from NAMS OASIS table',\n  id_usfid varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  raw_emplid integer(11) NULL COMMENT 'Directly from NAMS GEMS table',\n  id_emplid varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  role_n_name varchar(50) NULL COMMENT 'Directly from NAMS NAMES and ROLES tables',\n  activity_date timestamp NOT NULL DEFAULT now() COMMENT 'When inserted',\n  comments254 varchar(255) NULL DEFAULT NULL COMMENT 'Placeholder if later need to pickup more columns from NAMS',\n  INDEX idx_vipid ( vipid ),\n  INDEX idx_id_ssn ( id_ssn ),\n  INDEX idx_id_pidm ( id_pidm ),\n  INDEX idx_id_usfid ( id_usfid ),\n  INDEX idx_id_emplid ( id_emplid )\n)"
                },
                {
                    "name": "PR-Trunc-Stg_VIP",
                    "class": "SQLQuery",
                    "rule": "TRUNCATE TABLE staging.stg_vip"
                },
                {
                    "name": "VIP-Get-Idents",
                    "class": "SQLQuery",
                    "rule": "SELECT DISTINCT\n\tv.vipid \n\t, v.created_dt\n\t, vrs.status\n\t, na.ssn \n  , CASE WHEN na.ssn > 999999 and na.ssn < 900000000 THEN lpad(na.ssn, 9, '0') ELSE NULL END \n\t, v.dob\n\t, v.lname \n  , CASE WHEN length( v.lname ) > 0 THEN TRIM(substr( v.lname, 1, 100 )) ELSE NULL END\n\t, v.fname \n  , CASE WHEN length( v.fname ) > 0 THEN TRIM(substr( v.fname, 1, 100 )) ELSE NULL END\n\t, v.mname \n  , CASE WHEN length( v.mname ) > 0 THEN TRIM(substr( v.mname, 1, 100 )) ELSE NULL END\n\t, na.gen \n  , CASE WHEN length( na.gen ) > 0 THEN TRIM(SUBSTR( na.gen, 1, 10 )) ELSE NULL END\n\t, CASE WHEN na.privacy = 255 THEN 'Y' ELSE 'N' END \n\t, o.pidm \n  , CASE WHEN o.pidm > 0 THEN o.pidm ELSE NULL END \n\t, o.usfid \n  , CASE WHEN length(o.usfid)=9 and substr(o.usfid,1,1)='U' THEN o.usfid ELSE NULL END\n\t, g.emplid \n  , CASE WHEN g.emplid > 0 and g.emplid < 1000000 THEN lpad(g.emplid, 11, '0') ELSE NULL END\n\t, concat(concat(na.role,'-'),r.name)\nFROM vip v\nLEFT OUTER JOIN vip_res_set vrs on vrs.vipid = v.vipid\nLEFT OUTER JOIN names na on na.badge = v.vipid\nLEFT OUTER JOIN vip_resource vr on vr.rid = vrs.rid \nLEFT OUTER JOIN oasis o on o.badge = na.badge\nLEFT OUTER JOIN gems g on g.badge = na.badge\nLEFT OUTER JOIN roles r on r.code = na.role\nWHERE ( vr.label = 'USFID'\nAND vrs.status = 'P' \n) OR v.vipid in ( 1798583, 1011799, 1319044, 1470331, 1662969 )\norder by v.created_dt"
                },
                {
                    "name": "PR-Insert-Stg_VIP",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO staging.stg_vip (\n  vipid,\n  vip_created_dt,\n  vrs_status,\n  raw_ssn,\n  id_ssn,\n  biodem_dob,\n  raw_lname,\n  names_last,\n  raw_fname,\n  names_first,\n  raw_mname,\n  names_middle,\n  raw_gen,\n  names_suffix,\n  confid_ind,\n  raw_pidm,\n  id_pidm,\n  raw_usfid,\n  id_usfid,\n  raw_emplid,\n  id_emplid,\n  role_n_name\n) VALUES (\n?, ?, ?, ?, ?, \n?, ?, ?, ?, ?, \n?, ?, ?, ?, ?, \n?, ?, ?, ?, ?, \n?, ? )"
                },
                {
                    "name": "PR-Inactivate-VIPID-SSN",
                    "class": "SQLQuery",
                    "rule": "SELECT ssn.source_id, ssn.identifier, ssn.identifier_type_id, 0\nFROM pro_identifiers vipid\nJOIN pro_identifiers ssn on ssn.person_id = vipid.person_id and ssn.identifier_type_id = 1 /*SSN*/ and \nssn.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nLEFT OUTER JOIN staging.stg_vip sv on sv.vipid = vipid.identifier and sv.id_ssn = ssn.identifier\nWHERE vipid.identifier_type_id = 18\nAND vipid.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nAND ssn.source_id = vipid.source_id\nAND sv.vipid IS NULL \nAND 0 < (select count(*) from staging.stg_vip)"
                },
                {
                    "name": "ProIdentifierStatusSet",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "PR-Inactivate-VIPID-HRPRNs",
                    "class": "SQLQuery",
                    "rule": "SELECT hrprn.source_id, hrprn.identifier, hrprn.identifier_type_id, 0\nFROM pro_identifiers vipid\nJOIN pro_identifiers hrprn on hrprn.person_id = vipid.person_id and hrprn.identifier_type_id = 13 /*hrprn*/ and \nhrprn.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nLEFT OUTER JOIN staging.stg_vip sv on sv.vipid = vipid.identifier and sv.id_ssn = hrprn.identifier\nWHERE vipid.identifier_type_id = 18\nAND vipid.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nAND hrprn.source_id = vipid.source_id\nAND sv.vipid IS NULL \nAND 0 < (select count(*) from staging.stg_vip)"
                },
                {
                    "name": "PR-Inactivate-VIPIDs",
                    "class": "SQLQuery",
                    "rule": "SELECT vipid.source_id, vipid.identifier, vipid.identifier_type_id, 0\nFROM pro_identifiers vipid\nLEFT OUTER JOIN staging.stg_vip sv on sv.vipid = vipid.identifier\nWHERE vipid.identifier_type_id = 18\nAND vipid.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nAND sv.vipid IS NULL \nAND 0 < (select count(*) from staging.stg_vip)"
                },
                {
                    "name": "PR-IdentMergeofVIPs",
                    "class": "SQLQuery",
                    "rule": "TRUNCATE TABLE staging.stg_vip"
                }
                
                
                
                
27	9	PR-IdentMergeofVIPs		1	SELECT DISTINCT 18 as vipid_identifier_type\n       , sv.vipid\n       , CASE WHEN substr(sv.id_ssn, 1, 3) IN ('949') THEN 13 ELSE 1 END as ssn_identifier_type\n       , sv.id_ssn\n       , sv.biodem_dob\n       , sv.biodem_dod\n       , sv.biodem_gender\n       , sv.names_prefix\n       , sv.names_first\n       , sv.names_middle\n       , sv.names_last\n       , sv.names_suffix\n       , 17 as vip_source_id\nFROM staging.stg_vip sv\nWHERE sv.vipid IS NOT NULL\nAND sv.names_first IS NOT NULL\nAND sv.names_last IS NOT NULL\nAND ( sv.biodem_dob IS NOT NULL or sv.id_ssn IS NOT NULL )\nORDER BY sv.vipid DESC	
27	10	CIMS_PR Identity Merge		1	CALL cims_pr.idr_identity_merge(?,?,?,?,?,?,?,?,?,?,?,?,?)	
27	11	PR-AddVIPConflicts		1	insert ignore into ctx_identifier_conflicts (
   identifier_type_id,
   identifier,
   source_id,
   current_identity_id,
   conflicting_identity_id
) select '42', 
      concat(sv.id_usfid, ' USFID only in VIP'),
      min(id.source_id),
      id.identity_id,
      id.identity_id
from idr_identifiers id
join staging.stg_vip sv on sv.vipid = id.identifier
left outer join idr_identifiers usfid on usfid.identity_id = id.identity_id and usfid.identifier_type_id = 2 /*USFID*/ and usfid.status = 'Active'
left outer join idr_identifiers usfid2 on usfid2.identifier = sv.id_usfid and usfid2.identifier_type_id = 2 /*USFID*/ and usfid2.status = 'Active'
where id.identifier_type_id = 18 /* VIPID */
and id.status = 'Active'
and usfid.identifier IS NULL
and sv.id_usfid IS NOT NULL
and usfid2.identifier IS NOT NULL
and not exists (select 'alreadythere' from ctx_identifier_conflicts ic 
      where ic.identifier = concat(sv.id_usfid, ' USFID only in VIP')
      and ic.current_identity_id = id.identity_id 
          )
group by '42', 
      concat(sv.id_usfid, ' USFID only in VIP'),
      id.identity_id,
      id.identity_id
UNION
select '42', 
      concat(sv.id_emplid, ' EmplID only in VIP'), 
      min(id.source_id),
      id.identity_id,
      id.identity_id
from idr_identifiers id
join stg_vip sv on sv.vipid = id.identifier 
left outer join idr_identifiers emplid on emplid.identity_id = id.identity_id and emplid.identifier_type_id = 3 and emplid.status = 'Active'
left outer join idr_identifiers emplid2 on emplid2.identifier = sv.id_emplid and emplid2.identifier_type_id = 3 and emplid2.status = 'Active'
where id.identifier_type_id = 18 /* VIPID */
and id.status = 'Active'
and sv.id_emplid IS NOT NULL
and emplid2.identifier IS NOT NULL
and (emplid.identifier IS NULL or emplid.identifier <> sv.id_emplid)
and not exists (select 'alreadythere' from ctx_identifier_conflicts ic 
      where ic.identifier = concat(sv.id_emplid, ' EmplID only in VIP')
      and ic.current_identity_id = id.identity_id 
          )
group by '42', 
      concat(sv.id_emplid, ' EmplID only in VIP'), 
      id.identity_id,
      id.identity_id	
27	12	InsertConflicts		1	insert ignore into ctx_identifier_conflicts (
   identifier_type_id,
   identifier,
   source_id,
   current_identity_id,
   conflicting_identity_id
) select '42' as id_type_id, 
			'DOB+LN+FN dup' as identifier, 
			b1.source_id,
			b1.identity_id,
			b2.identity_id
from idr_biodem b1
join idr_names na1 on na1.identity_id = b1.identity_id 
join idr_identifiers e1 on e1.identity_id = b1.identity_id and e1.identifier_type_id not in ( 2, 4, 1, 13, 10, 11, 42 ) and e1.status = 'Active'
left outer join idr_identifiers u1 on u1.identity_id = b1.identity_id and u1.identifier_type_id = 2 and u1.status = 'Active'
left outer join ctx_identifier_conflicts ic on ic.current_identity_id = b1.identity_id and ic.identifier = 'DOB+LN+FN dup'
left outer join idr_identifiers ssn1 on ssn1.identity_id = b1.identity_id and ssn1.identifier_type_id = 1 and ssn1.status = 'Active'
join idr_biodem b2 on b2.date_of_birth = b1.date_of_birth and b2.identity_id <> b1.identity_id
join idr_names na2 on na2.identity_id = b2.identity_id and na2.lastname = na1.lastname and na2.firstname = na1.firstname
left outer join idr_identifiers ssn2 on ssn2.identity_id = b2.identity_id and ssn2.identifier_type_id = 1 and ssn2.status = 'Active'
where (ssn1.identifier IS NULL or ssn2.identifier IS NULL)
and u1.identity_id IS NULL
and ic.current_identity_id IS NULL
and na1.change_id = (select max(naX.change_id) from idr_names naX where naX.identity_id = na1.identity_id and naX.source_id = na1.source_id)
and na2.change_id = (select max(naY.change_id) from idr_names naY where naY.identity_id = na2.identity_id and naY.source_id = na2.source_id)
group by '42', 
			'DOB+LN+FN dup', 
			b1.source_id, 
			b1.identity_id,
			b2.identity_id
UNION
select '42' as id_type_id, 
			'Multiple active SSNs' as identifier, 
			ssn1.source_id as source_id1,
			ssn1.identity_id as ident1,
			ssn2.identity_id as ident2	
from idr_identifiers ssn1
join idr_identifiers ssn2 on ssn2.identity_id = ssn1.identity_id 
			and ssn2.identifier_type_id = 1
			and ssn2.status = 'Active'
			and ssn2.identifier <> ssn1.identifier
left outer join ctx_identifier_conflicts ic on ic.current_identity_id = ssn1.identity_id 
			and ic.identifier = 'Multiple active SSNs'
where ssn1.identifier_type_id = 1
and ssn1.status = 'Active'
and ic.current_identity_id IS NULL
group by '42', 
			'Multiple active SSNs', 
			ssn1.source_id,
			ssn1.identity_id,
			ssn2.identity_id
UNION
select '42' as id_type_id, 
			'Multiple active EmplIDs' as identifier, 
			e1.source_id as source_id1,
			e1.identity_id as ident1,
			e2.identity_id as ident2
from idr_identifiers e1
join idr_identifiers e2 on e2.identity_id = e1.identity_id 
			and e2.identifier_type_id = e1.identifier_type_id
			and e2.status = e1.status
			and e2.identifier <> e1.identifier
left outer join ctx_identifier_conflicts ic on ic.current_identity_id = e1.identity_id 
			and ic.identifier = 'Multiple active EmplIDs'
where e1.identifier_type_id = 3
and e1.status = 'Active'
and ic.current_identity_id IS NULL
group by '42', 
			'Multiple active EmplIDs', 
			e1.source_id,
			e1.identity_id,
			e2.identity_id	
27	13	ImportIdentityToBaggageClaimVIP Snippit		1	DEFINEDSERVICE:ImportIdentityToBaggageClaimVIP	
                
            ]     
        },
        {   
            "name": "OASISLiteHourlyModified",
            "rules": [
                
            ]   
        },
        {   
            "name": "OASISLiteHourly1_5",
            "rules": [
                
            ]    
        },
        {   
            "name": "ToBeDeleted",
            "rules": [
                
            ]     
        },
        {   
            "name": "HSCDW_Import2x",
            "rules": [
                
            ]     
        },
        {   
            "name": "AddConflicts2x",
            "rules": [
                
            ]   
        },
        {   
            "name": "OASIS_Import2x",
            "rules": [
                
            ]   
        },
        {   
            "name": "OasisImportSourceandCurrentTimestamp",
            "rules": [
                
            ]   
        },
        {   
            "name": "Oasisp-create2x",
            "rules": [
                
            ]     
        },
        {   
            "name": "PeopleAdminBCToGEMS_2x",
            "rules": [
                
            ]   
        }
    ]
}

	at grails.converters.JSON.parse(JSON.java:281)
	... 9 more
2013-05-09 11:55:57,729 [localhost-startStop-1] ERROR StackTrace  - Full Stack Trace:
org.codehaus.groovy.grails.web.json.JSONException: Expected a ',' or ']' at character 59794 of {    
    "ruleSets": [
        {   
            "name": "debugRuleSet",
            "rules": [
                {
                    "name": "GEMS_test_rule_2",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "GEMS_test_rule",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "GEMS_test_rule_again",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "GEMS_test_rule_again_2",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "Dummy_Insert_Input_Reorder",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO test_dump_min (identifier_type_id,identifier,ssn_identifier_type_id,ssn,birthdate,deathdate,sex,prefix,firstName,middleName,lastName,suffix,source_id) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)"
                },
                {
                    "name": "Dummy_INSERT",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO test_dump (\n\tidentifier_type_id,\n\tidentifier,\n\tssn_identifier_type_id,\n\tssn,\n\tbirthdate,\n\tdeathdate,\n\tsex,prefix,\n\tfirstName,\n\tmiddleName,\n\tlastName,\n\tsuffix,\n\tsource_id) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)"
                },
                {
                    "name": "This_is_a_bum_rule",
                    "class": "SQLQuery",
                    "rule": "SELECT '1' FROM DUAL"
                },
                {
                    "name": "This_is_a_bum_PA_rule",
                    "class": "SQLQuery",
                    "rule": "SELECT loaded_dt FROM people_admin"
                },
                {
                    "name": "BC_Select",
                    "class": "SQLQuery",
                    "rule": "SELECT ssn,birthdate,firstName,lastName FROM test_dump_min"
                },
                {
                    "name": "Select_Test",
                    "class": "SQLQuery",
                    "rule": "SELECT 'James','Patrick','Jones' FROM DUAL"
                },
                {
                    "name": "Select_Prepare",
                    "class": "SQLQuery",
                    "rule": "SELECT ?,?,? FROM DUAL"
                },
                {
                    "name": "Append_Wilhoit",
                    "class": "SQLQuery",
                    "rule": "SELECT 'Wilhoit' FROM DUAL"
                },
                {
                    "name": "DROP_TABLE_cool2",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE cool2"
                },
                {
                    "name": "adsf",
                    "class": "SQLQuery",
                    "rule": "SELECT *\nFROM Andy"
                }
                
            ]
        },
        {
            "name": "GEMS_Silver_Rule_Set_2_x",
            "rules": [
                {
                    "name": "GEMS_Silver_Rule_Population",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN TRIM(pd.name_title) IS NULL OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n        AND SUBSTR(pd.EMPLID,1,5) = '00000'  \n        AND REGEXP_LIKE(pd.emplid, '^[[:digit:]]{11}$') \n\tORDER BY pd.emplid desc"
                },
                {
                    "name": "Update_Active_Status_Emplid",
                    "class": "SQLQuery",
                    "rule": "SELECT identifier\n\tFROM pro_identifiers \n\tWHERE identifier_type_id=3 AND source_id=12\n\tORDER BY identifier"
                },
                {
                    "name": "Update_Active_Status_SSN_GEMS",
                    "class": "SQLQuery",
                    "rule": "SELECT identifier\n\tFROM pro_identifiers \n\tWHERE identifier_type_id=1 AND source_id =12\n\tORDER BY identifier"
                },
                {
                    "name": "GEMS_HRPR_Iterator",
                    "class": "SQLQuery",
                    "rule": "SELECT identifier\n\tFROM pro_identifiers \n\tWHERE identifier_type_id=13 AND source_id =12\n\tORDER BY identifier"
                },
                {
                    "name": "GEMS_SSNExistTest",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 AS SSN_IDENTIFIER_TYPE,COUNT(*) AS GEMS_SSNCount\n\tFROM ps_pers_nid n\n\tWHERE n.country(+) = 'USA'\n\tAND n.national_id_type(+) = 'PR'\n\tAND trim(n.national_id) = ?"
                },
                {
                    "name": "GEMS_HRPRExistTest",
                    "class": "SQLQuery",
                    "rule": "SELECT 13 AS HRPR_IDENTIFIER_TYPE,COUNT(*) AS HRPRCount\n\tFROM ps_pers_nid n\n\tWHERE n.country(+) = 'USA'\n\tAND n.national_id_type(+) = 'PR'\n\tAND trim(n.national_id) = ?"
                },
                {
                    "name": "Emplid_Exist_Test",
                    "class": "SQLQuery",
                    "rule": "SELECT 3 AS EMPL_IDENTIFIER_TYPE, COUNT(*) AS EmplidCount\n\tFROM ps_personal_data pd\n\tWHERE pd.emplid=?"
                },
                {
                    "name": "Set_Empl_Active_Flag",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET status='Active',\n\tsource_id=?\n\tWHERE identifier=?\n\tAND identifier_type_id=?\n\tAND identifier_status_id != (\n\t\tSELECT identifier_status_id \n\t\t\tFROM identifier_statuses \n\t\t\tWHERE `name`='Active'\n\t)\n\tAND ? > 0"
                },
                {
                    "name": "Set_Empl_Inactive_Flag",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET status='Inactive'\n\tWHERE source_id=?\n\tAND identifier=?\n\tAND identifier_type_id=?\n\tAND identifier_status_id != (\n\t\tSELECT identifier_status_id \n\t\t\tFROM identifier_statuses \n\t\t\tWHERE `name`='Inactive'\n\t)\n\tAND ? < 1"
                },
                {
                    "name": "Add_GEMS_Source",
                    "class": "SQLQuery",
                    "rule": "SELECT 14 AS source_id FROM DUAL"
                },
                {
                    "name": "BaggageClaimSORCreate",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE `incomming_sor_records` (\n  `primary_identifier_type_id` bigint(18) unsigned DEFAULT NULL,\n  `primary_identifier` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `secondary_identifier_type_id` bigint(18) unsigned DEFAULT NULL,\n  `secondary_identifier` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `birthday` date DEFAULT NULL,\n  `deathday` date DEFAULT NULL,\n  `gender` varchar(10) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `prefix` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `firstname` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `middlename` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `lastname` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `suffix` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `baggage_source_id` bigint(18) unsigned DEFAULT NULL,\n  `status` enum('Valid','Invalid') COLLATE utf8_unicode_ci DEFAULT NULL,\n  KEY `incomming_sor_records_baggage_source_id` (`baggage_source_id`),\n  CONSTRAINT `incomming_sor_records_baggage_source_id` FOREIGN KEY (`baggage_source_id`) REFERENCES `baggage_sources` (`baggage_source_id`) ON DELETE SET NULL ON UPDATE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;"
                },
                {
                    "name": "Add_new_BC_Source",
                    "class": "SQLQuery",
                    "rule": "INSERT IGNORE INTO baggage_sources (baggage_source_id,cims_pr_source_id,name,format) \nVALUES ('5','14','GEMS-DATABASE','DATABASE')"
                },
                {
                    "name": "Update_SOR",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO incomming_sor_records\n(primary_identifier_type_id,primary_identifier,secondary_identifier_type_id,\nsecondary_identifier,birthday,deathday,gender,prefix,firstname,middlename,lastname,\nsuffix,baggage_source_id,status) VALUES\n(?,?,?,?,?,?,?,?,?,?,?,?,5,'Valid')"
                },
                {
                    "name": "GEMS_Recent_Activ_Pop",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN TRIM(pd.name_title) IS NULL OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n        AND SUBSTR(pd.EMPLID,1,5) = '00000'  \n        AND REGEXP_LIKE(pd.emplid, '^[[:digit:]]{11}$') \nand (pd.lastupddttm > (sysdate - 1) or n.lastupddttm > (sysdate - 1))\n\tORDER BY pd.emplid desc"
                },
                {
                    "name": "Reassemble_Params",
                    "class": "SQLQuery",
                    "rule": "SELECT idinfo.source_id,idinfo.identifier_type_id,idinfo.identifier,idinfo.source_id\n\tFROM\n\t\t(\n\t\t\tSELECT \n\t\t\t\t? AS identifier_type_id,\n\t\t\t\t? AS identifier,\n\t\t\t\t? AS ssn_identifier_type_id,\n\t\t\t\t? AS ssn,\n\t\t\t\t? AS birthdate,\n\t\t\t\t? AS deathdate,\n\t\t\t\t? AS gender,\n\t\t\t\t? AS prefix,\n\t\t\t\t? AS first_name,\n\t\t\t\t? AS middle_name,\n\t\t\t\t? AS last_name,\n\t\t\t\t? AS suffix,\n\t\t\t\t? AS source_id\n\t\t\tFROM DUAL\n\t\t) AS idinfo"
                },
                {
                    "name": "Set_the_authoritative_source",
                    "class": "SQLQuery",
                    "rule": "UPDATE idr_identifiers\n\tSET status='Active' AND source_id=?\n\tWHERE identifier_type_id=? AND identifier=? AND source_id != ?"
                },
                {
                    "name": "Set_the_Gems_import_source",
                    "class": "SQLQuery",
                    "rule": "SELECT 5 AS importSourceId FROM DUAL"
                }
            ]  
        },
        {
            "name": "CIMS_PRStoredProcedures2x",
            "rules": [
                {
                    "name": "PrsBiodemUpdater",
                    "class": "NamedQuery",
                    "rule": "personId,birthday,deathday,gender,sourceId"
                },
                {
                    "name": "PrsNamesUpdater",
                    "class": "NamedQuery",
                    "rule": "personId,prefix,firstname,middlename,lastname,suffix,sourceId"
                },
                {
                    "name": "PrcPersonSilverRuleCheck",
                    "class": "NamedQuery",
                    "rule": "ssn,birthday,firstname,lastname"
                },
                {
                    "name": "PrsBiodemValidPastDate",
                    "class": "NamedQuery",
                    "rule": "dateString"
                },
                {
                    "name": "PrcPersonByIdentifier",
                    "class": "NamedQuery",
                    "rule": "identifierTypeId,identifier"
                },
                {
                    "name": "PrcPersonsCreateNew",
                    "class": "NamedQuery",
                    "rule": "sourceId"
                },
                {
                    "name": "PrcPersonMerge",
                    "class": "NamedQuery",
                    "rule": "primaryIdentifierTypeId, primaryIdentifier,secondaryIdentifierTypeId,secondaryIdentifier,birthday,deathday,gender,prefix,firstname,middlename,lastname,suffix,sourceId"
                },
                {
                    "name": "ProIdentifierStatusSet",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "ImpRepositoryIdentityNew",
                    "class": "SQLQuery",
                    "rule": "SELECT imp_repository_identity_new(?) FROM DUAL"
                },
                {
                    "name": "ImpRepositoryMerge",
                    "class": "NamedQuery",
                    "rule": "importSourceId,firstname,middlename,lastname,gender,birthday,unparsedLine"
                }
            ]   
        },
        {
            "name": "CIMS_PRBaggageClaimMerge",
            "rules": [
                {
                    "name": "PeopleAdmin_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT loaded_dt,\n\thpid AS HPID,\n\tIF(ssn = 'No Response','',REPLACE(ssn,'-','')) AS SSN,\n\tIF(LEFT(UPPER(usfid),1) != 'U','',IF(LENGTH(usfid) = 9,usfid,'')) AS USFID,\n\tIF(emplid = 'No Response','',LPAD(TRIM(emplid),11,'0')) AS EMPLID,\n\tIF(fname = 'No Response','',TRIM(fname)) AS FIRSTNAME,\n\tIF(mname = 'No Response','',TRIM(mname)) AS MIDDLENAME,\n\tIF(lname = 'No Response','',TRIM(lname)) AS LASTNAME,\n\tIF(gender IN('M','F'),gender,'') AS GENDER,\n\tIF(dob = 'No Response',NULL,TRIM(dob)) AS BIRTHDAY,\n\tRTRIM(baggage) AS BAGGAGE\n\tFROM nams.people_admin\n\tWHERE DATE(loaded_dt) != '0000-00-00'"
                },
                {
                    "name": "CardID_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT to_char(ID_ISSUE_DATE,'YYYY-MM-DD') AS IMPORT_DATE,\n\tID_CARD_NUMBER,\n\tNAME_FIRST AS FIRSTNAME,\n\tNAME_MIDDLE AS MIDDLENAME,\n\tNAME_LAST AS LASTNAME,\n\tto_char(BIRTH_DATE,'YYYY-MM-DD') AS BIRTHDAY\n\tFROM ID WHERE ROWNUM < 50"
                },
                {
                    "name": "NAMS_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT \n\tNOW() AS IMPORT_DATE,\n\tn.badge AS NAMSID,\n\tn.fname AS FIRSTNAME,\n\tn.mname AS MIDDLENAME,\n\tn.lname AS LASTNAME,\n\tSTR_TO_DATE(CONCAT('',\n\t\tIF(\n\t\t\t((SELECT COUNT(*) FROM bdays WHERE badge=n.badge AND bday > 0 ORDER BY bdayid DESC LIMIT 1) < 1),\n\t\t\tn.bday,\n\t\t\t(SELECT bday FROM bdays WHERE badge=n.badge AND bday > 0 ORDER BY bdayid DESC LIMIT 1)\n\t\t) \n\t) ,'%Y%m%d') AS BIRTHDAY\n\tFROM names n\n\tWHERE \n\t(SELECT COUNT(*) FROM oasis WHERE badge=n.badge LIMIT 1) > 0 \n\tOR\n\t(SELECT COUNT(*) FROM gems WHERE badge=n.badge LIMIT 1) > 0"
                }
            ]   
        },
        {
            "name": "CIMS_PRBaggageClaimMergeOtherRules",
            "rules": [
                {
                    "name": "People_Admin_Request",
                    "class": "SQLQuery",
                    "rule": "SELECT 2 AS importSourceId,0 AS reconcile FROM DUAL;"
                },
                {
                    "name": "People_Admin_Request",
                    "class": "SQLQuery",
                    "rule": "SELECT 2 AS importSourceId,0 AS reconcile FROM DUAL;"
                },
                {
                    "name": "ImportToBaggageClaim",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "Dummy_ParamCollector_for_ImportToBaggageClaim_Defined_Service_loop",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS baggageClaimIdentityId, CAST(? AS UNSIGNED) AS personId, ? AS importSourceId, ? AS sourceId, ? AS baggageClaimIdentityStatusId, ? AS firstName, ? AS middleName, ? AS lastName, ? AS gender, ? AS dateOfBirth"
                },
                {
                    "name": "AddToBaggageClaim",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "PeopleAdmin_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT \n\t2 AS importSourceId,\n\tIF(fname = 'No Response','',TRIM(fname)) AS FIRSTNAME,\n\tIF(mname = 'No Response','',TRIM(mname)) AS MIDDLENAME,\n\tIF(lname = 'No Response','',TRIM(lname)) AS LASTNAME,\n\tIF(gender IN('M','F'),gender,'') AS GENDER,\n\tIF(dob = 'No Response','',TRIM(REPLACE(dob,'/','-'))) AS BIRTHDAY,\n\tloaded_dt,\n\tCONCAT('[{\"identifier\":\"',hpid,'\",\"identifierType\":{\"identifierTypeId\":\"10\"}},{\"identifier\":\"',IF(ssn = 'No Response','',REPLACE(ssn,'-','')),'\",\"identifierType\":{\"identifierTypeId\":\"1\"}},{\"identifier\":\"',IF(LEFT(UPPER(usfid),1) != 'U','',IF(LENGTH(usfid) = 9,usfid,'')),'\",\"identifierType\":{\"identifierTypeId\":\"2\"}},{\"identifier\":\"',IF(emplid = 'No Response','',LPAD(TRIM(emplid),11,'0')),'\",\"identifierType\":{\"identifierTypeId\":\"3\"}}]') AS baggageClaimIdentifiers,\n\tRTRIM(baggage) AS BAGGAGE\n\tFROM nams.people_admin\n\tWHERE DATE(loaded_dt) != '0000-00-00' LIMIT 10"
                },
                {
                    "name": "Reconcile_Defined_Service",
                    "class": "DefinedService"
                },
                {
                    "name": "ImportIdentityToBaggageClaimPeopleAdmin",
                    "class": "DefinedService"
                },
                {
                    "name": "Prepend_PeopleAdmin_Source",
                    "class": "SQLQuery",
                    "rule": "SELECT 2 AS importSourceId FROM DUAL"
                },
                {
                    "name": "Prepend_Gems_Import_Source",
                    "class": "SQLQuery",
                    "rule": "SELECT 5 AS importSourceId FROM DUAL"
                },
                {
                    "name": "Prepend_Gems_Import_Source_and_Current_Timestamp",
                    "class": "SQLQuery",
                    "rule": "SELECT 5 AS importSourceId,NOW() AS importTimestamp,\"\" AS claimInfo FROM DUAL"
                },
                {
                    "name": "Prepend_VIP_Import_Source_and_Current_Timestamp",
                    "class": "SQLQuery",
                    "rule": "SELECT 8 AS importSourceId,NOW() AS importTimestamp FROM DUAL"
                },
                {
                    "name": "ImportIdentityToBaggageClaimHealth",
                    "class": "DefinedService"
                },
                {
                    "name": "ImportIdentityToBaggageClaimGEMS",
                    "class": "DefinedService"
                }
            ]    
        },
        {
            "name": "NamsDefinedServices",
            "rules": [
                {
                    "name": "NetIDToEMail_Defaults",
                    "class": "SQLQuery",
                    "rule": "SELECT 'netid' AS submit_type,'mail' AS return_type,'json' AS `return`,? AS `value` FROM DUAL"
                },
                {
                    "name": "WsConvertNetidToMail",
                    "class": "DefinedService"
                }
            ]     
        },
        { 
            "name": "UnumberDefinedServices",
            "rules": [
                {
                    "name": "Unumber_Defaults",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 AS personId,2 AS personAllocatedId,2 AS identifierTypeId, ? AS amount FROM DUAL"
                },
                {
                    "name": "ReallocatePoolIdentifiers",
                    "class": "DefinedService"
                }
            ]      
        },
        { 
            "name": "IdentityMergeRules",
            "rules": [
                {
                    "name": "Unumber_Defaults",
                    "class": "SQLQuery",
                    "rule": "SELECT \n? AS PrimaryIdentifierType,\n? AS PrimaryIdentifier,\n? AS SecondaryIdentifierType,\n? AS SecondaryIdentifier,\n? AS BirthDate,\n? AS DeathDate,\n? AS Gender,\n? AS Prefix,\n? AS FirstName,\n? AS MiddleName,\n? AS LastName,\n? AS Suffix,\n? AS SourceId\nFROM DUAL\t"
                },
                {
                    "name": "Set_Past_year_Limit",
                    "class": "SQLQuery",
                    "rule": "SELECT 150 AS maxyears FROM DUAL"
                },
                {
                    "name": "PrsBiodemValidPastDateLimit",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "PrsBiodemValidPastDate",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "FilterIdentifier",
                    "class": "DefinedService"
                },
                {
                    "name": "UniqueIdentifierMatch",
                    "class": "SQLQuery",
                    "rule": "SELECT foundUniquePerson.person_id AS personId,\n? AS PrimaryIdentifierType,\n? AS PrimaryIdentifier,\n? AS SecondaryIdentifierType,\n? AS SecondaryIdentifier,\n? AS BirthDate,\n? AS DeathDate,\n? AS Gender,\n? AS Prefix,\n? AS FirstName,\n? AS MiddleName,\n? AS LastName,\n? AS Suffix,\n? AS SourceId\nFROM (\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n\tUNION\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n) AS foundUniquePerson HAVING COUNT(*)=1"
                },
                {
                    "name": "ValidIdentfiersSet",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS person_id,\nidentifiers.identifier_type_id,\nidentifiers.identifier,\n? AS SourceId\nFROM (\n\tSELECT identifier_type_id,identifier FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0\n\tUNION\n\tSELECT identifier_type_id,identifier FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0\n) AS identifiers"
                },
                {
                    "name": "IdentifierSourceUpdate",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET source_id=?\n\tWHERE  source_id !=? AND identifier_type_id=? AND identifier=? AND person_id=?"
                },
                {
                    "name": "IdentifierReallocationUpdate",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET person_id = ?\n\tWHERE identifier_type_id=? AND identifier=? AND person_id !=? AND identifier_status_id != (SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active');"
                },
                {
                    "name": "IdentifierStatusUpdate",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET identifier_status_id = (SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active') AND merge_date=NOW()\n\tWHERE identifier_type_id=? AND identifier=? AND person_id=? AND identifier_status_id != (SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active');"
                },
                {
                    "name": "NameChangeDetection",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS prefix,? AS FirstName,? AS MiddleName,? AS LastName,? AS Suffix,? AS SourceId,? AS personId\nFROM DUAL WHERE \n(SELECT COUNT(*) FROM (\n\tSELECT prefix,firstname,middlename,lastname,suffix FROM prs_names WHERE source_id=? AND person_id=? ORDER BY last_changed DESC LIMIT 1\n) AS lastNameBySource\nWHERE prefix=? AND firstname=? AND middlename=? AND lastname=? AND suffix=?) < 1"
                },
                {
                    "name": "NameCreateNew",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO prs_names (prefix,firstname,middlename,lastname,suffix,source_id,person_id,last_changed) VALUES(?,?,?,?,?,?,?,NOW())"
                },
                {
                    "name": "BioDemChangeDetection",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS date_of_birth,? AS date_of_death,? AS gender,? AS SourceId,? AS PersonId\nFROM DUAL WHERE \n(SELECT COUNT(*) FROM (\n\tSELECT date_of_birth,date_of_death,gender FROM prs_biodem WHERE source_id=? AND person_id=? ORDER BY last_changed DESC LIMIT 1\n) AS lastNameBySource\nWHERE date_of_birth=? AND date_of_death=? AND gender=?) < 1"
                },
                {
                    "name": "BioDemCreateNew",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO prs_biodem (date_of_birth,date_of_death,gender,source_id,person_id,last_changed) VALUES(?,?,?,?,?,NOW())"
                },
                {
                    "name": "IdentifierNewDetection",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS identifier_type_id,? AS identifier,? AS sourceId,? AS personId\n\tFROM DUAL\n\tWHERE LENGTH(TRIM(?)) > 0 AND (SELECT COUNT(*) FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0) < 1"
                },
                {
                    "name": "IdentifierCreateNew",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO pro_identifiers (identifier_type_id,identifier,source_id,person_id,merge_date,identifier_status_id) VALUES(?,?,?,?,NOW(),(SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active'))"
                },
                {
                    "name": "EndLoop_Filler",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 FROM DUAL"
                },
                {
                    "name": "NoUniqueIdentifierCheck",
                    "class": "SQLQuery",
                    "rule": "SELECT \n? AS PrimaryIdentifierType,\n? AS PrimaryIdentifier,\n? AS SecondaryIdentifierType,\n? AS SecondaryIdentifier,\n? AS BirthDate,\n? AS DeathDate,\n? AS Gender,\n? AS Prefix,\n? AS FirstName,\n? AS MiddleName,\n? AS LastName,\n? AS Suffix,\n? AS SourceId\nFROM DUAL\nWHERE\n(SELECT COUNT(*) FROM\n(\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n\tUNION\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n) AS foundUniquePerson) !=1"
                }
            ]     
        },
        { 
            "name": "Snippets",
            "rules": [
                {
                    "name": "IdentityMergeChainDualIdentifiers",
                    "class": "Snippet"
                }
            ]      
        },
        { 
            "name": "AndysRuleSet",
            "rules": [
                {
                    "name": "Create_Table",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE andy \n(\nid INT,\ndata VARCHAR(100)\n);"
                },
                {
                    "name": "Create_Table_2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE andy2\n(\nid INT,\ndata VARCHAR(100),\ndata2 VARCHAR(100)\n);"
                },
                {
                    "name": "Populate",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES ('1', 'Andy1');"
                },
                {
                    "name": "Populate2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES ('2', 'Andy2');"
                },
                {
                    "name": "Populate4",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy2 VALUES (?,?,CONCAT(?,?));"
                },
                {
                    "name": "SELECT_FROM_DUAL",
                    "class": "SQLQuery",
                    "rule": "Select \"3\", \"Andy4\" FROM DUAL"
                },
                {
                    "name": "Populate3",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?,?);"
                },
                {
                    "name": "loop",
                    "class": "SQLQuery",
                    "rule": "SELECT id, data FROM andy"
                }
            ]      
        },
        { 
            "name": "AndysSecondRuleSet",
            "rules": [
                {
                    "name": "DROP_TABLE",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS cool"
                },
                {
                    "name": "DROP_TABLE_cool2",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS cool2"
                },
                {
                    "name": "Create_Table_cool",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE cool ( id INT, data VARCHAR(100));"
                },
                {
                    "name": "Create_Table_cool2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE cool2 (id INT, data VARCHAR(100), id2 INT, data2 VARCHAR(100))"
                },
                {
                    "name": "Populate_cool_1",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool VALUES ('1', 'dataone')"
                },
                {
                    "name": "Populate_cool_2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool VALUES ('2', 'datatwo')"
                },
                {
                    "name": "Select_From_Table_cool",
                    "class": "SQLQuery",
                    "rule": "SELECT id, data FROM cool WHERE id = 1;"
                },
                {
                    "name": "Select_From_Table_cool_2",
                    "class": "SQLQuery",
                    "rule": "SELECT id, data FROM cool WHERE id = 2"
                },
                {
                    "name": "Insert_Into_Cool2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool2 (id, data, id2, data2) VALUES (?,?,?,?)"
                }
            ]       
        },
        { 
            "name": "WaynesFirstRuleSet",
            "rules": [
                {
                    "name": "Create_Table",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE cool\n(\nid int, data VARCHAR(100)\n);"
                },
                {
                    "name": "Populate_Table",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool\nVALUES\n(1, dataone);"
                },
                {
                    "name": "Populate_Table_2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool\nVALUES\n(1, dataone);"
                }
            ]      
        },
        { 
            "name": "PrependJPJ",
            "rules": [
                {
                    "name": "Rule1",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 FROM DUAL"
                },
                {
                    "name": "Rule2",
                    "class": "SQLQuery",
                    "rule": "SELECT \"Andy\" FROM DUAL"
                },
                {
                    "name": "Rule3",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES(?,?)"
                }
            ]      
        },
        { 
            "name": "WaynesDemofilecabinet",
            "rules": [
                {
                    "name": "Create_Table_1",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE demo\n(\nfirst_name VARCHAR(25),\nlast_name VARCHAR(25),\ncity VARCHAR(20),\nstate VARCHAR(2),\nbirth DATE NOT NULL\n);"
                },
                {
                    "name": "Populate_value_1",
                    "class": "SQLQuery",
                    "rule": "SELECT \"Randy\", \"Smith\", \"Tampa\", \"FL\", \"2012-01-18\" FROM DUAL"
                },
                {
                    "name": "Insert_values_1",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO demo\nVALUES (\n?, ?, ?, ?, ?\n);"
                },
                {
                    "name": "Drop_Table",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS demo;"
                },
                {
                    "name": "Update_Table",
                    "class": "SQLQuery",
                    "rule": "UPDATE demo\nSET\ndate = \"2012-01-23\"\nWHERE date = \"2012-01-18\";"
                }
            ]     
        },
        { 
            "name": "Drink_InfoExercise1set",
            "rules": [
                {
                    "name": "drop_output_drinks_table",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS output_drinks;"
                },
                {
                    "name": "create_output_drinks_table",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE output_drinks\n(\nname VARCHAR(25),\ncalcost VARCHAR(5)\n);"
                },
                {
                    "name": "query_results",
                    "class": "SQLQuery",
                    "rule": "SELECT drink_name, ROUND(calories/cost, 2) AS calcost FROM drink_info"
                },
                {
                    "name": "output_to_output_drinks",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO output_drinks\nVALUES (\n?, ?\n);"
                }
            ]     
        },
        {   
            "name": "Drink_InfoExercise2set",
            "rules": [
                {
                    "name": "drop_table_output_drinks2",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS output_drinks2;"
                },
                {
                    "name": "create_table_output_drinks2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE output_drinks2\n(\ndrink_name VARCHAR(25),\ncal_carbs VARCHAR(20)\n);"
                },
                {
                    "name": "query_drink_info",
                    "class": "SQLQuery",
                    "rule": "SELECT drink_name, ROUND(calories/carbs, 2) AS cal_carbs FROM drink_info;"
                },
                {
                    "name": "output_to_output_drinks2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO output_drinks2\nVALUES (\n?, ?\n);"
                }                
            ]   
        },
        {   
            "name": "AndysLoop",
            "rules": [
                {
                    "name": "Drop_Tables_Created",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS loop1, loop2"
                },
                {
                    "name": "Create_Loop_Table_1",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE loop1 (id INT, dataone VARCHAR(20), datatwo VARCHAR(20))"
                },
                {
                    "name": "Create_Loop_Table_2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE loop2 (id INT, dataone VARCHAR(20), datatwo VARCHAR(20))"
                },
                {
                    "name": "Populate_Loop_Table_1",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO loop1 VALUES (1,'a','b'),(2,'c','d'),(3,'e','f'),(4,'g','h'),(5,'i','j'),(6,'k','l')"
                },
                {
                    "name": "Select_where_id_lt_4",
                    "class": "SQLQuery",
                    "rule": "SELECT id, dataone, datatwo FROM loop1 where id < 4"
                },
                {
                    "name": "Populate_Loop_Table_2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO loop2 VALUES (?,?,?)"
                }
            ]      
        },
        {   
            "name": "Drink_infoexerciseset3",
            "rules": [
                {
                    "name": "DROP_TABLE",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS output_drinks3;"
                },
                {
                    "name": "CREATE_TABLE",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE output_drinks3\n(\ndrink_name VARCHAR(30),\ncarbs_cost VARCHAR(30)\n);"
                },
                {
                    "name": "QUERY_drink_info_TABLE",
                    "class": "SQLQuery",
                    "rule": "SELECT drink_name, ROUND(carbs/cost, 2) AS carbs_cost FROM drink_info;"
                },
                {
                    "name": "OUTPUT_TO_NEW_TABLE",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO output_drinks3\nVALUES (\n?,?\n);"
                }
            ]      
        },
        {   
            "name": "AndysThirdRuleSet",
            "rules": [
                {
                    "name": "Create_Table_andy3",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE IF NOT EXISTS andy3 (column1 VARCHAR(20), column2 VARCHAR(20))"
                },
                {
                    "name": "Create_Table_andy4",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE IF NOT EXISTS andy4 (column1 VARCHAR(20), column2 VARCHAR(20))"
                },
                {
                    "name": "Populate_andy3",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy3 VALUES ('1', 'ONE'), ('2', 'two'), ('3', 'three'), ('4', 'four')"
                },
                {
                    "name": "SELECT_WHERE_column1_lt_4",
                    "class": "SQLQuery",
                    "rule": "SELECT column1, column2 FROM andy3 WHERE column1 < 4;"
                },
                {
                    "name": "Populate_andy4_With_Loop_Data",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy4 VALUES (?,?)"
                }                
            ]     
        },
        {   
            "name": "AndysSnippit",
            "rules": [
                {
                    "name": "AndysRuleChain",
                    "class": "Snippet"
                }
            ]    
        },
        {   
            "name": "GEMSLiteHourly",
            "rules": [
                {
                    "name": "GEMS_Recent_Active_Pop",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,p.emplid,\n  CASE\n    WHEN substr(n.national_id, 1, 3)  IN ('949') THEN 13\n    ELSE 1\n  END AS SSN_IDENTIFIER_TYPE\n  , trim(n.national_id) as ssn\n  , to_char(p.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n  , to_char(p.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n  , pde.sex\n  , CASE WHEN TRIM(na.name_title) IS NULL OR na.name_title IS NULL \n    THEN substr(trim(na.name_prefix),1,10)\n    ELSE substr(trim(na.name_title),1,10)\n    END as name_prefix \n  , substr(trim(na.first_name),1,100) as first_name\n  , substr(trim(na.middle_name),1,100) as middle_name\n  , substr(trim(na.last_name),1,100) as last_name\n  , substr(trim(na.name_suffix),1,10) as name_suffix\n  , 12 AS gems_source_id\n  from ps_person p\n  join ps_names na on na.emplid = p.emplid\n  left outer join (select pde1.emplid, pde1.lastupddttm, pde1.sex from ps_pers_data_effdt pde1 \n         where pde1.effdt = (select max(pde2.effdt) from ps_pers_data_effdt pde2 where pde2.emplid = pde1.emplid and pde2.effdt <= sysdate)\n       ) pde on pde.emplid = p.emplid\n  left outer join ps_pers_nid n on n.emplid = p.emplid and n.country = 'USA' and n.national_id_type = 'PR'\n  where SUBSTR(p.EMPLID,1,5) = '00000'  \n  AND REGEXP_LIKE(p.emplid, '^[[:digit:]]{11}$') \n  AND na.name_type = 'PRI'\n  AND na.effdt = (select max(na2.effdt) from ps_names na2 where na2.emplid = na.emplid and na2.name_type = na.name_type and na2.effdt <= sysdate)\n  AND TRIM(na.last_name) IS NOT NULL\n  AND ( p.birthdate IS NOT NULL OR TRIM(n.national_id) IS NOT NULL )\n and ((p.last_child_upddtm > (sysdate - 45) or na.lastupddttm > (sysdate - 45) or pde.lastupddttm > (sysdate - 45) or n.lastupddttm > (sysdate - 45))\n      or p.emplid in ('00000064435'))\n  ORDER BY p.emplid desc"
                },
                {
                    "name": "CIMS_PR_Identity_Merge",
                    "class": "SQLQuery",
                    "rule": "CALL cims_pr.idr_identity_merge(?,?,?,?,?,?,?,?,?,?,?,?,?)"
                },
                {
                    "name": "InsertConflicts",
                    "class": "SQLQuery",
                    "rule": "insert ignore into ctx_identifier_conflicts (\n   identifier_type_id,\n   identifier,\n   source_id,\n   current_identity_id,\n   conflicting_identity_id\n) select '42' as id_type_id, \n\t\t\t'DOB+LN+FN dup' as identifier, \n\t\t\tb1.source_id,\n\t\t\tb1.identity_id,\n\t\t\tb2.identity_id\nfrom idr_biodem b1\njoin idr_names na1 on na1.identity_id = b1.identity_id \njoin idr_identifiers e1 on e1.identity_id = b1.identity_id and e1.identifier_type_id not in ( 2, 4, 1, 13, 10, 11, 42 ) and e1.status = 'Active'\nleft outer join idr_identifiers u1 on u1.identity_id = b1.identity_id and u1.identifier_type_id = 2 and u1.status = 'Active'\nleft outer join ctx_identifier_conflicts ic on ic.current_identity_id = b1.identity_id and ic.identifier = 'DOB+LN+FN dup'\nleft outer join idr_identifiers ssn1 on ssn1.identity_id = b1.identity_id and ssn1.identifier_type_id = 1 and ssn1.status = 'Active'\njoin idr_biodem b2 on b2.date_of_birth = b1.date_of_birth and b2.identity_id <> b1.identity_id\njoin idr_names na2 on na2.identity_id = b2.identity_id and na2.lastname = na1.lastname and na2.firstname = na1.firstname\nleft outer join idr_identifiers ssn2 on ssn2.identity_id = b2.identity_id and ssn2.identifier_type_id = 1 and ssn2.status = 'Active'\nwhere (ssn1.identifier IS NULL or ssn2.identifier IS NULL)\nand u1.identity_id IS NULL\nand ic.current_identity_id IS NULL\nand na1.change_id = (select max(naX.change_id) from idr_names naX where naX.identity_id = na1.identity_id and naX.source_id = na1.source_id)\nand na2.change_id = (select max(naY.change_id) from idr_names naY where naY.identity_id = na2.identity_id and naY.source_id = na2.source_id)\ngroup by '42', \n\t\t\t'DOB+LN+FN dup', \n\t\t\tb1.source_id, \n\t\t\tb1.identity_id,\n\t\t\tb2.identity_id\nUNION\nselect '42' as id_type_id, \n\t\t\t'Multiple active SSNs' as identifier, \n\t\t\tssn1.source_id as source_id1,\n\t\t\tssn1.identity_id as ident1,\n\t\t\tssn2.identity_id as ident2\t\nfrom idr_identifiers ssn1\njoin idr_identifiers ssn2 on ssn2.identity_id = ssn1.identity_id \n\t\t\tand ssn2.identifier_type_id = 1\n\t\t\tand ssn2.status = 'Active'\n\t\t\tand ssn2.identifier <> ssn1.identifier\nleft outer join ctx_identifier_conflicts ic on ic.current_identity_id = ssn1.identity_id \n\t\t\tand ic.identifier = 'Multiple active SSNs'\nwhere ssn1.identifier_type_id = 1\nand ssn1.status = 'Active'\nand ic.current_identity_id IS NULL\ngroup by '42', \n\t\t\t'Multiple active SSNs', \n\t\t\tssn1.source_id,\n\t\t\tssn1.identity_id,\n\t\t\tssn2.identity_id\nUNION\nselect '42' as id_type_id, \n\t\t\t'Multiple active EmplIDs' as identifier, \n\t\t\te1.source_id as source_id1,\n\t\t\te1.identity_id as ident1,\n\t\t\te2.identity_id as ident2\nfrom idr_identifiers e1\njoin idr_identifiers e2 on e2.identity_id = e1.identity_id \n\t\t\tand e2.identifier_type_id = e1.identifier_type_id\n\t\t\tand e2.status = e1.status\n\t\t\tand e2.identifier <> e1.identifier\nleft outer join ctx_identifier_conflicts ic on ic.current_identity_id = e1.identity_id \n\t\t\tand ic.identifier = 'Multiple active EmplIDs'\nwhere e1.identifier_type_id = 3\nand e1.status = 'Active'\nand ic.current_identity_id IS NULL\ngroup by '42', \n\t\t\t'Multiple active EmplIDs', \n\t\t\te1.source_id,\n\t\t\te1.identity_id,\n\t\t\te2.identity_id"
                },
                {
                    "name": "ImportIdentityToBaggageClaimGEMS",
                    "class": "Snippet"
                },
                {
                    "name": "Reconcile",
                    "class": "DefinedService"
                },
                {
                    "name": "PrcPersonMerge",
                    "class": "NamedQuery"
                }
            ]    
        },
        {   
            "name": "AndysSnippit2",
            "rules": [
                {
                    "name": "SimpleSelect",
                    "class": "SQLQuery",
                    "rule": "SELECT * FROM andy"
                },
                {
                    "name": "AndysSnippit2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?, ?)"
                },
                {
                    "name": "AndysSnippit2",
                    "class": "Snippet"
                }
            ]     
        },
        {   
            "name": "AndysSnippit3",
            "rules": [
                {
                    "name": "AndysSnippit3_Select",
                    "class": "SQLQuery",
                    "rule": "SELECT * FROM andy"
                },
                {
                    "name": "AndysSnippit3",
                    "class": "Snippet"
                },
                {
                    "name": "InsertIntoTable",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?, ?)"
                }
            ]    
        },
        {   
            "name": "AndysSnippit4",
            "rules": [
                {
                    "name": "AndysSnippitInput",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy\nVALUES (?,?)"
                },
                {
                    "name": "AndysSnippitOutput",
                    "class": "SQLQuery",
                    "rule": "SELECT *\nFROM andy"
                },
                {
                    "name": "AndysSnippit4",
                    "class": "Snippet"
                },
                {
                    "name": "Select",
                    "class": "SQLQuery",
                    "rule": "SELECT *\nFROM andy"
                },
                {
                    "name": "Insert",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?, ?)"
                }
            ]     
        },
        {   
            "name": "ConvertNetidToMail",
            "rules": [
                {
                    "name": "SELECT_jabarthe",
                    "class": "SQLQuery",
                    "rule": "SELECT 'netid', 'mail', 'json', 'jabarthe'\nFROM DUAL"
                },
                {
                    "name": "WsConvertNetidToMail",
                    "class": "DefinedService",
                    "method": "GET",
                    "authType": "CAS",
                    "parse": "JSON",
                    "url": "https://netid.usf.edu/nams/ws_convert",
                    "user": "casuser",
                    "password": "caspassword"
                },
                {
                    "name": "INSERT_jabarthe",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO ConvertNetidToMail/nVALUES (?, ?, ?)"
                }                
            ]   
        },
        {   
            "name": "PR-Create-Stg_VIP",
            "rules": [
                {
                    "name": "SELECT_jabarthe",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE IF NOT EXISTS staging.stg_vip ( \n  vipid integer(11) NULL COMMENT 'Directly from NAMS VIP table',\n  vip_created_dt timestamp NULL COMMENT 'From NAMS VIP table',\n  vrs_status varchar(1) NULL COMMENT 'From NAMS VIP_RES_SET table',\n  raw_ssn integer(11) NULL COMMENT 'Directly from NAMS NAMES table',\n  id_ssn varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  biodem_dob date NULL COMMENT 'From NAMS VIP table for matching idr_biodem birthdate',\n  biodem_dod date NULL DEFAULT NULL COMMENT 'Not in NAMS',\n  biodem_gender varchar(1) NULL DEFAULT NULL COMMENT 'Not in NAMS',\n  raw_lname varchar(256) NULL COMMENT 'Directly from NAMS VIP table',\n  names_last varchar(100) NULL COMMENT 'For maching on idr_names',\n  raw_fname varchar(256) NULL COMMENT 'Directly from NAMS VIP table',\n  names_first varchar(100) NULL COMMENT 'For maching on idr_names',\n  raw_mname varchar(256) NULL COMMENT 'Directly from NAMS VIP table',\n  names_middle varchar(100) NULL COMMENT 'For maching on idr_names',\n  names_prefix varchar(10) NULL DEFAULT NULL COMMENT 'Not in NAMS',\n  raw_gen varchar(4) NULL COMMENT 'Directly from NAMS NAMES table',\n  names_suffix varchar(10) NULL COMMENT 'For maching on idr_names',\n  confid_ind varchar(1) NULL DEFAULT NULL COMMENT 'Copy from NAMS NAMES since not in VIP',\n  ethn_code varchar(2) NULL COMMENT 'Not in NAMS for VIPs',\n  citz_code varchar(2) NULL COMMENT 'Not in NAMS for VIPs',\n  raw_pidm integer(11) NULL COMMENT 'Directly from NAMS OASIS table',\n  id_pidm varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  raw_usfid varchar(9) NULL COMMENT 'Directly from NAMS OASIS table',\n  id_usfid varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  raw_emplid integer(11) NULL COMMENT 'Directly from NAMS GEMS table',\n  id_emplid varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  role_n_name varchar(50) NULL COMMENT 'Directly from NAMS NAMES and ROLES tables',\n  activity_date timestamp NOT NULL DEFAULT now() COMMENT 'When inserted',\n  comments254 varchar(255) NULL DEFAULT NULL COMMENT 'Placeholder if later need to pickup more columns from NAMS',\n  INDEX idx_vipid ( vipid ),\n  INDEX idx_id_ssn ( id_ssn ),\n  INDEX idx_id_pidm ( id_pidm ),\n  INDEX idx_id_usfid ( id_usfid ),\n  INDEX idx_id_emplid ( id_emplid )\n)"
                },
                {
                    "name": "PR-Trunc-Stg_VIP",
                    "class": "SQLQuery",
                    "rule": "TRUNCATE TABLE staging.stg_vip"
                },
                {
                    "name": "VIP-Get-Idents",
                    "class": "SQLQuery",
                    "rule": "SELECT DISTINCT\n\tv.vipid \n\t, v.created_dt\n\t, vrs.status\n\t, na.ssn \n  , CASE WHEN na.ssn > 999999 and na.ssn < 900000000 THEN lpad(na.ssn, 9, '0') ELSE NULL END \n\t, v.dob\n\t, v.lname \n  , CASE WHEN length( v.lname ) > 0 THEN TRIM(substr( v.lname, 1, 100 )) ELSE NULL END\n\t, v.fname \n  , CASE WHEN length( v.fname ) > 0 THEN TRIM(substr( v.fname, 1, 100 )) ELSE NULL END\n\t, v.mname \n  , CASE WHEN length( v.mname ) > 0 THEN TRIM(substr( v.mname, 1, 100 )) ELSE NULL END\n\t, na.gen \n  , CASE WHEN length( na.gen ) > 0 THEN TRIM(SUBSTR( na.gen, 1, 10 )) ELSE NULL END\n\t, CASE WHEN na.privacy = 255 THEN 'Y' ELSE 'N' END \n\t, o.pidm \n  , CASE WHEN o.pidm > 0 THEN o.pidm ELSE NULL END \n\t, o.usfid \n  , CASE WHEN length(o.usfid)=9 and substr(o.usfid,1,1)='U' THEN o.usfid ELSE NULL END\n\t, g.emplid \n  , CASE WHEN g.emplid > 0 and g.emplid < 1000000 THEN lpad(g.emplid, 11, '0') ELSE NULL END\n\t, concat(concat(na.role,'-'),r.name)\nFROM vip v\nLEFT OUTER JOIN vip_res_set vrs on vrs.vipid = v.vipid\nLEFT OUTER JOIN names na on na.badge = v.vipid\nLEFT OUTER JOIN vip_resource vr on vr.rid = vrs.rid \nLEFT OUTER JOIN oasis o on o.badge = na.badge\nLEFT OUTER JOIN gems g on g.badge = na.badge\nLEFT OUTER JOIN roles r on r.code = na.role\nWHERE ( vr.label = 'USFID'\nAND vrs.status = 'P' \n) OR v.vipid in ( 1798583, 1011799, 1319044, 1470331, 1662969 )\norder by v.created_dt"
                },
                {
                    "name": "PR-Insert-Stg_VIP",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO staging.stg_vip (\n  vipid,\n  vip_created_dt,\n  vrs_status,\n  raw_ssn,\n  id_ssn,\n  biodem_dob,\n  raw_lname,\n  names_last,\n  raw_fname,\n  names_first,\n  raw_mname,\n  names_middle,\n  raw_gen,\n  names_suffix,\n  confid_ind,\n  raw_pidm,\n  id_pidm,\n  raw_usfid,\n  id_usfid,\n  raw_emplid,\n  id_emplid,\n  role_n_name\n) VALUES (\n?, ?, ?, ?, ?, \n?, ?, ?, ?, ?, \n?, ?, ?, ?, ?, \n?, ?, ?, ?, ?, \n?, ? )"
                },
                {
                    "name": "PR-Inactivate-VIPID-SSN",
                    "class": "SQLQuery",
                    "rule": "SELECT ssn.source_id, ssn.identifier, ssn.identifier_type_id, 0\nFROM pro_identifiers vipid\nJOIN pro_identifiers ssn on ssn.person_id = vipid.person_id and ssn.identifier_type_id = 1 /*SSN*/ and \nssn.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nLEFT OUTER JOIN staging.stg_vip sv on sv.vipid = vipid.identifier and sv.id_ssn = ssn.identifier\nWHERE vipid.identifier_type_id = 18\nAND vipid.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nAND ssn.source_id = vipid.source_id\nAND sv.vipid IS NULL \nAND 0 < (select count(*) from staging.stg_vip)"
                },
                {
                    "name": "ProIdentifierStatusSet",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "PR-Inactivate-VIPID-HRPRNs",
                    "class": "SQLQuery",
                    "rule": "SELECT hrprn.source_id, hrprn.identifier, hrprn.identifier_type_id, 0\nFROM pro_identifiers vipid\nJOIN pro_identifiers hrprn on hrprn.person_id = vipid.person_id and hrprn.identifier_type_id = 13 /*hrprn*/ and \nhrprn.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nLEFT OUTER JOIN staging.stg_vip sv on sv.vipid = vipid.identifier and sv.id_ssn = hrprn.identifier\nWHERE vipid.identifier_type_id = 18\nAND vipid.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nAND hrprn.source_id = vipid.source_id\nAND sv.vipid IS NULL \nAND 0 < (select count(*) from staging.stg_vip)"
                },
                {
                    "name": "PR-Inactivate-VIPIDs",
                    "class": "SQLQuery",
                    "rule": "SELECT vipid.source_id, vipid.identifier, vipid.identifier_type_id, 0\nFROM pro_identifiers vipid\nLEFT OUTER JOIN staging.stg_vip sv on sv.vipid = vipid.identifier\nWHERE vipid.identifier_type_id = 18\nAND vipid.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nAND sv.vipid IS NULL \nAND 0 < (select count(*) from staging.stg_vip)"
                },
                {
                    "name": "PR-IdentMergeofVIPs",
                    "class": "SQLQuery",
                    "rule": "TRUNCATE TABLE staging.stg_vip"
                }
                
                
                
                
27	9	PR-IdentMergeofVIPs		1	SELECT DISTINCT 18 as vipid_identifier_type\n       , sv.vipid\n       , CASE WHEN substr(sv.id_ssn, 1, 3) IN ('949') THEN 13 ELSE 1 END as ssn_identifier_type\n       , sv.id_ssn\n       , sv.biodem_dob\n       , sv.biodem_dod\n       , sv.biodem_gender\n       , sv.names_prefix\n       , sv.names_first\n       , sv.names_middle\n       , sv.names_last\n       , sv.names_suffix\n       , 17 as vip_source_id\nFROM staging.stg_vip sv\nWHERE sv.vipid IS NOT NULL\nAND sv.names_first IS NOT NULL\nAND sv.names_last IS NOT NULL\nAND ( sv.biodem_dob IS NOT NULL or sv.id_ssn IS NOT NULL )\nORDER BY sv.vipid DESC	
27	10	CIMS_PR Identity Merge		1	CALL cims_pr.idr_identity_merge(?,?,?,?,?,?,?,?,?,?,?,?,?)	
27	11	PR-AddVIPConflicts		1	insert ignore into ctx_identifier_conflicts (
   identifier_type_id,
   identifier,
   source_id,
   current_identity_id,
   conflicting_identity_id
) select '42', 
      concat(sv.id_usfid, ' USFID only in VIP'),
      min(id.source_id),
      id.identity_id,
      id.identity_id
from idr_identifiers id
join staging.stg_vip sv on sv.vipid = id.identifier
left outer join idr_identifiers usfid on usfid.identity_id = id.identity_id and usfid.identifier_type_id = 2 /*USFID*/ and usfid.status = 'Active'
left outer join idr_identifiers usfid2 on usfid2.identifier = sv.id_usfid and usfid2.identifier_type_id = 2 /*USFID*/ and usfid2.status = 'Active'
where id.identifier_type_id = 18 /* VIPID */
and id.status = 'Active'
and usfid.identifier IS NULL
and sv.id_usfid IS NOT NULL
and usfid2.identifier IS NOT NULL
and not exists (select 'alreadythere' from ctx_identifier_conflicts ic 
      where ic.identifier = concat(sv.id_usfid, ' USFID only in VIP')
      and ic.current_identity_id = id.identity_id 
          )
group by '42', 
      concat(sv.id_usfid, ' USFID only in VIP'),
      id.identity_id,
      id.identity_id
UNION
select '42', 
      concat(sv.id_emplid, ' EmplID only in VIP'), 
      min(id.source_id),
      id.identity_id,
      id.identity_id
from idr_identifiers id
join stg_vip sv on sv.vipid = id.identifier 
left outer join idr_identifiers emplid on emplid.identity_id = id.identity_id and emplid.identifier_type_id = 3 and emplid.status = 'Active'
left outer join idr_identifiers emplid2 on emplid2.identifier = sv.id_emplid and emplid2.identifier_type_id = 3 and emplid2.status = 'Active'
where id.identifier_type_id = 18 /* VIPID */
and id.status = 'Active'
and sv.id_emplid IS NOT NULL
and emplid2.identifier IS NOT NULL
and (emplid.identifier IS NULL or emplid.identifier <> sv.id_emplid)
and not exists (select 'alreadythere' from ctx_identifier_conflicts ic 
      where ic.identifier = concat(sv.id_emplid, ' EmplID only in VIP')
      and ic.current_identity_id = id.identity_id 
          )
group by '42', 
      concat(sv.id_emplid, ' EmplID only in VIP'), 
      id.identity_id,
      id.identity_id	
27	12	InsertConflicts		1	insert ignore into ctx_identifier_conflicts (
   identifier_type_id,
   identifier,
   source_id,
   current_identity_id,
   conflicting_identity_id
) select '42' as id_type_id, 
			'DOB+LN+FN dup' as identifier, 
			b1.source_id,
			b1.identity_id,
			b2.identity_id
from idr_biodem b1
join idr_names na1 on na1.identity_id = b1.identity_id 
join idr_identifiers e1 on e1.identity_id = b1.identity_id and e1.identifier_type_id not in ( 2, 4, 1, 13, 10, 11, 42 ) and e1.status = 'Active'
left outer join idr_identifiers u1 on u1.identity_id = b1.identity_id and u1.identifier_type_id = 2 and u1.status = 'Active'
left outer join ctx_identifier_conflicts ic on ic.current_identity_id = b1.identity_id and ic.identifier = 'DOB+LN+FN dup'
left outer join idr_identifiers ssn1 on ssn1.identity_id = b1.identity_id and ssn1.identifier_type_id = 1 and ssn1.status = 'Active'
join idr_biodem b2 on b2.date_of_birth = b1.date_of_birth and b2.identity_id <> b1.identity_id
join idr_names na2 on na2.identity_id = b2.identity_id and na2.lastname = na1.lastname and na2.firstname = na1.firstname
left outer join idr_identifiers ssn2 on ssn2.identity_id = b2.identity_id and ssn2.identifier_type_id = 1 and ssn2.status = 'Active'
where (ssn1.identifier IS NULL or ssn2.identifier IS NULL)
and u1.identity_id IS NULL
and ic.current_identity_id IS NULL
and na1.change_id = (select max(naX.change_id) from idr_names naX where naX.identity_id = na1.identity_id and naX.source_id = na1.source_id)
and na2.change_id = (select max(naY.change_id) from idr_names naY where naY.identity_id = na2.identity_id and naY.source_id = na2.source_id)
group by '42', 
			'DOB+LN+FN dup', 
			b1.source_id, 
			b1.identity_id,
			b2.identity_id
UNION
select '42' as id_type_id, 
			'Multiple active SSNs' as identifier, 
			ssn1.source_id as source_id1,
			ssn1.identity_id as ident1,
			ssn2.identity_id as ident2	
from idr_identifiers ssn1
join idr_identifiers ssn2 on ssn2.identity_id = ssn1.identity_id 
			and ssn2.identifier_type_id = 1
			and ssn2.status = 'Active'
			and ssn2.identifier <> ssn1.identifier
left outer join ctx_identifier_conflicts ic on ic.current_identity_id = ssn1.identity_id 
			and ic.identifier = 'Multiple active SSNs'
where ssn1.identifier_type_id = 1
and ssn1.status = 'Active'
and ic.current_identity_id IS NULL
group by '42', 
			'Multiple active SSNs', 
			ssn1.source_id,
			ssn1.identity_id,
			ssn2.identity_id
UNION
select '42' as id_type_id, 
			'Multiple active EmplIDs' as identifier, 
			e1.source_id as source_id1,
			e1.identity_id as ident1,
			e2.identity_id as ident2
from idr_identifiers e1
join idr_identifiers e2 on e2.identity_id = e1.identity_id 
			and e2.identifier_type_id = e1.identifier_type_id
			and e2.status = e1.status
			and e2.identifier <> e1.identifier
left outer join ctx_identifier_conflicts ic on ic.current_identity_id = e1.identity_id 
			and ic.identifier = 'Multiple active EmplIDs'
where e1.identifier_type_id = 3
and e1.status = 'Active'
and ic.current_identity_id IS NULL
group by '42', 
			'Multiple active EmplIDs', 
			e1.source_id,
			e1.identity_id,
			e2.identity_id	
27	13	ImportIdentityToBaggageClaimVIP Snippit		1	DEFINEDSERVICE:ImportIdentityToBaggageClaimVIP	
                
            ]     
        },
        {   
            "name": "OASISLiteHourlyModified",
            "rules": [
                
            ]   
        },
        {   
            "name": "OASISLiteHourly1_5",
            "rules": [
                
            ]    
        },
        {   
            "name": "ToBeDeleted",
            "rules": [
                
            ]     
        },
        {   
            "name": "HSCDW_Import2x",
            "rules": [
                
            ]     
        },
        {   
            "name": "AddConflicts2x",
            "rules": [
                
            ]   
        },
        {   
            "name": "OASIS_Import2x",
            "rules": [
                
            ]   
        },
        {   
            "name": "OasisImportSourceandCurrentTimestamp",
            "rules": [
                
            ]   
        },
        {   
            "name": "Oasisp-create2x",
            "rules": [
                
            ]     
        },
        {   
            "name": "PeopleAdminBCToGEMS_2x",
            "rules": [
                
            ]   
        }
    ]
}

	at grails.converters.JSON.parse(JSON.java:281)
	at BootStrap$_closure1.doCall(BootStrap.groovy:28)
	at grails.util.Environment.evaluateEnvironmentSpecificBlock(Environment.java:308)
	at grails.util.Environment.executeForEnvironment(Environment.java:301)
	at grails.util.Environment.executeForCurrentEnvironment(Environment.java:277)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
	at java.lang.Thread.run(Thread.java:680)
2013-05-09 11:55:57,732 [localhost-startStop-1] ERROR StackTrace  - Full Stack Trace:
org.codehaus.groovy.grails.web.converters.exceptions.ConverterException: Error parsing JSON
	at grails.converters.JSON.parse(JSON.java:290)
	at BootStrap$_closure1.doCall(BootStrap.groovy:28)
	at grails.util.Environment.evaluateEnvironmentSpecificBlock(Environment.java:308)
	at grails.util.Environment.executeForEnvironment(Environment.java:301)
	at grails.util.Environment.executeForCurrentEnvironment(Environment.java:277)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
	at java.lang.Thread.run(Thread.java:680)
Caused by: org.codehaus.groovy.grails.web.json.JSONException: Expected a ',' or ']' at character 59794 of {    
    "ruleSets": [
        {   
            "name": "debugRuleSet",
            "rules": [
                {
                    "name": "GEMS_test_rule_2",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "GEMS_test_rule",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "GEMS_test_rule_again",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "GEMS_test_rule_again_2",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "Dummy_Insert_Input_Reorder",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO test_dump_min (identifier_type_id,identifier,ssn_identifier_type_id,ssn,birthdate,deathdate,sex,prefix,firstName,middleName,lastName,suffix,source_id) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)"
                },
                {
                    "name": "Dummy_INSERT",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO test_dump (\n\tidentifier_type_id,\n\tidentifier,\n\tssn_identifier_type_id,\n\tssn,\n\tbirthdate,\n\tdeathdate,\n\tsex,prefix,\n\tfirstName,\n\tmiddleName,\n\tlastName,\n\tsuffix,\n\tsource_id) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)"
                },
                {
                    "name": "This_is_a_bum_rule",
                    "class": "SQLQuery",
                    "rule": "SELECT '1' FROM DUAL"
                },
                {
                    "name": "This_is_a_bum_PA_rule",
                    "class": "SQLQuery",
                    "rule": "SELECT loaded_dt FROM people_admin"
                },
                {
                    "name": "BC_Select",
                    "class": "SQLQuery",
                    "rule": "SELECT ssn,birthdate,firstName,lastName FROM test_dump_min"
                },
                {
                    "name": "Select_Test",
                    "class": "SQLQuery",
                    "rule": "SELECT 'James','Patrick','Jones' FROM DUAL"
                },
                {
                    "name": "Select_Prepare",
                    "class": "SQLQuery",
                    "rule": "SELECT ?,?,? FROM DUAL"
                },
                {
                    "name": "Append_Wilhoit",
                    "class": "SQLQuery",
                    "rule": "SELECT 'Wilhoit' FROM DUAL"
                },
                {
                    "name": "DROP_TABLE_cool2",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE cool2"
                },
                {
                    "name": "adsf",
                    "class": "SQLQuery",
                    "rule": "SELECT *\nFROM Andy"
                }
                
            ]
        },
        {
            "name": "GEMS_Silver_Rule_Set_2_x",
            "rules": [
                {
                    "name": "GEMS_Silver_Rule_Population",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN TRIM(pd.name_title) IS NULL OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n        AND SUBSTR(pd.EMPLID,1,5) = '00000'  \n        AND REGEXP_LIKE(pd.emplid, '^[[:digit:]]{11}$') \n\tORDER BY pd.emplid desc"
                },
                {
                    "name": "Update_Active_Status_Emplid",
                    "class": "SQLQuery",
                    "rule": "SELECT identifier\n\tFROM pro_identifiers \n\tWHERE identifier_type_id=3 AND source_id=12\n\tORDER BY identifier"
                },
                {
                    "name": "Update_Active_Status_SSN_GEMS",
                    "class": "SQLQuery",
                    "rule": "SELECT identifier\n\tFROM pro_identifiers \n\tWHERE identifier_type_id=1 AND source_id =12\n\tORDER BY identifier"
                },
                {
                    "name": "GEMS_HRPR_Iterator",
                    "class": "SQLQuery",
                    "rule": "SELECT identifier\n\tFROM pro_identifiers \n\tWHERE identifier_type_id=13 AND source_id =12\n\tORDER BY identifier"
                },
                {
                    "name": "GEMS_SSNExistTest",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 AS SSN_IDENTIFIER_TYPE,COUNT(*) AS GEMS_SSNCount\n\tFROM ps_pers_nid n\n\tWHERE n.country(+) = 'USA'\n\tAND n.national_id_type(+) = 'PR'\n\tAND trim(n.national_id) = ?"
                },
                {
                    "name": "GEMS_HRPRExistTest",
                    "class": "SQLQuery",
                    "rule": "SELECT 13 AS HRPR_IDENTIFIER_TYPE,COUNT(*) AS HRPRCount\n\tFROM ps_pers_nid n\n\tWHERE n.country(+) = 'USA'\n\tAND n.national_id_type(+) = 'PR'\n\tAND trim(n.national_id) = ?"
                },
                {
                    "name": "Emplid_Exist_Test",
                    "class": "SQLQuery",
                    "rule": "SELECT 3 AS EMPL_IDENTIFIER_TYPE, COUNT(*) AS EmplidCount\n\tFROM ps_personal_data pd\n\tWHERE pd.emplid=?"
                },
                {
                    "name": "Set_Empl_Active_Flag",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET status='Active',\n\tsource_id=?\n\tWHERE identifier=?\n\tAND identifier_type_id=?\n\tAND identifier_status_id != (\n\t\tSELECT identifier_status_id \n\t\t\tFROM identifier_statuses \n\t\t\tWHERE `name`='Active'\n\t)\n\tAND ? > 0"
                },
                {
                    "name": "Set_Empl_Inactive_Flag",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET status='Inactive'\n\tWHERE source_id=?\n\tAND identifier=?\n\tAND identifier_type_id=?\n\tAND identifier_status_id != (\n\t\tSELECT identifier_status_id \n\t\t\tFROM identifier_statuses \n\t\t\tWHERE `name`='Inactive'\n\t)\n\tAND ? < 1"
                },
                {
                    "name": "Add_GEMS_Source",
                    "class": "SQLQuery",
                    "rule": "SELECT 14 AS source_id FROM DUAL"
                },
                {
                    "name": "BaggageClaimSORCreate",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE `incomming_sor_records` (\n  `primary_identifier_type_id` bigint(18) unsigned DEFAULT NULL,\n  `primary_identifier` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `secondary_identifier_type_id` bigint(18) unsigned DEFAULT NULL,\n  `secondary_identifier` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `birthday` date DEFAULT NULL,\n  `deathday` date DEFAULT NULL,\n  `gender` varchar(10) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `prefix` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `firstname` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `middlename` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `lastname` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `suffix` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `baggage_source_id` bigint(18) unsigned DEFAULT NULL,\n  `status` enum('Valid','Invalid') COLLATE utf8_unicode_ci DEFAULT NULL,\n  KEY `incomming_sor_records_baggage_source_id` (`baggage_source_id`),\n  CONSTRAINT `incomming_sor_records_baggage_source_id` FOREIGN KEY (`baggage_source_id`) REFERENCES `baggage_sources` (`baggage_source_id`) ON DELETE SET NULL ON UPDATE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;"
                },
                {
                    "name": "Add_new_BC_Source",
                    "class": "SQLQuery",
                    "rule": "INSERT IGNORE INTO baggage_sources (baggage_source_id,cims_pr_source_id,name,format) \nVALUES ('5','14','GEMS-DATABASE','DATABASE')"
                },
                {
                    "name": "Update_SOR",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO incomming_sor_records\n(primary_identifier_type_id,primary_identifier,secondary_identifier_type_id,\nsecondary_identifier,birthday,deathday,gender,prefix,firstname,middlename,lastname,\nsuffix,baggage_source_id,status) VALUES\n(?,?,?,?,?,?,?,?,?,?,?,?,5,'Valid')"
                },
                {
                    "name": "GEMS_Recent_Activ_Pop",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN TRIM(pd.name_title) IS NULL OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n        AND SUBSTR(pd.EMPLID,1,5) = '00000'  \n        AND REGEXP_LIKE(pd.emplid, '^[[:digit:]]{11}$') \nand (pd.lastupddttm > (sysdate - 1) or n.lastupddttm > (sysdate - 1))\n\tORDER BY pd.emplid desc"
                },
                {
                    "name": "Reassemble_Params",
                    "class": "SQLQuery",
                    "rule": "SELECT idinfo.source_id,idinfo.identifier_type_id,idinfo.identifier,idinfo.source_id\n\tFROM\n\t\t(\n\t\t\tSELECT \n\t\t\t\t? AS identifier_type_id,\n\t\t\t\t? AS identifier,\n\t\t\t\t? AS ssn_identifier_type_id,\n\t\t\t\t? AS ssn,\n\t\t\t\t? AS birthdate,\n\t\t\t\t? AS deathdate,\n\t\t\t\t? AS gender,\n\t\t\t\t? AS prefix,\n\t\t\t\t? AS first_name,\n\t\t\t\t? AS middle_name,\n\t\t\t\t? AS last_name,\n\t\t\t\t? AS suffix,\n\t\t\t\t? AS source_id\n\t\t\tFROM DUAL\n\t\t) AS idinfo"
                },
                {
                    "name": "Set_the_authoritative_source",
                    "class": "SQLQuery",
                    "rule": "UPDATE idr_identifiers\n\tSET status='Active' AND source_id=?\n\tWHERE identifier_type_id=? AND identifier=? AND source_id != ?"
                },
                {
                    "name": "Set_the_Gems_import_source",
                    "class": "SQLQuery",
                    "rule": "SELECT 5 AS importSourceId FROM DUAL"
                }
            ]  
        },
        {
            "name": "CIMS_PRStoredProcedures2x",
            "rules": [
                {
                    "name": "PrsBiodemUpdater",
                    "class": "NamedQuery",
                    "rule": "personId,birthday,deathday,gender,sourceId"
                },
                {
                    "name": "PrsNamesUpdater",
                    "class": "NamedQuery",
                    "rule": "personId,prefix,firstname,middlename,lastname,suffix,sourceId"
                },
                {
                    "name": "PrcPersonSilverRuleCheck",
                    "class": "NamedQuery",
                    "rule": "ssn,birthday,firstname,lastname"
                },
                {
                    "name": "PrsBiodemValidPastDate",
                    "class": "NamedQuery",
                    "rule": "dateString"
                },
                {
                    "name": "PrcPersonByIdentifier",
                    "class": "NamedQuery",
                    "rule": "identifierTypeId,identifier"
                },
                {
                    "name": "PrcPersonsCreateNew",
                    "class": "NamedQuery",
                    "rule": "sourceId"
                },
                {
                    "name": "PrcPersonMerge",
                    "class": "NamedQuery",
                    "rule": "primaryIdentifierTypeId, primaryIdentifier,secondaryIdentifierTypeId,secondaryIdentifier,birthday,deathday,gender,prefix,firstname,middlename,lastname,suffix,sourceId"
                },
                {
                    "name": "ProIdentifierStatusSet",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "ImpRepositoryIdentityNew",
                    "class": "SQLQuery",
                    "rule": "SELECT imp_repository_identity_new(?) FROM DUAL"
                },
                {
                    "name": "ImpRepositoryMerge",
                    "class": "NamedQuery",
                    "rule": "importSourceId,firstname,middlename,lastname,gender,birthday,unparsedLine"
                }
            ]   
        },
        {
            "name": "CIMS_PRBaggageClaimMerge",
            "rules": [
                {
                    "name": "PeopleAdmin_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT loaded_dt,\n\thpid AS HPID,\n\tIF(ssn = 'No Response','',REPLACE(ssn,'-','')) AS SSN,\n\tIF(LEFT(UPPER(usfid),1) != 'U','',IF(LENGTH(usfid) = 9,usfid,'')) AS USFID,\n\tIF(emplid = 'No Response','',LPAD(TRIM(emplid),11,'0')) AS EMPLID,\n\tIF(fname = 'No Response','',TRIM(fname)) AS FIRSTNAME,\n\tIF(mname = 'No Response','',TRIM(mname)) AS MIDDLENAME,\n\tIF(lname = 'No Response','',TRIM(lname)) AS LASTNAME,\n\tIF(gender IN('M','F'),gender,'') AS GENDER,\n\tIF(dob = 'No Response',NULL,TRIM(dob)) AS BIRTHDAY,\n\tRTRIM(baggage) AS BAGGAGE\n\tFROM nams.people_admin\n\tWHERE DATE(loaded_dt) != '0000-00-00'"
                },
                {
                    "name": "CardID_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT to_char(ID_ISSUE_DATE,'YYYY-MM-DD') AS IMPORT_DATE,\n\tID_CARD_NUMBER,\n\tNAME_FIRST AS FIRSTNAME,\n\tNAME_MIDDLE AS MIDDLENAME,\n\tNAME_LAST AS LASTNAME,\n\tto_char(BIRTH_DATE,'YYYY-MM-DD') AS BIRTHDAY\n\tFROM ID WHERE ROWNUM < 50"
                },
                {
                    "name": "NAMS_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT \n\tNOW() AS IMPORT_DATE,\n\tn.badge AS NAMSID,\n\tn.fname AS FIRSTNAME,\n\tn.mname AS MIDDLENAME,\n\tn.lname AS LASTNAME,\n\tSTR_TO_DATE(CONCAT('',\n\t\tIF(\n\t\t\t((SELECT COUNT(*) FROM bdays WHERE badge=n.badge AND bday > 0 ORDER BY bdayid DESC LIMIT 1) < 1),\n\t\t\tn.bday,\n\t\t\t(SELECT bday FROM bdays WHERE badge=n.badge AND bday > 0 ORDER BY bdayid DESC LIMIT 1)\n\t\t) \n\t) ,'%Y%m%d') AS BIRTHDAY\n\tFROM names n\n\tWHERE \n\t(SELECT COUNT(*) FROM oasis WHERE badge=n.badge LIMIT 1) > 0 \n\tOR\n\t(SELECT COUNT(*) FROM gems WHERE badge=n.badge LIMIT 1) > 0"
                }
            ]   
        },
        {
            "name": "CIMS_PRBaggageClaimMergeOtherRules",
            "rules": [
                {
                    "name": "People_Admin_Request",
                    "class": "SQLQuery",
                    "rule": "SELECT 2 AS importSourceId,0 AS reconcile FROM DUAL;"
                },
                {
                    "name": "People_Admin_Request",
                    "class": "SQLQuery",
                    "rule": "SELECT 2 AS importSourceId,0 AS reconcile FROM DUAL;"
                },
                {
                    "name": "ImportToBaggageClaim",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "Dummy_ParamCollector_for_ImportToBaggageClaim_Defined_Service_loop",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS baggageClaimIdentityId, CAST(? AS UNSIGNED) AS personId, ? AS importSourceId, ? AS sourceId, ? AS baggageClaimIdentityStatusId, ? AS firstName, ? AS middleName, ? AS lastName, ? AS gender, ? AS dateOfBirth"
                },
                {
                    "name": "AddToBaggageClaim",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "PeopleAdmin_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT \n\t2 AS importSourceId,\n\tIF(fname = 'No Response','',TRIM(fname)) AS FIRSTNAME,\n\tIF(mname = 'No Response','',TRIM(mname)) AS MIDDLENAME,\n\tIF(lname = 'No Response','',TRIM(lname)) AS LASTNAME,\n\tIF(gender IN('M','F'),gender,'') AS GENDER,\n\tIF(dob = 'No Response','',TRIM(REPLACE(dob,'/','-'))) AS BIRTHDAY,\n\tloaded_dt,\n\tCONCAT('[{\"identifier\":\"',hpid,'\",\"identifierType\":{\"identifierTypeId\":\"10\"}},{\"identifier\":\"',IF(ssn = 'No Response','',REPLACE(ssn,'-','')),'\",\"identifierType\":{\"identifierTypeId\":\"1\"}},{\"identifier\":\"',IF(LEFT(UPPER(usfid),1) != 'U','',IF(LENGTH(usfid) = 9,usfid,'')),'\",\"identifierType\":{\"identifierTypeId\":\"2\"}},{\"identifier\":\"',IF(emplid = 'No Response','',LPAD(TRIM(emplid),11,'0')),'\",\"identifierType\":{\"identifierTypeId\":\"3\"}}]') AS baggageClaimIdentifiers,\n\tRTRIM(baggage) AS BAGGAGE\n\tFROM nams.people_admin\n\tWHERE DATE(loaded_dt) != '0000-00-00' LIMIT 10"
                },
                {
                    "name": "Reconcile_Defined_Service",
                    "class": "DefinedService"
                },
                {
                    "name": "ImportIdentityToBaggageClaimPeopleAdmin",
                    "class": "DefinedService"
                },
                {
                    "name": "Prepend_PeopleAdmin_Source",
                    "class": "SQLQuery",
                    "rule": "SELECT 2 AS importSourceId FROM DUAL"
                },
                {
                    "name": "Prepend_Gems_Import_Source",
                    "class": "SQLQuery",
                    "rule": "SELECT 5 AS importSourceId FROM DUAL"
                },
                {
                    "name": "Prepend_Gems_Import_Source_and_Current_Timestamp",
                    "class": "SQLQuery",
                    "rule": "SELECT 5 AS importSourceId,NOW() AS importTimestamp,\"\" AS claimInfo FROM DUAL"
                },
                {
                    "name": "Prepend_VIP_Import_Source_and_Current_Timestamp",
                    "class": "SQLQuery",
                    "rule": "SELECT 8 AS importSourceId,NOW() AS importTimestamp FROM DUAL"
                },
                {
                    "name": "ImportIdentityToBaggageClaimHealth",
                    "class": "DefinedService"
                },
                {
                    "name": "ImportIdentityToBaggageClaimGEMS",
                    "class": "DefinedService"
                }
            ]    
        },
        {
            "name": "NamsDefinedServices",
            "rules": [
                {
                    "name": "NetIDToEMail_Defaults",
                    "class": "SQLQuery",
                    "rule": "SELECT 'netid' AS submit_type,'mail' AS return_type,'json' AS `return`,? AS `value` FROM DUAL"
                },
                {
                    "name": "WsConvertNetidToMail",
                    "class": "DefinedService"
                }
            ]     
        },
        { 
            "name": "UnumberDefinedServices",
            "rules": [
                {
                    "name": "Unumber_Defaults",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 AS personId,2 AS personAllocatedId,2 AS identifierTypeId, ? AS amount FROM DUAL"
                },
                {
                    "name": "ReallocatePoolIdentifiers",
                    "class": "DefinedService"
                }
            ]      
        },
        { 
            "name": "IdentityMergeRules",
            "rules": [
                {
                    "name": "Unumber_Defaults",
                    "class": "SQLQuery",
                    "rule": "SELECT \n? AS PrimaryIdentifierType,\n? AS PrimaryIdentifier,\n? AS SecondaryIdentifierType,\n? AS SecondaryIdentifier,\n? AS BirthDate,\n? AS DeathDate,\n? AS Gender,\n? AS Prefix,\n? AS FirstName,\n? AS MiddleName,\n? AS LastName,\n? AS Suffix,\n? AS SourceId\nFROM DUAL\t"
                },
                {
                    "name": "Set_Past_year_Limit",
                    "class": "SQLQuery",
                    "rule": "SELECT 150 AS maxyears FROM DUAL"
                },
                {
                    "name": "PrsBiodemValidPastDateLimit",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "PrsBiodemValidPastDate",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "FilterIdentifier",
                    "class": "DefinedService"
                },
                {
                    "name": "UniqueIdentifierMatch",
                    "class": "SQLQuery",
                    "rule": "SELECT foundUniquePerson.person_id AS personId,\n? AS PrimaryIdentifierType,\n? AS PrimaryIdentifier,\n? AS SecondaryIdentifierType,\n? AS SecondaryIdentifier,\n? AS BirthDate,\n? AS DeathDate,\n? AS Gender,\n? AS Prefix,\n? AS FirstName,\n? AS MiddleName,\n? AS LastName,\n? AS Suffix,\n? AS SourceId\nFROM (\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n\tUNION\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n) AS foundUniquePerson HAVING COUNT(*)=1"
                },
                {
                    "name": "ValidIdentfiersSet",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS person_id,\nidentifiers.identifier_type_id,\nidentifiers.identifier,\n? AS SourceId\nFROM (\n\tSELECT identifier_type_id,identifier FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0\n\tUNION\n\tSELECT identifier_type_id,identifier FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0\n) AS identifiers"
                },
                {
                    "name": "IdentifierSourceUpdate",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET source_id=?\n\tWHERE  source_id !=? AND identifier_type_id=? AND identifier=? AND person_id=?"
                },
                {
                    "name": "IdentifierReallocationUpdate",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET person_id = ?\n\tWHERE identifier_type_id=? AND identifier=? AND person_id !=? AND identifier_status_id != (SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active');"
                },
                {
                    "name": "IdentifierStatusUpdate",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET identifier_status_id = (SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active') AND merge_date=NOW()\n\tWHERE identifier_type_id=? AND identifier=? AND person_id=? AND identifier_status_id != (SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active');"
                },
                {
                    "name": "NameChangeDetection",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS prefix,? AS FirstName,? AS MiddleName,? AS LastName,? AS Suffix,? AS SourceId,? AS personId\nFROM DUAL WHERE \n(SELECT COUNT(*) FROM (\n\tSELECT prefix,firstname,middlename,lastname,suffix FROM prs_names WHERE source_id=? AND person_id=? ORDER BY last_changed DESC LIMIT 1\n) AS lastNameBySource\nWHERE prefix=? AND firstname=? AND middlename=? AND lastname=? AND suffix=?) < 1"
                },
                {
                    "name": "NameCreateNew",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO prs_names (prefix,firstname,middlename,lastname,suffix,source_id,person_id,last_changed) VALUES(?,?,?,?,?,?,?,NOW())"
                },
                {
                    "name": "BioDemChangeDetection",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS date_of_birth,? AS date_of_death,? AS gender,? AS SourceId,? AS PersonId\nFROM DUAL WHERE \n(SELECT COUNT(*) FROM (\n\tSELECT date_of_birth,date_of_death,gender FROM prs_biodem WHERE source_id=? AND person_id=? ORDER BY last_changed DESC LIMIT 1\n) AS lastNameBySource\nWHERE date_of_birth=? AND date_of_death=? AND gender=?) < 1"
                },
                {
                    "name": "BioDemCreateNew",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO prs_biodem (date_of_birth,date_of_death,gender,source_id,person_id,last_changed) VALUES(?,?,?,?,?,NOW())"
                },
                {
                    "name": "IdentifierNewDetection",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS identifier_type_id,? AS identifier,? AS sourceId,? AS personId\n\tFROM DUAL\n\tWHERE LENGTH(TRIM(?)) > 0 AND (SELECT COUNT(*) FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0) < 1"
                },
                {
                    "name": "IdentifierCreateNew",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO pro_identifiers (identifier_type_id,identifier,source_id,person_id,merge_date,identifier_status_id) VALUES(?,?,?,?,NOW(),(SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active'))"
                },
                {
                    "name": "EndLoop_Filler",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 FROM DUAL"
                },
                {
                    "name": "NoUniqueIdentifierCheck",
                    "class": "SQLQuery",
                    "rule": "SELECT \n? AS PrimaryIdentifierType,\n? AS PrimaryIdentifier,\n? AS SecondaryIdentifierType,\n? AS SecondaryIdentifier,\n? AS BirthDate,\n? AS DeathDate,\n? AS Gender,\n? AS Prefix,\n? AS FirstName,\n? AS MiddleName,\n? AS LastName,\n? AS Suffix,\n? AS SourceId\nFROM DUAL\nWHERE\n(SELECT COUNT(*) FROM\n(\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n\tUNION\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n) AS foundUniquePerson) !=1"
                }
            ]     
        },
        { 
            "name": "Snippets",
            "rules": [
                {
                    "name": "IdentityMergeChainDualIdentifiers",
                    "class": "Snippet"
                }
            ]      
        },
        { 
            "name": "AndysRuleSet",
            "rules": [
                {
                    "name": "Create_Table",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE andy \n(\nid INT,\ndata VARCHAR(100)\n);"
                },
                {
                    "name": "Create_Table_2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE andy2\n(\nid INT,\ndata VARCHAR(100),\ndata2 VARCHAR(100)\n);"
                },
                {
                    "name": "Populate",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES ('1', 'Andy1');"
                },
                {
                    "name": "Populate2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES ('2', 'Andy2');"
                },
                {
                    "name": "Populate4",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy2 VALUES (?,?,CONCAT(?,?));"
                },
                {
                    "name": "SELECT_FROM_DUAL",
                    "class": "SQLQuery",
                    "rule": "Select \"3\", \"Andy4\" FROM DUAL"
                },
                {
                    "name": "Populate3",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?,?);"
                },
                {
                    "name": "loop",
                    "class": "SQLQuery",
                    "rule": "SELECT id, data FROM andy"
                }
            ]      
        },
        { 
            "name": "AndysSecondRuleSet",
            "rules": [
                {
                    "name": "DROP_TABLE",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS cool"
                },
                {
                    "name": "DROP_TABLE_cool2",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS cool2"
                },
                {
                    "name": "Create_Table_cool",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE cool ( id INT, data VARCHAR(100));"
                },
                {
                    "name": "Create_Table_cool2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE cool2 (id INT, data VARCHAR(100), id2 INT, data2 VARCHAR(100))"
                },
                {
                    "name": "Populate_cool_1",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool VALUES ('1', 'dataone')"
                },
                {
                    "name": "Populate_cool_2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool VALUES ('2', 'datatwo')"
                },
                {
                    "name": "Select_From_Table_cool",
                    "class": "SQLQuery",
                    "rule": "SELECT id, data FROM cool WHERE id = 1;"
                },
                {
                    "name": "Select_From_Table_cool_2",
                    "class": "SQLQuery",
                    "rule": "SELECT id, data FROM cool WHERE id = 2"
                },
                {
                    "name": "Insert_Into_Cool2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool2 (id, data, id2, data2) VALUES (?,?,?,?)"
                }
            ]       
        },
        { 
            "name": "WaynesFirstRuleSet",
            "rules": [
                {
                    "name": "Create_Table",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE cool\n(\nid int, data VARCHAR(100)\n);"
                },
                {
                    "name": "Populate_Table",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool\nVALUES\n(1, dataone);"
                },
                {
                    "name": "Populate_Table_2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool\nVALUES\n(1, dataone);"
                }
            ]      
        },
        { 
            "name": "PrependJPJ",
            "rules": [
                {
                    "name": "Rule1",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 FROM DUAL"
                },
                {
                    "name": "Rule2",
                    "class": "SQLQuery",
                    "rule": "SELECT \"Andy\" FROM DUAL"
                },
                {
                    "name": "Rule3",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES(?,?)"
                }
            ]      
        },
        { 
            "name": "WaynesDemofilecabinet",
            "rules": [
                {
                    "name": "Create_Table_1",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE demo\n(\nfirst_name VARCHAR(25),\nlast_name VARCHAR(25),\ncity VARCHAR(20),\nstate VARCHAR(2),\nbirth DATE NOT NULL\n);"
                },
                {
                    "name": "Populate_value_1",
                    "class": "SQLQuery",
                    "rule": "SELECT \"Randy\", \"Smith\", \"Tampa\", \"FL\", \"2012-01-18\" FROM DUAL"
                },
                {
                    "name": "Insert_values_1",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO demo\nVALUES (\n?, ?, ?, ?, ?\n);"
                },
                {
                    "name": "Drop_Table",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS demo;"
                },
                {
                    "name": "Update_Table",
                    "class": "SQLQuery",
                    "rule": "UPDATE demo\nSET\ndate = \"2012-01-23\"\nWHERE date = \"2012-01-18\";"
                }
            ]     
        },
        { 
            "name": "Drink_InfoExercise1set",
            "rules": [
                {
                    "name": "drop_output_drinks_table",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS output_drinks;"
                },
                {
                    "name": "create_output_drinks_table",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE output_drinks\n(\nname VARCHAR(25),\ncalcost VARCHAR(5)\n);"
                },
                {
                    "name": "query_results",
                    "class": "SQLQuery",
                    "rule": "SELECT drink_name, ROUND(calories/cost, 2) AS calcost FROM drink_info"
                },
                {
                    "name": "output_to_output_drinks",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO output_drinks\nVALUES (\n?, ?\n);"
                }
            ]     
        },
        {   
            "name": "Drink_InfoExercise2set",
            "rules": [
                {
                    "name": "drop_table_output_drinks2",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS output_drinks2;"
                },
                {
                    "name": "create_table_output_drinks2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE output_drinks2\n(\ndrink_name VARCHAR(25),\ncal_carbs VARCHAR(20)\n);"
                },
                {
                    "name": "query_drink_info",
                    "class": "SQLQuery",
                    "rule": "SELECT drink_name, ROUND(calories/carbs, 2) AS cal_carbs FROM drink_info;"
                },
                {
                    "name": "output_to_output_drinks2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO output_drinks2\nVALUES (\n?, ?\n);"
                }                
            ]   
        },
        {   
            "name": "AndysLoop",
            "rules": [
                {
                    "name": "Drop_Tables_Created",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS loop1, loop2"
                },
                {
                    "name": "Create_Loop_Table_1",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE loop1 (id INT, dataone VARCHAR(20), datatwo VARCHAR(20))"
                },
                {
                    "name": "Create_Loop_Table_2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE loop2 (id INT, dataone VARCHAR(20), datatwo VARCHAR(20))"
                },
                {
                    "name": "Populate_Loop_Table_1",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO loop1 VALUES (1,'a','b'),(2,'c','d'),(3,'e','f'),(4,'g','h'),(5,'i','j'),(6,'k','l')"
                },
                {
                    "name": "Select_where_id_lt_4",
                    "class": "SQLQuery",
                    "rule": "SELECT id, dataone, datatwo FROM loop1 where id < 4"
                },
                {
                    "name": "Populate_Loop_Table_2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO loop2 VALUES (?,?,?)"
                }
            ]      
        },
        {   
            "name": "Drink_infoexerciseset3",
            "rules": [
                {
                    "name": "DROP_TABLE",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS output_drinks3;"
                },
                {
                    "name": "CREATE_TABLE",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE output_drinks3\n(\ndrink_name VARCHAR(30),\ncarbs_cost VARCHAR(30)\n);"
                },
                {
                    "name": "QUERY_drink_info_TABLE",
                    "class": "SQLQuery",
                    "rule": "SELECT drink_name, ROUND(carbs/cost, 2) AS carbs_cost FROM drink_info;"
                },
                {
                    "name": "OUTPUT_TO_NEW_TABLE",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO output_drinks3\nVALUES (\n?,?\n);"
                }
            ]      
        },
        {   
            "name": "AndysThirdRuleSet",
            "rules": [
                {
                    "name": "Create_Table_andy3",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE IF NOT EXISTS andy3 (column1 VARCHAR(20), column2 VARCHAR(20))"
                },
                {
                    "name": "Create_Table_andy4",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE IF NOT EXISTS andy4 (column1 VARCHAR(20), column2 VARCHAR(20))"
                },
                {
                    "name": "Populate_andy3",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy3 VALUES ('1', 'ONE'), ('2', 'two'), ('3', 'three'), ('4', 'four')"
                },
                {
                    "name": "SELECT_WHERE_column1_lt_4",
                    "class": "SQLQuery",
                    "rule": "SELECT column1, column2 FROM andy3 WHERE column1 < 4;"
                },
                {
                    "name": "Populate_andy4_With_Loop_Data",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy4 VALUES (?,?)"
                }                
            ]     
        },
        {   
            "name": "AndysSnippit",
            "rules": [
                {
                    "name": "AndysRuleChain",
                    "class": "Snippet"
                }
            ]    
        },
        {   
            "name": "GEMSLiteHourly",
            "rules": [
                {
                    "name": "GEMS_Recent_Active_Pop",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,p.emplid,\n  CASE\n    WHEN substr(n.national_id, 1, 3)  IN ('949') THEN 13\n    ELSE 1\n  END AS SSN_IDENTIFIER_TYPE\n  , trim(n.national_id) as ssn\n  , to_char(p.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n  , to_char(p.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n  , pde.sex\n  , CASE WHEN TRIM(na.name_title) IS NULL OR na.name_title IS NULL \n    THEN substr(trim(na.name_prefix),1,10)\n    ELSE substr(trim(na.name_title),1,10)\n    END as name_prefix \n  , substr(trim(na.first_name),1,100) as first_name\n  , substr(trim(na.middle_name),1,100) as middle_name\n  , substr(trim(na.last_name),1,100) as last_name\n  , substr(trim(na.name_suffix),1,10) as name_suffix\n  , 12 AS gems_source_id\n  from ps_person p\n  join ps_names na on na.emplid = p.emplid\n  left outer join (select pde1.emplid, pde1.lastupddttm, pde1.sex from ps_pers_data_effdt pde1 \n         where pde1.effdt = (select max(pde2.effdt) from ps_pers_data_effdt pde2 where pde2.emplid = pde1.emplid and pde2.effdt <= sysdate)\n       ) pde on pde.emplid = p.emplid\n  left outer join ps_pers_nid n on n.emplid = p.emplid and n.country = 'USA' and n.national_id_type = 'PR'\n  where SUBSTR(p.EMPLID,1,5) = '00000'  \n  AND REGEXP_LIKE(p.emplid, '^[[:digit:]]{11}$') \n  AND na.name_type = 'PRI'\n  AND na.effdt = (select max(na2.effdt) from ps_names na2 where na2.emplid = na.emplid and na2.name_type = na.name_type and na2.effdt <= sysdate)\n  AND TRIM(na.last_name) IS NOT NULL\n  AND ( p.birthdate IS NOT NULL OR TRIM(n.national_id) IS NOT NULL )\n and ((p.last_child_upddtm > (sysdate - 45) or na.lastupddttm > (sysdate - 45) or pde.lastupddttm > (sysdate - 45) or n.lastupddttm > (sysdate - 45))\n      or p.emplid in ('00000064435'))\n  ORDER BY p.emplid desc"
                },
                {
                    "name": "CIMS_PR_Identity_Merge",
                    "class": "SQLQuery",
                    "rule": "CALL cims_pr.idr_identity_merge(?,?,?,?,?,?,?,?,?,?,?,?,?)"
                },
                {
                    "name": "InsertConflicts",
                    "class": "SQLQuery",
                    "rule": "insert ignore into ctx_identifier_conflicts (\n   identifier_type_id,\n   identifier,\n   source_id,\n   current_identity_id,\n   conflicting_identity_id\n) select '42' as id_type_id, \n\t\t\t'DOB+LN+FN dup' as identifier, \n\t\t\tb1.source_id,\n\t\t\tb1.identity_id,\n\t\t\tb2.identity_id\nfrom idr_biodem b1\njoin idr_names na1 on na1.identity_id = b1.identity_id \njoin idr_identifiers e1 on e1.identity_id = b1.identity_id and e1.identifier_type_id not in ( 2, 4, 1, 13, 10, 11, 42 ) and e1.status = 'Active'\nleft outer join idr_identifiers u1 on u1.identity_id = b1.identity_id and u1.identifier_type_id = 2 and u1.status = 'Active'\nleft outer join ctx_identifier_conflicts ic on ic.current_identity_id = b1.identity_id and ic.identifier = 'DOB+LN+FN dup'\nleft outer join idr_identifiers ssn1 on ssn1.identity_id = b1.identity_id and ssn1.identifier_type_id = 1 and ssn1.status = 'Active'\njoin idr_biodem b2 on b2.date_of_birth = b1.date_of_birth and b2.identity_id <> b1.identity_id\njoin idr_names na2 on na2.identity_id = b2.identity_id and na2.lastname = na1.lastname and na2.firstname = na1.firstname\nleft outer join idr_identifiers ssn2 on ssn2.identity_id = b2.identity_id and ssn2.identifier_type_id = 1 and ssn2.status = 'Active'\nwhere (ssn1.identifier IS NULL or ssn2.identifier IS NULL)\nand u1.identity_id IS NULL\nand ic.current_identity_id IS NULL\nand na1.change_id = (select max(naX.change_id) from idr_names naX where naX.identity_id = na1.identity_id and naX.source_id = na1.source_id)\nand na2.change_id = (select max(naY.change_id) from idr_names naY where naY.identity_id = na2.identity_id and naY.source_id = na2.source_id)\ngroup by '42', \n\t\t\t'DOB+LN+FN dup', \n\t\t\tb1.source_id, \n\t\t\tb1.identity_id,\n\t\t\tb2.identity_id\nUNION\nselect '42' as id_type_id, \n\t\t\t'Multiple active SSNs' as identifier, \n\t\t\tssn1.source_id as source_id1,\n\t\t\tssn1.identity_id as ident1,\n\t\t\tssn2.identity_id as ident2\t\nfrom idr_identifiers ssn1\njoin idr_identifiers ssn2 on ssn2.identity_id = ssn1.identity_id \n\t\t\tand ssn2.identifier_type_id = 1\n\t\t\tand ssn2.status = 'Active'\n\t\t\tand ssn2.identifier <> ssn1.identifier\nleft outer join ctx_identifier_conflicts ic on ic.current_identity_id = ssn1.identity_id \n\t\t\tand ic.identifier = 'Multiple active SSNs'\nwhere ssn1.identifier_type_id = 1\nand ssn1.status = 'Active'\nand ic.current_identity_id IS NULL\ngroup by '42', \n\t\t\t'Multiple active SSNs', \n\t\t\tssn1.source_id,\n\t\t\tssn1.identity_id,\n\t\t\tssn2.identity_id\nUNION\nselect '42' as id_type_id, \n\t\t\t'Multiple active EmplIDs' as identifier, \n\t\t\te1.source_id as source_id1,\n\t\t\te1.identity_id as ident1,\n\t\t\te2.identity_id as ident2\nfrom idr_identifiers e1\njoin idr_identifiers e2 on e2.identity_id = e1.identity_id \n\t\t\tand e2.identifier_type_id = e1.identifier_type_id\n\t\t\tand e2.status = e1.status\n\t\t\tand e2.identifier <> e1.identifier\nleft outer join ctx_identifier_conflicts ic on ic.current_identity_id = e1.identity_id \n\t\t\tand ic.identifier = 'Multiple active EmplIDs'\nwhere e1.identifier_type_id = 3\nand e1.status = 'Active'\nand ic.current_identity_id IS NULL\ngroup by '42', \n\t\t\t'Multiple active EmplIDs', \n\t\t\te1.source_id,\n\t\t\te1.identity_id,\n\t\t\te2.identity_id"
                },
                {
                    "name": "ImportIdentityToBaggageClaimGEMS",
                    "class": "Snippet"
                },
                {
                    "name": "Reconcile",
                    "class": "DefinedService"
                },
                {
                    "name": "PrcPersonMerge",
                    "class": "NamedQuery"
                }
            ]    
        },
        {   
            "name": "AndysSnippit2",
            "rules": [
                {
                    "name": "SimpleSelect",
                    "class": "SQLQuery",
                    "rule": "SELECT * FROM andy"
                },
                {
                    "name": "AndysSnippit2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?, ?)"
                },
                {
                    "name": "AndysSnippit2",
                    "class": "Snippet"
                }
            ]     
        },
        {   
            "name": "AndysSnippit3",
            "rules": [
                {
                    "name": "AndysSnippit3_Select",
                    "class": "SQLQuery",
                    "rule": "SELECT * FROM andy"
                },
                {
                    "name": "AndysSnippit3",
                    "class": "Snippet"
                },
                {
                    "name": "InsertIntoTable",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?, ?)"
                }
            ]    
        },
        {   
            "name": "AndysSnippit4",
            "rules": [
                {
                    "name": "AndysSnippitInput",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy\nVALUES (?,?)"
                },
                {
                    "name": "AndysSnippitOutput",
                    "class": "SQLQuery",
                    "rule": "SELECT *\nFROM andy"
                },
                {
                    "name": "AndysSnippit4",
                    "class": "Snippet"
                },
                {
                    "name": "Select",
                    "class": "SQLQuery",
                    "rule": "SELECT *\nFROM andy"
                },
                {
                    "name": "Insert",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?, ?)"
                }
            ]     
        },
        {   
            "name": "ConvertNetidToMail",
            "rules": [
                {
                    "name": "SELECT_jabarthe",
                    "class": "SQLQuery",
                    "rule": "SELECT 'netid', 'mail', 'json', 'jabarthe'\nFROM DUAL"
                },
                {
                    "name": "WsConvertNetidToMail",
                    "class": "DefinedService",
                    "method": "GET",
                    "authType": "CAS",
                    "parse": "JSON",
                    "url": "https://netid.usf.edu/nams/ws_convert",
                    "user": "casuser",
                    "password": "caspassword"
                },
                {
                    "name": "INSERT_jabarthe",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO ConvertNetidToMail/nVALUES (?, ?, ?)"
                }                
            ]   
        },
        {   
            "name": "PR-Create-Stg_VIP",
            "rules": [
                {
                    "name": "SELECT_jabarthe",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE IF NOT EXISTS staging.stg_vip ( \n  vipid integer(11) NULL COMMENT 'Directly from NAMS VIP table',\n  vip_created_dt timestamp NULL COMMENT 'From NAMS VIP table',\n  vrs_status varchar(1) NULL COMMENT 'From NAMS VIP_RES_SET table',\n  raw_ssn integer(11) NULL COMMENT 'Directly from NAMS NAMES table',\n  id_ssn varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  biodem_dob date NULL COMMENT 'From NAMS VIP table for matching idr_biodem birthdate',\n  biodem_dod date NULL DEFAULT NULL COMMENT 'Not in NAMS',\n  biodem_gender varchar(1) NULL DEFAULT NULL COMMENT 'Not in NAMS',\n  raw_lname varchar(256) NULL COMMENT 'Directly from NAMS VIP table',\n  names_last varchar(100) NULL COMMENT 'For maching on idr_names',\n  raw_fname varchar(256) NULL COMMENT 'Directly from NAMS VIP table',\n  names_first varchar(100) NULL COMMENT 'For maching on idr_names',\n  raw_mname varchar(256) NULL COMMENT 'Directly from NAMS VIP table',\n  names_middle varchar(100) NULL COMMENT 'For maching on idr_names',\n  names_prefix varchar(10) NULL DEFAULT NULL COMMENT 'Not in NAMS',\n  raw_gen varchar(4) NULL COMMENT 'Directly from NAMS NAMES table',\n  names_suffix varchar(10) NULL COMMENT 'For maching on idr_names',\n  confid_ind varchar(1) NULL DEFAULT NULL COMMENT 'Copy from NAMS NAMES since not in VIP',\n  ethn_code varchar(2) NULL COMMENT 'Not in NAMS for VIPs',\n  citz_code varchar(2) NULL COMMENT 'Not in NAMS for VIPs',\n  raw_pidm integer(11) NULL COMMENT 'Directly from NAMS OASIS table',\n  id_pidm varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  raw_usfid varchar(9) NULL COMMENT 'Directly from NAMS OASIS table',\n  id_usfid varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  raw_emplid integer(11) NULL COMMENT 'Directly from NAMS GEMS table',\n  id_emplid varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  role_n_name varchar(50) NULL COMMENT 'Directly from NAMS NAMES and ROLES tables',\n  activity_date timestamp NOT NULL DEFAULT now() COMMENT 'When inserted',\n  comments254 varchar(255) NULL DEFAULT NULL COMMENT 'Placeholder if later need to pickup more columns from NAMS',\n  INDEX idx_vipid ( vipid ),\n  INDEX idx_id_ssn ( id_ssn ),\n  INDEX idx_id_pidm ( id_pidm ),\n  INDEX idx_id_usfid ( id_usfid ),\n  INDEX idx_id_emplid ( id_emplid )\n)"
                },
                {
                    "name": "PR-Trunc-Stg_VIP",
                    "class": "SQLQuery",
                    "rule": "TRUNCATE TABLE staging.stg_vip"
                },
                {
                    "name": "VIP-Get-Idents",
                    "class": "SQLQuery",
                    "rule": "SELECT DISTINCT\n\tv.vipid \n\t, v.created_dt\n\t, vrs.status\n\t, na.ssn \n  , CASE WHEN na.ssn > 999999 and na.ssn < 900000000 THEN lpad(na.ssn, 9, '0') ELSE NULL END \n\t, v.dob\n\t, v.lname \n  , CASE WHEN length( v.lname ) > 0 THEN TRIM(substr( v.lname, 1, 100 )) ELSE NULL END\n\t, v.fname \n  , CASE WHEN length( v.fname ) > 0 THEN TRIM(substr( v.fname, 1, 100 )) ELSE NULL END\n\t, v.mname \n  , CASE WHEN length( v.mname ) > 0 THEN TRIM(substr( v.mname, 1, 100 )) ELSE NULL END\n\t, na.gen \n  , CASE WHEN length( na.gen ) > 0 THEN TRIM(SUBSTR( na.gen, 1, 10 )) ELSE NULL END\n\t, CASE WHEN na.privacy = 255 THEN 'Y' ELSE 'N' END \n\t, o.pidm \n  , CASE WHEN o.pidm > 0 THEN o.pidm ELSE NULL END \n\t, o.usfid \n  , CASE WHEN length(o.usfid)=9 and substr(o.usfid,1,1)='U' THEN o.usfid ELSE NULL END\n\t, g.emplid \n  , CASE WHEN g.emplid > 0 and g.emplid < 1000000 THEN lpad(g.emplid, 11, '0') ELSE NULL END\n\t, concat(concat(na.role,'-'),r.name)\nFROM vip v\nLEFT OUTER JOIN vip_res_set vrs on vrs.vipid = v.vipid\nLEFT OUTER JOIN names na on na.badge = v.vipid\nLEFT OUTER JOIN vip_resource vr on vr.rid = vrs.rid \nLEFT OUTER JOIN oasis o on o.badge = na.badge\nLEFT OUTER JOIN gems g on g.badge = na.badge\nLEFT OUTER JOIN roles r on r.code = na.role\nWHERE ( vr.label = 'USFID'\nAND vrs.status = 'P' \n) OR v.vipid in ( 1798583, 1011799, 1319044, 1470331, 1662969 )\norder by v.created_dt"
                },
                {
                    "name": "PR-Insert-Stg_VIP",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO staging.stg_vip (\n  vipid,\n  vip_created_dt,\n  vrs_status,\n  raw_ssn,\n  id_ssn,\n  biodem_dob,\n  raw_lname,\n  names_last,\n  raw_fname,\n  names_first,\n  raw_mname,\n  names_middle,\n  raw_gen,\n  names_suffix,\n  confid_ind,\n  raw_pidm,\n  id_pidm,\n  raw_usfid,\n  id_usfid,\n  raw_emplid,\n  id_emplid,\n  role_n_name\n) VALUES (\n?, ?, ?, ?, ?, \n?, ?, ?, ?, ?, \n?, ?, ?, ?, ?, \n?, ?, ?, ?, ?, \n?, ? )"
                },
                {
                    "name": "PR-Inactivate-VIPID-SSN",
                    "class": "SQLQuery",
                    "rule": "SELECT ssn.source_id, ssn.identifier, ssn.identifier_type_id, 0\nFROM pro_identifiers vipid\nJOIN pro_identifiers ssn on ssn.person_id = vipid.person_id and ssn.identifier_type_id = 1 /*SSN*/ and \nssn.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nLEFT OUTER JOIN staging.stg_vip sv on sv.vipid = vipid.identifier and sv.id_ssn = ssn.identifier\nWHERE vipid.identifier_type_id = 18\nAND vipid.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nAND ssn.source_id = vipid.source_id\nAND sv.vipid IS NULL \nAND 0 < (select count(*) from staging.stg_vip)"
                },
                {
                    "name": "ProIdentifierStatusSet",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "PR-Inactivate-VIPID-HRPRNs",
                    "class": "SQLQuery",
                    "rule": "SELECT hrprn.source_id, hrprn.identifier, hrprn.identifier_type_id, 0\nFROM pro_identifiers vipid\nJOIN pro_identifiers hrprn on hrprn.person_id = vipid.person_id and hrprn.identifier_type_id = 13 /*hrprn*/ and \nhrprn.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nLEFT OUTER JOIN staging.stg_vip sv on sv.vipid = vipid.identifier and sv.id_ssn = hrprn.identifier\nWHERE vipid.identifier_type_id = 18\nAND vipid.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nAND hrprn.source_id = vipid.source_id\nAND sv.vipid IS NULL \nAND 0 < (select count(*) from staging.stg_vip)"
                },
                {
                    "name": "PR-Inactivate-VIPIDs",
                    "class": "SQLQuery",
                    "rule": "SELECT vipid.source_id, vipid.identifier, vipid.identifier_type_id, 0\nFROM pro_identifiers vipid\nLEFT OUTER JOIN staging.stg_vip sv on sv.vipid = vipid.identifier\nWHERE vipid.identifier_type_id = 18\nAND vipid.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nAND sv.vipid IS NULL \nAND 0 < (select count(*) from staging.stg_vip)"
                },
                {
                    "name": "PR-IdentMergeofVIPs",
                    "class": "SQLQuery",
                    "rule": "TRUNCATE TABLE staging.stg_vip"
                }
                
                
                
                
27	9	PR-IdentMergeofVIPs		1	SELECT DISTINCT 18 as vipid_identifier_type\n       , sv.vipid\n       , CASE WHEN substr(sv.id_ssn, 1, 3) IN ('949') THEN 13 ELSE 1 END as ssn_identifier_type\n       , sv.id_ssn\n       , sv.biodem_dob\n       , sv.biodem_dod\n       , sv.biodem_gender\n       , sv.names_prefix\n       , sv.names_first\n       , sv.names_middle\n       , sv.names_last\n       , sv.names_suffix\n       , 17 as vip_source_id\nFROM staging.stg_vip sv\nWHERE sv.vipid IS NOT NULL\nAND sv.names_first IS NOT NULL\nAND sv.names_last IS NOT NULL\nAND ( sv.biodem_dob IS NOT NULL or sv.id_ssn IS NOT NULL )\nORDER BY sv.vipid DESC	
27	10	CIMS_PR Identity Merge		1	CALL cims_pr.idr_identity_merge(?,?,?,?,?,?,?,?,?,?,?,?,?)	
27	11	PR-AddVIPConflicts		1	insert ignore into ctx_identifier_conflicts (
   identifier_type_id,
   identifier,
   source_id,
   current_identity_id,
   conflicting_identity_id
) select '42', 
      concat(sv.id_usfid, ' USFID only in VIP'),
      min(id.source_id),
      id.identity_id,
      id.identity_id
from idr_identifiers id
join staging.stg_vip sv on sv.vipid = id.identifier
left outer join idr_identifiers usfid on usfid.identity_id = id.identity_id and usfid.identifier_type_id = 2 /*USFID*/ and usfid.status = 'Active'
left outer join idr_identifiers usfid2 on usfid2.identifier = sv.id_usfid and usfid2.identifier_type_id = 2 /*USFID*/ and usfid2.status = 'Active'
where id.identifier_type_id = 18 /* VIPID */
and id.status = 'Active'
and usfid.identifier IS NULL
and sv.id_usfid IS NOT NULL
and usfid2.identifier IS NOT NULL
and not exists (select 'alreadythere' from ctx_identifier_conflicts ic 
      where ic.identifier = concat(sv.id_usfid, ' USFID only in VIP')
      and ic.current_identity_id = id.identity_id 
          )
group by '42', 
      concat(sv.id_usfid, ' USFID only in VIP'),
      id.identity_id,
      id.identity_id
UNION
select '42', 
      concat(sv.id_emplid, ' EmplID only in VIP'), 
      min(id.source_id),
      id.identity_id,
      id.identity_id
from idr_identifiers id
join stg_vip sv on sv.vipid = id.identifier 
left outer join idr_identifiers emplid on emplid.identity_id = id.identity_id and emplid.identifier_type_id = 3 and emplid.status = 'Active'
left outer join idr_identifiers emplid2 on emplid2.identifier = sv.id_emplid and emplid2.identifier_type_id = 3 and emplid2.status = 'Active'
where id.identifier_type_id = 18 /* VIPID */
and id.status = 'Active'
and sv.id_emplid IS NOT NULL
and emplid2.identifier IS NOT NULL
and (emplid.identifier IS NULL or emplid.identifier <> sv.id_emplid)
and not exists (select 'alreadythere' from ctx_identifier_conflicts ic 
      where ic.identifier = concat(sv.id_emplid, ' EmplID only in VIP')
      and ic.current_identity_id = id.identity_id 
          )
group by '42', 
      concat(sv.id_emplid, ' EmplID only in VIP'), 
      id.identity_id,
      id.identity_id	
27	12	InsertConflicts		1	insert ignore into ctx_identifier_conflicts (
   identifier_type_id,
   identifier,
   source_id,
   current_identity_id,
   conflicting_identity_id
) select '42' as id_type_id, 
			'DOB+LN+FN dup' as identifier, 
			b1.source_id,
			b1.identity_id,
			b2.identity_id
from idr_biodem b1
join idr_names na1 on na1.identity_id = b1.identity_id 
join idr_identifiers e1 on e1.identity_id = b1.identity_id and e1.identifier_type_id not in ( 2, 4, 1, 13, 10, 11, 42 ) and e1.status = 'Active'
left outer join idr_identifiers u1 on u1.identity_id = b1.identity_id and u1.identifier_type_id = 2 and u1.status = 'Active'
left outer join ctx_identifier_conflicts ic on ic.current_identity_id = b1.identity_id and ic.identifier = 'DOB+LN+FN dup'
left outer join idr_identifiers ssn1 on ssn1.identity_id = b1.identity_id and ssn1.identifier_type_id = 1 and ssn1.status = 'Active'
join idr_biodem b2 on b2.date_of_birth = b1.date_of_birth and b2.identity_id <> b1.identity_id
join idr_names na2 on na2.identity_id = b2.identity_id and na2.lastname = na1.lastname and na2.firstname = na1.firstname
left outer join idr_identifiers ssn2 on ssn2.identity_id = b2.identity_id and ssn2.identifier_type_id = 1 and ssn2.status = 'Active'
where (ssn1.identifier IS NULL or ssn2.identifier IS NULL)
and u1.identity_id IS NULL
and ic.current_identity_id IS NULL
and na1.change_id = (select max(naX.change_id) from idr_names naX where naX.identity_id = na1.identity_id and naX.source_id = na1.source_id)
and na2.change_id = (select max(naY.change_id) from idr_names naY where naY.identity_id = na2.identity_id and naY.source_id = na2.source_id)
group by '42', 
			'DOB+LN+FN dup', 
			b1.source_id, 
			b1.identity_id,
			b2.identity_id
UNION
select '42' as id_type_id, 
			'Multiple active SSNs' as identifier, 
			ssn1.source_id as source_id1,
			ssn1.identity_id as ident1,
			ssn2.identity_id as ident2	
from idr_identifiers ssn1
join idr_identifiers ssn2 on ssn2.identity_id = ssn1.identity_id 
			and ssn2.identifier_type_id = 1
			and ssn2.status = 'Active'
			and ssn2.identifier <> ssn1.identifier
left outer join ctx_identifier_conflicts ic on ic.current_identity_id = ssn1.identity_id 
			and ic.identifier = 'Multiple active SSNs'
where ssn1.identifier_type_id = 1
and ssn1.status = 'Active'
and ic.current_identity_id IS NULL
group by '42', 
			'Multiple active SSNs', 
			ssn1.source_id,
			ssn1.identity_id,
			ssn2.identity_id
UNION
select '42' as id_type_id, 
			'Multiple active EmplIDs' as identifier, 
			e1.source_id as source_id1,
			e1.identity_id as ident1,
			e2.identity_id as ident2
from idr_identifiers e1
join idr_identifiers e2 on e2.identity_id = e1.identity_id 
			and e2.identifier_type_id = e1.identifier_type_id
			and e2.status = e1.status
			and e2.identifier <> e1.identifier
left outer join ctx_identifier_conflicts ic on ic.current_identity_id = e1.identity_id 
			and ic.identifier = 'Multiple active EmplIDs'
where e1.identifier_type_id = 3
and e1.status = 'Active'
and ic.current_identity_id IS NULL
group by '42', 
			'Multiple active EmplIDs', 
			e1.source_id,
			e1.identity_id,
			e2.identity_id	
27	13	ImportIdentityToBaggageClaimVIP Snippit		1	DEFINEDSERVICE:ImportIdentityToBaggageClaimVIP	
                
            ]     
        },
        {   
            "name": "OASISLiteHourlyModified",
            "rules": [
                
            ]   
        },
        {   
            "name": "OASISLiteHourly1_5",
            "rules": [
                
            ]    
        },
        {   
            "name": "ToBeDeleted",
            "rules": [
                
            ]     
        },
        {   
            "name": "HSCDW_Import2x",
            "rules": [
                
            ]     
        },
        {   
            "name": "AddConflicts2x",
            "rules": [
                
            ]   
        },
        {   
            "name": "OASIS_Import2x",
            "rules": [
                
            ]   
        },
        {   
            "name": "OasisImportSourceandCurrentTimestamp",
            "rules": [
                
            ]   
        },
        {   
            "name": "Oasisp-create2x",
            "rules": [
                
            ]     
        },
        {   
            "name": "PeopleAdminBCToGEMS_2x",
            "rules": [
                
            ]   
        }
    ]
}

	at grails.converters.JSON.parse(JSON.java:281)
	... 9 more
2013-05-09 11:55:57,734 [localhost-startStop-1] ERROR StackTrace  - Full Stack Trace:
org.codehaus.groovy.grails.web.converters.exceptions.ConverterException: Error parsing JSON
	at grails.converters.JSON.parse(JSON.java:290)
	at BootStrap$_closure1.doCall(BootStrap.groovy:28)
	at grails.util.Environment.evaluateEnvironmentSpecificBlock(Environment.java:308)
	at grails.util.Environment.executeForEnvironment(Environment.java:301)
	at grails.util.Environment.executeForCurrentEnvironment(Environment.java:277)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
	at java.lang.Thread.run(Thread.java:680)
Caused by: org.codehaus.groovy.grails.web.json.JSONException: Expected a ',' or ']' at character 59794 of {    
    "ruleSets": [
        {   
            "name": "debugRuleSet",
            "rules": [
                {
                    "name": "GEMS_test_rule_2",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "GEMS_test_rule",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "GEMS_test_rule_again",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "GEMS_test_rule_again_2",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "Dummy_Insert_Input_Reorder",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO test_dump_min (identifier_type_id,identifier,ssn_identifier_type_id,ssn,birthdate,deathdate,sex,prefix,firstName,middleName,lastName,suffix,source_id) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)"
                },
                {
                    "name": "Dummy_INSERT",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO test_dump (\n\tidentifier_type_id,\n\tidentifier,\n\tssn_identifier_type_id,\n\tssn,\n\tbirthdate,\n\tdeathdate,\n\tsex,prefix,\n\tfirstName,\n\tmiddleName,\n\tlastName,\n\tsuffix,\n\tsource_id) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)"
                },
                {
                    "name": "This_is_a_bum_rule",
                    "class": "SQLQuery",
                    "rule": "SELECT '1' FROM DUAL"
                },
                {
                    "name": "This_is_a_bum_PA_rule",
                    "class": "SQLQuery",
                    "rule": "SELECT loaded_dt FROM people_admin"
                },
                {
                    "name": "BC_Select",
                    "class": "SQLQuery",
                    "rule": "SELECT ssn,birthdate,firstName,lastName FROM test_dump_min"
                },
                {
                    "name": "Select_Test",
                    "class": "SQLQuery",
                    "rule": "SELECT 'James','Patrick','Jones' FROM DUAL"
                },
                {
                    "name": "Select_Prepare",
                    "class": "SQLQuery",
                    "rule": "SELECT ?,?,? FROM DUAL"
                },
                {
                    "name": "Append_Wilhoit",
                    "class": "SQLQuery",
                    "rule": "SELECT 'Wilhoit' FROM DUAL"
                },
                {
                    "name": "DROP_TABLE_cool2",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE cool2"
                },
                {
                    "name": "adsf",
                    "class": "SQLQuery",
                    "rule": "SELECT *\nFROM Andy"
                }
                
            ]
        },
        {
            "name": "GEMS_Silver_Rule_Set_2_x",
            "rules": [
                {
                    "name": "GEMS_Silver_Rule_Population",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN TRIM(pd.name_title) IS NULL OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n        AND SUBSTR(pd.EMPLID,1,5) = '00000'  \n        AND REGEXP_LIKE(pd.emplid, '^[[:digit:]]{11}$') \n\tORDER BY pd.emplid desc"
                },
                {
                    "name": "Update_Active_Status_Emplid",
                    "class": "SQLQuery",
                    "rule": "SELECT identifier\n\tFROM pro_identifiers \n\tWHERE identifier_type_id=3 AND source_id=12\n\tORDER BY identifier"
                },
                {
                    "name": "Update_Active_Status_SSN_GEMS",
                    "class": "SQLQuery",
                    "rule": "SELECT identifier\n\tFROM pro_identifiers \n\tWHERE identifier_type_id=1 AND source_id =12\n\tORDER BY identifier"
                },
                {
                    "name": "GEMS_HRPR_Iterator",
                    "class": "SQLQuery",
                    "rule": "SELECT identifier\n\tFROM pro_identifiers \n\tWHERE identifier_type_id=13 AND source_id =12\n\tORDER BY identifier"
                },
                {
                    "name": "GEMS_SSNExistTest",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 AS SSN_IDENTIFIER_TYPE,COUNT(*) AS GEMS_SSNCount\n\tFROM ps_pers_nid n\n\tWHERE n.country(+) = 'USA'\n\tAND n.national_id_type(+) = 'PR'\n\tAND trim(n.national_id) = ?"
                },
                {
                    "name": "GEMS_HRPRExistTest",
                    "class": "SQLQuery",
                    "rule": "SELECT 13 AS HRPR_IDENTIFIER_TYPE,COUNT(*) AS HRPRCount\n\tFROM ps_pers_nid n\n\tWHERE n.country(+) = 'USA'\n\tAND n.national_id_type(+) = 'PR'\n\tAND trim(n.national_id) = ?"
                },
                {
                    "name": "Emplid_Exist_Test",
                    "class": "SQLQuery",
                    "rule": "SELECT 3 AS EMPL_IDENTIFIER_TYPE, COUNT(*) AS EmplidCount\n\tFROM ps_personal_data pd\n\tWHERE pd.emplid=?"
                },
                {
                    "name": "Set_Empl_Active_Flag",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET status='Active',\n\tsource_id=?\n\tWHERE identifier=?\n\tAND identifier_type_id=?\n\tAND identifier_status_id != (\n\t\tSELECT identifier_status_id \n\t\t\tFROM identifier_statuses \n\t\t\tWHERE `name`='Active'\n\t)\n\tAND ? > 0"
                },
                {
                    "name": "Set_Empl_Inactive_Flag",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET status='Inactive'\n\tWHERE source_id=?\n\tAND identifier=?\n\tAND identifier_type_id=?\n\tAND identifier_status_id != (\n\t\tSELECT identifier_status_id \n\t\t\tFROM identifier_statuses \n\t\t\tWHERE `name`='Inactive'\n\t)\n\tAND ? < 1"
                },
                {
                    "name": "Add_GEMS_Source",
                    "class": "SQLQuery",
                    "rule": "SELECT 14 AS source_id FROM DUAL"
                },
                {
                    "name": "BaggageClaimSORCreate",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE `incomming_sor_records` (\n  `primary_identifier_type_id` bigint(18) unsigned DEFAULT NULL,\n  `primary_identifier` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `secondary_identifier_type_id` bigint(18) unsigned DEFAULT NULL,\n  `secondary_identifier` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `birthday` date DEFAULT NULL,\n  `deathday` date DEFAULT NULL,\n  `gender` varchar(10) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `prefix` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `firstname` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `middlename` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `lastname` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `suffix` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `baggage_source_id` bigint(18) unsigned DEFAULT NULL,\n  `status` enum('Valid','Invalid') COLLATE utf8_unicode_ci DEFAULT NULL,\n  KEY `incomming_sor_records_baggage_source_id` (`baggage_source_id`),\n  CONSTRAINT `incomming_sor_records_baggage_source_id` FOREIGN KEY (`baggage_source_id`) REFERENCES `baggage_sources` (`baggage_source_id`) ON DELETE SET NULL ON UPDATE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;"
                },
                {
                    "name": "Add_new_BC_Source",
                    "class": "SQLQuery",
                    "rule": "INSERT IGNORE INTO baggage_sources (baggage_source_id,cims_pr_source_id,name,format) \nVALUES ('5','14','GEMS-DATABASE','DATABASE')"
                },
                {
                    "name": "Update_SOR",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO incomming_sor_records\n(primary_identifier_type_id,primary_identifier,secondary_identifier_type_id,\nsecondary_identifier,birthday,deathday,gender,prefix,firstname,middlename,lastname,\nsuffix,baggage_source_id,status) VALUES\n(?,?,?,?,?,?,?,?,?,?,?,?,5,'Valid')"
                },
                {
                    "name": "GEMS_Recent_Activ_Pop",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN TRIM(pd.name_title) IS NULL OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n        AND SUBSTR(pd.EMPLID,1,5) = '00000'  \n        AND REGEXP_LIKE(pd.emplid, '^[[:digit:]]{11}$') \nand (pd.lastupddttm > (sysdate - 1) or n.lastupddttm > (sysdate - 1))\n\tORDER BY pd.emplid desc"
                },
                {
                    "name": "Reassemble_Params",
                    "class": "SQLQuery",
                    "rule": "SELECT idinfo.source_id,idinfo.identifier_type_id,idinfo.identifier,idinfo.source_id\n\tFROM\n\t\t(\n\t\t\tSELECT \n\t\t\t\t? AS identifier_type_id,\n\t\t\t\t? AS identifier,\n\t\t\t\t? AS ssn_identifier_type_id,\n\t\t\t\t? AS ssn,\n\t\t\t\t? AS birthdate,\n\t\t\t\t? AS deathdate,\n\t\t\t\t? AS gender,\n\t\t\t\t? AS prefix,\n\t\t\t\t? AS first_name,\n\t\t\t\t? AS middle_name,\n\t\t\t\t? AS last_name,\n\t\t\t\t? AS suffix,\n\t\t\t\t? AS source_id\n\t\t\tFROM DUAL\n\t\t) AS idinfo"
                },
                {
                    "name": "Set_the_authoritative_source",
                    "class": "SQLQuery",
                    "rule": "UPDATE idr_identifiers\n\tSET status='Active' AND source_id=?\n\tWHERE identifier_type_id=? AND identifier=? AND source_id != ?"
                },
                {
                    "name": "Set_the_Gems_import_source",
                    "class": "SQLQuery",
                    "rule": "SELECT 5 AS importSourceId FROM DUAL"
                }
            ]  
        },
        {
            "name": "CIMS_PRStoredProcedures2x",
            "rules": [
                {
                    "name": "PrsBiodemUpdater",
                    "class": "NamedQuery",
                    "rule": "personId,birthday,deathday,gender,sourceId"
                },
                {
                    "name": "PrsNamesUpdater",
                    "class": "NamedQuery",
                    "rule": "personId,prefix,firstname,middlename,lastname,suffix,sourceId"
                },
                {
                    "name": "PrcPersonSilverRuleCheck",
                    "class": "NamedQuery",
                    "rule": "ssn,birthday,firstname,lastname"
                },
                {
                    "name": "PrsBiodemValidPastDate",
                    "class": "NamedQuery",
                    "rule": "dateString"
                },
                {
                    "name": "PrcPersonByIdentifier",
                    "class": "NamedQuery",
                    "rule": "identifierTypeId,identifier"
                },
                {
                    "name": "PrcPersonsCreateNew",
                    "class": "NamedQuery",
                    "rule": "sourceId"
                },
                {
                    "name": "PrcPersonMerge",
                    "class": "NamedQuery",
                    "rule": "primaryIdentifierTypeId, primaryIdentifier,secondaryIdentifierTypeId,secondaryIdentifier,birthday,deathday,gender,prefix,firstname,middlename,lastname,suffix,sourceId"
                },
                {
                    "name": "ProIdentifierStatusSet",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "ImpRepositoryIdentityNew",
                    "class": "SQLQuery",
                    "rule": "SELECT imp_repository_identity_new(?) FROM DUAL"
                },
                {
                    "name": "ImpRepositoryMerge",
                    "class": "NamedQuery",
                    "rule": "importSourceId,firstname,middlename,lastname,gender,birthday,unparsedLine"
                }
            ]   
        },
        {
            "name": "CIMS_PRBaggageClaimMerge",
            "rules": [
                {
                    "name": "PeopleAdmin_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT loaded_dt,\n\thpid AS HPID,\n\tIF(ssn = 'No Response','',REPLACE(ssn,'-','')) AS SSN,\n\tIF(LEFT(UPPER(usfid),1) != 'U','',IF(LENGTH(usfid) = 9,usfid,'')) AS USFID,\n\tIF(emplid = 'No Response','',LPAD(TRIM(emplid),11,'0')) AS EMPLID,\n\tIF(fname = 'No Response','',TRIM(fname)) AS FIRSTNAME,\n\tIF(mname = 'No Response','',TRIM(mname)) AS MIDDLENAME,\n\tIF(lname = 'No Response','',TRIM(lname)) AS LASTNAME,\n\tIF(gender IN('M','F'),gender,'') AS GENDER,\n\tIF(dob = 'No Response',NULL,TRIM(dob)) AS BIRTHDAY,\n\tRTRIM(baggage) AS BAGGAGE\n\tFROM nams.people_admin\n\tWHERE DATE(loaded_dt) != '0000-00-00'"
                },
                {
                    "name": "CardID_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT to_char(ID_ISSUE_DATE,'YYYY-MM-DD') AS IMPORT_DATE,\n\tID_CARD_NUMBER,\n\tNAME_FIRST AS FIRSTNAME,\n\tNAME_MIDDLE AS MIDDLENAME,\n\tNAME_LAST AS LASTNAME,\n\tto_char(BIRTH_DATE,'YYYY-MM-DD') AS BIRTHDAY\n\tFROM ID WHERE ROWNUM < 50"
                },
                {
                    "name": "NAMS_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT \n\tNOW() AS IMPORT_DATE,\n\tn.badge AS NAMSID,\n\tn.fname AS FIRSTNAME,\n\tn.mname AS MIDDLENAME,\n\tn.lname AS LASTNAME,\n\tSTR_TO_DATE(CONCAT('',\n\t\tIF(\n\t\t\t((SELECT COUNT(*) FROM bdays WHERE badge=n.badge AND bday > 0 ORDER BY bdayid DESC LIMIT 1) < 1),\n\t\t\tn.bday,\n\t\t\t(SELECT bday FROM bdays WHERE badge=n.badge AND bday > 0 ORDER BY bdayid DESC LIMIT 1)\n\t\t) \n\t) ,'%Y%m%d') AS BIRTHDAY\n\tFROM names n\n\tWHERE \n\t(SELECT COUNT(*) FROM oasis WHERE badge=n.badge LIMIT 1) > 0 \n\tOR\n\t(SELECT COUNT(*) FROM gems WHERE badge=n.badge LIMIT 1) > 0"
                }
            ]   
        },
        {
            "name": "CIMS_PRBaggageClaimMergeOtherRules",
            "rules": [
                {
                    "name": "People_Admin_Request",
                    "class": "SQLQuery",
                    "rule": "SELECT 2 AS importSourceId,0 AS reconcile FROM DUAL;"
                },
                {
                    "name": "People_Admin_Request",
                    "class": "SQLQuery",
                    "rule": "SELECT 2 AS importSourceId,0 AS reconcile FROM DUAL;"
                },
                {
                    "name": "ImportToBaggageClaim",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "Dummy_ParamCollector_for_ImportToBaggageClaim_Defined_Service_loop",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS baggageClaimIdentityId, CAST(? AS UNSIGNED) AS personId, ? AS importSourceId, ? AS sourceId, ? AS baggageClaimIdentityStatusId, ? AS firstName, ? AS middleName, ? AS lastName, ? AS gender, ? AS dateOfBirth"
                },
                {
                    "name": "AddToBaggageClaim",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "PeopleAdmin_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT \n\t2 AS importSourceId,\n\tIF(fname = 'No Response','',TRIM(fname)) AS FIRSTNAME,\n\tIF(mname = 'No Response','',TRIM(mname)) AS MIDDLENAME,\n\tIF(lname = 'No Response','',TRIM(lname)) AS LASTNAME,\n\tIF(gender IN('M','F'),gender,'') AS GENDER,\n\tIF(dob = 'No Response','',TRIM(REPLACE(dob,'/','-'))) AS BIRTHDAY,\n\tloaded_dt,\n\tCONCAT('[{\"identifier\":\"',hpid,'\",\"identifierType\":{\"identifierTypeId\":\"10\"}},{\"identifier\":\"',IF(ssn = 'No Response','',REPLACE(ssn,'-','')),'\",\"identifierType\":{\"identifierTypeId\":\"1\"}},{\"identifier\":\"',IF(LEFT(UPPER(usfid),1) != 'U','',IF(LENGTH(usfid) = 9,usfid,'')),'\",\"identifierType\":{\"identifierTypeId\":\"2\"}},{\"identifier\":\"',IF(emplid = 'No Response','',LPAD(TRIM(emplid),11,'0')),'\",\"identifierType\":{\"identifierTypeId\":\"3\"}}]') AS baggageClaimIdentifiers,\n\tRTRIM(baggage) AS BAGGAGE\n\tFROM nams.people_admin\n\tWHERE DATE(loaded_dt) != '0000-00-00' LIMIT 10"
                },
                {
                    "name": "Reconcile_Defined_Service",
                    "class": "DefinedService"
                },
                {
                    "name": "ImportIdentityToBaggageClaimPeopleAdmin",
                    "class": "DefinedService"
                },
                {
                    "name": "Prepend_PeopleAdmin_Source",
                    "class": "SQLQuery",
                    "rule": "SELECT 2 AS importSourceId FROM DUAL"
                },
                {
                    "name": "Prepend_Gems_Import_Source",
                    "class": "SQLQuery",
                    "rule": "SELECT 5 AS importSourceId FROM DUAL"
                },
                {
                    "name": "Prepend_Gems_Import_Source_and_Current_Timestamp",
                    "class": "SQLQuery",
                    "rule": "SELECT 5 AS importSourceId,NOW() AS importTimestamp,\"\" AS claimInfo FROM DUAL"
                },
                {
                    "name": "Prepend_VIP_Import_Source_and_Current_Timestamp",
                    "class": "SQLQuery",
                    "rule": "SELECT 8 AS importSourceId,NOW() AS importTimestamp FROM DUAL"
                },
                {
                    "name": "ImportIdentityToBaggageClaimHealth",
                    "class": "DefinedService"
                },
                {
                    "name": "ImportIdentityToBaggageClaimGEMS",
                    "class": "DefinedService"
                }
            ]    
        },
        {
            "name": "NamsDefinedServices",
            "rules": [
                {
                    "name": "NetIDToEMail_Defaults",
                    "class": "SQLQuery",
                    "rule": "SELECT 'netid' AS submit_type,'mail' AS return_type,'json' AS `return`,? AS `value` FROM DUAL"
                },
                {
                    "name": "WsConvertNetidToMail",
                    "class": "DefinedService"
                }
            ]     
        },
        { 
            "name": "UnumberDefinedServices",
            "rules": [
                {
                    "name": "Unumber_Defaults",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 AS personId,2 AS personAllocatedId,2 AS identifierTypeId, ? AS amount FROM DUAL"
                },
                {
                    "name": "ReallocatePoolIdentifiers",
                    "class": "DefinedService"
                }
            ]      
        },
        { 
            "name": "IdentityMergeRules",
            "rules": [
                {
                    "name": "Unumber_Defaults",
                    "class": "SQLQuery",
                    "rule": "SELECT \n? AS PrimaryIdentifierType,\n? AS PrimaryIdentifier,\n? AS SecondaryIdentifierType,\n? AS SecondaryIdentifier,\n? AS BirthDate,\n? AS DeathDate,\n? AS Gender,\n? AS Prefix,\n? AS FirstName,\n? AS MiddleName,\n? AS LastName,\n? AS Suffix,\n? AS SourceId\nFROM DUAL\t"
                },
                {
                    "name": "Set_Past_year_Limit",
                    "class": "SQLQuery",
                    "rule": "SELECT 150 AS maxyears FROM DUAL"
                },
                {
                    "name": "PrsBiodemValidPastDateLimit",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "PrsBiodemValidPastDate",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "FilterIdentifier",
                    "class": "DefinedService"
                },
                {
                    "name": "UniqueIdentifierMatch",
                    "class": "SQLQuery",
                    "rule": "SELECT foundUniquePerson.person_id AS personId,\n? AS PrimaryIdentifierType,\n? AS PrimaryIdentifier,\n? AS SecondaryIdentifierType,\n? AS SecondaryIdentifier,\n? AS BirthDate,\n? AS DeathDate,\n? AS Gender,\n? AS Prefix,\n? AS FirstName,\n? AS MiddleName,\n? AS LastName,\n? AS Suffix,\n? AS SourceId\nFROM (\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n\tUNION\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n) AS foundUniquePerson HAVING COUNT(*)=1"
                },
                {
                    "name": "ValidIdentfiersSet",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS person_id,\nidentifiers.identifier_type_id,\nidentifiers.identifier,\n? AS SourceId\nFROM (\n\tSELECT identifier_type_id,identifier FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0\n\tUNION\n\tSELECT identifier_type_id,identifier FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0\n) AS identifiers"
                },
                {
                    "name": "IdentifierSourceUpdate",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET source_id=?\n\tWHERE  source_id !=? AND identifier_type_id=? AND identifier=? AND person_id=?"
                },
                {
                    "name": "IdentifierReallocationUpdate",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET person_id = ?\n\tWHERE identifier_type_id=? AND identifier=? AND person_id !=? AND identifier_status_id != (SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active');"
                },
                {
                    "name": "IdentifierStatusUpdate",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET identifier_status_id = (SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active') AND merge_date=NOW()\n\tWHERE identifier_type_id=? AND identifier=? AND person_id=? AND identifier_status_id != (SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active');"
                },
                {
                    "name": "NameChangeDetection",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS prefix,? AS FirstName,? AS MiddleName,? AS LastName,? AS Suffix,? AS SourceId,? AS personId\nFROM DUAL WHERE \n(SELECT COUNT(*) FROM (\n\tSELECT prefix,firstname,middlename,lastname,suffix FROM prs_names WHERE source_id=? AND person_id=? ORDER BY last_changed DESC LIMIT 1\n) AS lastNameBySource\nWHERE prefix=? AND firstname=? AND middlename=? AND lastname=? AND suffix=?) < 1"
                },
                {
                    "name": "NameCreateNew",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO prs_names (prefix,firstname,middlename,lastname,suffix,source_id,person_id,last_changed) VALUES(?,?,?,?,?,?,?,NOW())"
                },
                {
                    "name": "BioDemChangeDetection",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS date_of_birth,? AS date_of_death,? AS gender,? AS SourceId,? AS PersonId\nFROM DUAL WHERE \n(SELECT COUNT(*) FROM (\n\tSELECT date_of_birth,date_of_death,gender FROM prs_biodem WHERE source_id=? AND person_id=? ORDER BY last_changed DESC LIMIT 1\n) AS lastNameBySource\nWHERE date_of_birth=? AND date_of_death=? AND gender=?) < 1"
                },
                {
                    "name": "BioDemCreateNew",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO prs_biodem (date_of_birth,date_of_death,gender,source_id,person_id,last_changed) VALUES(?,?,?,?,?,NOW())"
                },
                {
                    "name": "IdentifierNewDetection",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS identifier_type_id,? AS identifier,? AS sourceId,? AS personId\n\tFROM DUAL\n\tWHERE LENGTH(TRIM(?)) > 0 AND (SELECT COUNT(*) FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0) < 1"
                },
                {
                    "name": "IdentifierCreateNew",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO pro_identifiers (identifier_type_id,identifier,source_id,person_id,merge_date,identifier_status_id) VALUES(?,?,?,?,NOW(),(SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active'))"
                },
                {
                    "name": "EndLoop_Filler",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 FROM DUAL"
                },
                {
                    "name": "NoUniqueIdentifierCheck",
                    "class": "SQLQuery",
                    "rule": "SELECT \n? AS PrimaryIdentifierType,\n? AS PrimaryIdentifier,\n? AS SecondaryIdentifierType,\n? AS SecondaryIdentifier,\n? AS BirthDate,\n? AS DeathDate,\n? AS Gender,\n? AS Prefix,\n? AS FirstName,\n? AS MiddleName,\n? AS LastName,\n? AS Suffix,\n? AS SourceId\nFROM DUAL\nWHERE\n(SELECT COUNT(*) FROM\n(\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n\tUNION\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n) AS foundUniquePerson) !=1"
                }
            ]     
        },
        { 
            "name": "Snippets",
            "rules": [
                {
                    "name": "IdentityMergeChainDualIdentifiers",
                    "class": "Snippet"
                }
            ]      
        },
        { 
            "name": "AndysRuleSet",
            "rules": [
                {
                    "name": "Create_Table",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE andy \n(\nid INT,\ndata VARCHAR(100)\n);"
                },
                {
                    "name": "Create_Table_2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE andy2\n(\nid INT,\ndata VARCHAR(100),\ndata2 VARCHAR(100)\n);"
                },
                {
                    "name": "Populate",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES ('1', 'Andy1');"
                },
                {
                    "name": "Populate2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES ('2', 'Andy2');"
                },
                {
                    "name": "Populate4",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy2 VALUES (?,?,CONCAT(?,?));"
                },
                {
                    "name": "SELECT_FROM_DUAL",
                    "class": "SQLQuery",
                    "rule": "Select \"3\", \"Andy4\" FROM DUAL"
                },
                {
                    "name": "Populate3",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?,?);"
                },
                {
                    "name": "loop",
                    "class": "SQLQuery",
                    "rule": "SELECT id, data FROM andy"
                }
            ]      
        },
        { 
            "name": "AndysSecondRuleSet",
            "rules": [
                {
                    "name": "DROP_TABLE",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS cool"
                },
                {
                    "name": "DROP_TABLE_cool2",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS cool2"
                },
                {
                    "name": "Create_Table_cool",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE cool ( id INT, data VARCHAR(100));"
                },
                {
                    "name": "Create_Table_cool2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE cool2 (id INT, data VARCHAR(100), id2 INT, data2 VARCHAR(100))"
                },
                {
                    "name": "Populate_cool_1",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool VALUES ('1', 'dataone')"
                },
                {
                    "name": "Populate_cool_2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool VALUES ('2', 'datatwo')"
                },
                {
                    "name": "Select_From_Table_cool",
                    "class": "SQLQuery",
                    "rule": "SELECT id, data FROM cool WHERE id = 1;"
                },
                {
                    "name": "Select_From_Table_cool_2",
                    "class": "SQLQuery",
                    "rule": "SELECT id, data FROM cool WHERE id = 2"
                },
                {
                    "name": "Insert_Into_Cool2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool2 (id, data, id2, data2) VALUES (?,?,?,?)"
                }
            ]       
        },
        { 
            "name": "WaynesFirstRuleSet",
            "rules": [
                {
                    "name": "Create_Table",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE cool\n(\nid int, data VARCHAR(100)\n);"
                },
                {
                    "name": "Populate_Table",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool\nVALUES\n(1, dataone);"
                },
                {
                    "name": "Populate_Table_2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool\nVALUES\n(1, dataone);"
                }
            ]      
        },
        { 
            "name": "PrependJPJ",
            "rules": [
                {
                    "name": "Rule1",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 FROM DUAL"
                },
                {
                    "name": "Rule2",
                    "class": "SQLQuery",
                    "rule": "SELECT \"Andy\" FROM DUAL"
                },
                {
                    "name": "Rule3",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES(?,?)"
                }
            ]      
        },
        { 
            "name": "WaynesDemofilecabinet",
            "rules": [
                {
                    "name": "Create_Table_1",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE demo\n(\nfirst_name VARCHAR(25),\nlast_name VARCHAR(25),\ncity VARCHAR(20),\nstate VARCHAR(2),\nbirth DATE NOT NULL\n);"
                },
                {
                    "name": "Populate_value_1",
                    "class": "SQLQuery",
                    "rule": "SELECT \"Randy\", \"Smith\", \"Tampa\", \"FL\", \"2012-01-18\" FROM DUAL"
                },
                {
                    "name": "Insert_values_1",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO demo\nVALUES (\n?, ?, ?, ?, ?\n);"
                },
                {
                    "name": "Drop_Table",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS demo;"
                },
                {
                    "name": "Update_Table",
                    "class": "SQLQuery",
                    "rule": "UPDATE demo\nSET\ndate = \"2012-01-23\"\nWHERE date = \"2012-01-18\";"
                }
            ]     
        },
        { 
            "name": "Drink_InfoExercise1set",
            "rules": [
                {
                    "name": "drop_output_drinks_table",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS output_drinks;"
                },
                {
                    "name": "create_output_drinks_table",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE output_drinks\n(\nname VARCHAR(25),\ncalcost VARCHAR(5)\n);"
                },
                {
                    "name": "query_results",
                    "class": "SQLQuery",
                    "rule": "SELECT drink_name, ROUND(calories/cost, 2) AS calcost FROM drink_info"
                },
                {
                    "name": "output_to_output_drinks",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO output_drinks\nVALUES (\n?, ?\n);"
                }
            ]     
        },
        {   
            "name": "Drink_InfoExercise2set",
            "rules": [
                {
                    "name": "drop_table_output_drinks2",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS output_drinks2;"
                },
                {
                    "name": "create_table_output_drinks2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE output_drinks2\n(\ndrink_name VARCHAR(25),\ncal_carbs VARCHAR(20)\n);"
                },
                {
                    "name": "query_drink_info",
                    "class": "SQLQuery",
                    "rule": "SELECT drink_name, ROUND(calories/carbs, 2) AS cal_carbs FROM drink_info;"
                },
                {
                    "name": "output_to_output_drinks2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO output_drinks2\nVALUES (\n?, ?\n);"
                }                
            ]   
        },
        {   
            "name": "AndysLoop",
            "rules": [
                {
                    "name": "Drop_Tables_Created",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS loop1, loop2"
                },
                {
                    "name": "Create_Loop_Table_1",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE loop1 (id INT, dataone VARCHAR(20), datatwo VARCHAR(20))"
                },
                {
                    "name": "Create_Loop_Table_2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE loop2 (id INT, dataone VARCHAR(20), datatwo VARCHAR(20))"
                },
                {
                    "name": "Populate_Loop_Table_1",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO loop1 VALUES (1,'a','b'),(2,'c','d'),(3,'e','f'),(4,'g','h'),(5,'i','j'),(6,'k','l')"
                },
                {
                    "name": "Select_where_id_lt_4",
                    "class": "SQLQuery",
                    "rule": "SELECT id, dataone, datatwo FROM loop1 where id < 4"
                },
                {
                    "name": "Populate_Loop_Table_2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO loop2 VALUES (?,?,?)"
                }
            ]      
        },
        {   
            "name": "Drink_infoexerciseset3",
            "rules": [
                {
                    "name": "DROP_TABLE",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS output_drinks3;"
                },
                {
                    "name": "CREATE_TABLE",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE output_drinks3\n(\ndrink_name VARCHAR(30),\ncarbs_cost VARCHAR(30)\n);"
                },
                {
                    "name": "QUERY_drink_info_TABLE",
                    "class": "SQLQuery",
                    "rule": "SELECT drink_name, ROUND(carbs/cost, 2) AS carbs_cost FROM drink_info;"
                },
                {
                    "name": "OUTPUT_TO_NEW_TABLE",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO output_drinks3\nVALUES (\n?,?\n);"
                }
            ]      
        },
        {   
            "name": "AndysThirdRuleSet",
            "rules": [
                {
                    "name": "Create_Table_andy3",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE IF NOT EXISTS andy3 (column1 VARCHAR(20), column2 VARCHAR(20))"
                },
                {
                    "name": "Create_Table_andy4",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE IF NOT EXISTS andy4 (column1 VARCHAR(20), column2 VARCHAR(20))"
                },
                {
                    "name": "Populate_andy3",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy3 VALUES ('1', 'ONE'), ('2', 'two'), ('3', 'three'), ('4', 'four')"
                },
                {
                    "name": "SELECT_WHERE_column1_lt_4",
                    "class": "SQLQuery",
                    "rule": "SELECT column1, column2 FROM andy3 WHERE column1 < 4;"
                },
                {
                    "name": "Populate_andy4_With_Loop_Data",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy4 VALUES (?,?)"
                }                
            ]     
        },
        {   
            "name": "AndysSnippit",
            "rules": [
                {
                    "name": "AndysRuleChain",
                    "class": "Snippet"
                }
            ]    
        },
        {   
            "name": "GEMSLiteHourly",
            "rules": [
                {
                    "name": "GEMS_Recent_Active_Pop",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,p.emplid,\n  CASE\n    WHEN substr(n.national_id, 1, 3)  IN ('949') THEN 13\n    ELSE 1\n  END AS SSN_IDENTIFIER_TYPE\n  , trim(n.national_id) as ssn\n  , to_char(p.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n  , to_char(p.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n  , pde.sex\n  , CASE WHEN TRIM(na.name_title) IS NULL OR na.name_title IS NULL \n    THEN substr(trim(na.name_prefix),1,10)\n    ELSE substr(trim(na.name_title),1,10)\n    END as name_prefix \n  , substr(trim(na.first_name),1,100) as first_name\n  , substr(trim(na.middle_name),1,100) as middle_name\n  , substr(trim(na.last_name),1,100) as last_name\n  , substr(trim(na.name_suffix),1,10) as name_suffix\n  , 12 AS gems_source_id\n  from ps_person p\n  join ps_names na on na.emplid = p.emplid\n  left outer join (select pde1.emplid, pde1.lastupddttm, pde1.sex from ps_pers_data_effdt pde1 \n         where pde1.effdt = (select max(pde2.effdt) from ps_pers_data_effdt pde2 where pde2.emplid = pde1.emplid and pde2.effdt <= sysdate)\n       ) pde on pde.emplid = p.emplid\n  left outer join ps_pers_nid n on n.emplid = p.emplid and n.country = 'USA' and n.national_id_type = 'PR'\n  where SUBSTR(p.EMPLID,1,5) = '00000'  \n  AND REGEXP_LIKE(p.emplid, '^[[:digit:]]{11}$') \n  AND na.name_type = 'PRI'\n  AND na.effdt = (select max(na2.effdt) from ps_names na2 where na2.emplid = na.emplid and na2.name_type = na.name_type and na2.effdt <= sysdate)\n  AND TRIM(na.last_name) IS NOT NULL\n  AND ( p.birthdate IS NOT NULL OR TRIM(n.national_id) IS NOT NULL )\n and ((p.last_child_upddtm > (sysdate - 45) or na.lastupddttm > (sysdate - 45) or pde.lastupddttm > (sysdate - 45) or n.lastupddttm > (sysdate - 45))\n      or p.emplid in ('00000064435'))\n  ORDER BY p.emplid desc"
                },
                {
                    "name": "CIMS_PR_Identity_Merge",
                    "class": "SQLQuery",
                    "rule": "CALL cims_pr.idr_identity_merge(?,?,?,?,?,?,?,?,?,?,?,?,?)"
                },
                {
                    "name": "InsertConflicts",
                    "class": "SQLQuery",
                    "rule": "insert ignore into ctx_identifier_conflicts (\n   identifier_type_id,\n   identifier,\n   source_id,\n   current_identity_id,\n   conflicting_identity_id\n) select '42' as id_type_id, \n\t\t\t'DOB+LN+FN dup' as identifier, \n\t\t\tb1.source_id,\n\t\t\tb1.identity_id,\n\t\t\tb2.identity_id\nfrom idr_biodem b1\njoin idr_names na1 on na1.identity_id = b1.identity_id \njoin idr_identifiers e1 on e1.identity_id = b1.identity_id and e1.identifier_type_id not in ( 2, 4, 1, 13, 10, 11, 42 ) and e1.status = 'Active'\nleft outer join idr_identifiers u1 on u1.identity_id = b1.identity_id and u1.identifier_type_id = 2 and u1.status = 'Active'\nleft outer join ctx_identifier_conflicts ic on ic.current_identity_id = b1.identity_id and ic.identifier = 'DOB+LN+FN dup'\nleft outer join idr_identifiers ssn1 on ssn1.identity_id = b1.identity_id and ssn1.identifier_type_id = 1 and ssn1.status = 'Active'\njoin idr_biodem b2 on b2.date_of_birth = b1.date_of_birth and b2.identity_id <> b1.identity_id\njoin idr_names na2 on na2.identity_id = b2.identity_id and na2.lastname = na1.lastname and na2.firstname = na1.firstname\nleft outer join idr_identifiers ssn2 on ssn2.identity_id = b2.identity_id and ssn2.identifier_type_id = 1 and ssn2.status = 'Active'\nwhere (ssn1.identifier IS NULL or ssn2.identifier IS NULL)\nand u1.identity_id IS NULL\nand ic.current_identity_id IS NULL\nand na1.change_id = (select max(naX.change_id) from idr_names naX where naX.identity_id = na1.identity_id and naX.source_id = na1.source_id)\nand na2.change_id = (select max(naY.change_id) from idr_names naY where naY.identity_id = na2.identity_id and naY.source_id = na2.source_id)\ngroup by '42', \n\t\t\t'DOB+LN+FN dup', \n\t\t\tb1.source_id, \n\t\t\tb1.identity_id,\n\t\t\tb2.identity_id\nUNION\nselect '42' as id_type_id, \n\t\t\t'Multiple active SSNs' as identifier, \n\t\t\tssn1.source_id as source_id1,\n\t\t\tssn1.identity_id as ident1,\n\t\t\tssn2.identity_id as ident2\t\nfrom idr_identifiers ssn1\njoin idr_identifiers ssn2 on ssn2.identity_id = ssn1.identity_id \n\t\t\tand ssn2.identifier_type_id = 1\n\t\t\tand ssn2.status = 'Active'\n\t\t\tand ssn2.identifier <> ssn1.identifier\nleft outer join ctx_identifier_conflicts ic on ic.current_identity_id = ssn1.identity_id \n\t\t\tand ic.identifier = 'Multiple active SSNs'\nwhere ssn1.identifier_type_id = 1\nand ssn1.status = 'Active'\nand ic.current_identity_id IS NULL\ngroup by '42', \n\t\t\t'Multiple active SSNs', \n\t\t\tssn1.source_id,\n\t\t\tssn1.identity_id,\n\t\t\tssn2.identity_id\nUNION\nselect '42' as id_type_id, \n\t\t\t'Multiple active EmplIDs' as identifier, \n\t\t\te1.source_id as source_id1,\n\t\t\te1.identity_id as ident1,\n\t\t\te2.identity_id as ident2\nfrom idr_identifiers e1\njoin idr_identifiers e2 on e2.identity_id = e1.identity_id \n\t\t\tand e2.identifier_type_id = e1.identifier_type_id\n\t\t\tand e2.status = e1.status\n\t\t\tand e2.identifier <> e1.identifier\nleft outer join ctx_identifier_conflicts ic on ic.current_identity_id = e1.identity_id \n\t\t\tand ic.identifier = 'Multiple active EmplIDs'\nwhere e1.identifier_type_id = 3\nand e1.status = 'Active'\nand ic.current_identity_id IS NULL\ngroup by '42', \n\t\t\t'Multiple active EmplIDs', \n\t\t\te1.source_id,\n\t\t\te1.identity_id,\n\t\t\te2.identity_id"
                },
                {
                    "name": "ImportIdentityToBaggageClaimGEMS",
                    "class": "Snippet"
                },
                {
                    "name": "Reconcile",
                    "class": "DefinedService"
                },
                {
                    "name": "PrcPersonMerge",
                    "class": "NamedQuery"
                }
            ]    
        },
        {   
            "name": "AndysSnippit2",
            "rules": [
                {
                    "name": "SimpleSelect",
                    "class": "SQLQuery",
                    "rule": "SELECT * FROM andy"
                },
                {
                    "name": "AndysSnippit2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?, ?)"
                },
                {
                    "name": "AndysSnippit2",
                    "class": "Snippet"
                }
            ]     
        },
        {   
            "name": "AndysSnippit3",
            "rules": [
                {
                    "name": "AndysSnippit3_Select",
                    "class": "SQLQuery",
                    "rule": "SELECT * FROM andy"
                },
                {
                    "name": "AndysSnippit3",
                    "class": "Snippet"
                },
                {
                    "name": "InsertIntoTable",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?, ?)"
                }
            ]    
        },
        {   
            "name": "AndysSnippit4",
            "rules": [
                {
                    "name": "AndysSnippitInput",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy\nVALUES (?,?)"
                },
                {
                    "name": "AndysSnippitOutput",
                    "class": "SQLQuery",
                    "rule": "SELECT *\nFROM andy"
                },
                {
                    "name": "AndysSnippit4",
                    "class": "Snippet"
                },
                {
                    "name": "Select",
                    "class": "SQLQuery",
                    "rule": "SELECT *\nFROM andy"
                },
                {
                    "name": "Insert",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?, ?)"
                }
            ]     
        },
        {   
            "name": "ConvertNetidToMail",
            "rules": [
                {
                    "name": "SELECT_jabarthe",
                    "class": "SQLQuery",
                    "rule": "SELECT 'netid', 'mail', 'json', 'jabarthe'\nFROM DUAL"
                },
                {
                    "name": "WsConvertNetidToMail",
                    "class": "DefinedService",
                    "method": "GET",
                    "authType": "CAS",
                    "parse": "JSON",
                    "url": "https://netid.usf.edu/nams/ws_convert",
                    "user": "casuser",
                    "password": "caspassword"
                },
                {
                    "name": "INSERT_jabarthe",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO ConvertNetidToMail/nVALUES (?, ?, ?)"
                }                
            ]   
        },
        {   
            "name": "PR-Create-Stg_VIP",
            "rules": [
                {
                    "name": "SELECT_jabarthe",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE IF NOT EXISTS staging.stg_vip ( \n  vipid integer(11) NULL COMMENT 'Directly from NAMS VIP table',\n  vip_created_dt timestamp NULL COMMENT 'From NAMS VIP table',\n  vrs_status varchar(1) NULL COMMENT 'From NAMS VIP_RES_SET table',\n  raw_ssn integer(11) NULL COMMENT 'Directly from NAMS NAMES table',\n  id_ssn varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  biodem_dob date NULL COMMENT 'From NAMS VIP table for matching idr_biodem birthdate',\n  biodem_dod date NULL DEFAULT NULL COMMENT 'Not in NAMS',\n  biodem_gender varchar(1) NULL DEFAULT NULL COMMENT 'Not in NAMS',\n  raw_lname varchar(256) NULL COMMENT 'Directly from NAMS VIP table',\n  names_last varchar(100) NULL COMMENT 'For maching on idr_names',\n  raw_fname varchar(256) NULL COMMENT 'Directly from NAMS VIP table',\n  names_first varchar(100) NULL COMMENT 'For maching on idr_names',\n  raw_mname varchar(256) NULL COMMENT 'Directly from NAMS VIP table',\n  names_middle varchar(100) NULL COMMENT 'For maching on idr_names',\n  names_prefix varchar(10) NULL DEFAULT NULL COMMENT 'Not in NAMS',\n  raw_gen varchar(4) NULL COMMENT 'Directly from NAMS NAMES table',\n  names_suffix varchar(10) NULL COMMENT 'For maching on idr_names',\n  confid_ind varchar(1) NULL DEFAULT NULL COMMENT 'Copy from NAMS NAMES since not in VIP',\n  ethn_code varchar(2) NULL COMMENT 'Not in NAMS for VIPs',\n  citz_code varchar(2) NULL COMMENT 'Not in NAMS for VIPs',\n  raw_pidm integer(11) NULL COMMENT 'Directly from NAMS OASIS table',\n  id_pidm varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  raw_usfid varchar(9) NULL COMMENT 'Directly from NAMS OASIS table',\n  id_usfid varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  raw_emplid integer(11) NULL COMMENT 'Directly from NAMS GEMS table',\n  id_emplid varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  role_n_name varchar(50) NULL COMMENT 'Directly from NAMS NAMES and ROLES tables',\n  activity_date timestamp NOT NULL DEFAULT now() COMMENT 'When inserted',\n  comments254 varchar(255) NULL DEFAULT NULL COMMENT 'Placeholder if later need to pickup more columns from NAMS',\n  INDEX idx_vipid ( vipid ),\n  INDEX idx_id_ssn ( id_ssn ),\n  INDEX idx_id_pidm ( id_pidm ),\n  INDEX idx_id_usfid ( id_usfid ),\n  INDEX idx_id_emplid ( id_emplid )\n)"
                },
                {
                    "name": "PR-Trunc-Stg_VIP",
                    "class": "SQLQuery",
                    "rule": "TRUNCATE TABLE staging.stg_vip"
                },
                {
                    "name": "VIP-Get-Idents",
                    "class": "SQLQuery",
                    "rule": "SELECT DISTINCT\n\tv.vipid \n\t, v.created_dt\n\t, vrs.status\n\t, na.ssn \n  , CASE WHEN na.ssn > 999999 and na.ssn < 900000000 THEN lpad(na.ssn, 9, '0') ELSE NULL END \n\t, v.dob\n\t, v.lname \n  , CASE WHEN length( v.lname ) > 0 THEN TRIM(substr( v.lname, 1, 100 )) ELSE NULL END\n\t, v.fname \n  , CASE WHEN length( v.fname ) > 0 THEN TRIM(substr( v.fname, 1, 100 )) ELSE NULL END\n\t, v.mname \n  , CASE WHEN length( v.mname ) > 0 THEN TRIM(substr( v.mname, 1, 100 )) ELSE NULL END\n\t, na.gen \n  , CASE WHEN length( na.gen ) > 0 THEN TRIM(SUBSTR( na.gen, 1, 10 )) ELSE NULL END\n\t, CASE WHEN na.privacy = 255 THEN 'Y' ELSE 'N' END \n\t, o.pidm \n  , CASE WHEN o.pidm > 0 THEN o.pidm ELSE NULL END \n\t, o.usfid \n  , CASE WHEN length(o.usfid)=9 and substr(o.usfid,1,1)='U' THEN o.usfid ELSE NULL END\n\t, g.emplid \n  , CASE WHEN g.emplid > 0 and g.emplid < 1000000 THEN lpad(g.emplid, 11, '0') ELSE NULL END\n\t, concat(concat(na.role,'-'),r.name)\nFROM vip v\nLEFT OUTER JOIN vip_res_set vrs on vrs.vipid = v.vipid\nLEFT OUTER JOIN names na on na.badge = v.vipid\nLEFT OUTER JOIN vip_resource vr on vr.rid = vrs.rid \nLEFT OUTER JOIN oasis o on o.badge = na.badge\nLEFT OUTER JOIN gems g on g.badge = na.badge\nLEFT OUTER JOIN roles r on r.code = na.role\nWHERE ( vr.label = 'USFID'\nAND vrs.status = 'P' \n) OR v.vipid in ( 1798583, 1011799, 1319044, 1470331, 1662969 )\norder by v.created_dt"
                },
                {
                    "name": "PR-Insert-Stg_VIP",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO staging.stg_vip (\n  vipid,\n  vip_created_dt,\n  vrs_status,\n  raw_ssn,\n  id_ssn,\n  biodem_dob,\n  raw_lname,\n  names_last,\n  raw_fname,\n  names_first,\n  raw_mname,\n  names_middle,\n  raw_gen,\n  names_suffix,\n  confid_ind,\n  raw_pidm,\n  id_pidm,\n  raw_usfid,\n  id_usfid,\n  raw_emplid,\n  id_emplid,\n  role_n_name\n) VALUES (\n?, ?, ?, ?, ?, \n?, ?, ?, ?, ?, \n?, ?, ?, ?, ?, \n?, ?, ?, ?, ?, \n?, ? )"
                },
                {
                    "name": "PR-Inactivate-VIPID-SSN",
                    "class": "SQLQuery",
                    "rule": "SELECT ssn.source_id, ssn.identifier, ssn.identifier_type_id, 0\nFROM pro_identifiers vipid\nJOIN pro_identifiers ssn on ssn.person_id = vipid.person_id and ssn.identifier_type_id = 1 /*SSN*/ and \nssn.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nLEFT OUTER JOIN staging.stg_vip sv on sv.vipid = vipid.identifier and sv.id_ssn = ssn.identifier\nWHERE vipid.identifier_type_id = 18\nAND vipid.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nAND ssn.source_id = vipid.source_id\nAND sv.vipid IS NULL \nAND 0 < (select count(*) from staging.stg_vip)"
                },
                {
                    "name": "ProIdentifierStatusSet",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "PR-Inactivate-VIPID-HRPRNs",
                    "class": "SQLQuery",
                    "rule": "SELECT hrprn.source_id, hrprn.identifier, hrprn.identifier_type_id, 0\nFROM pro_identifiers vipid\nJOIN pro_identifiers hrprn on hrprn.person_id = vipid.person_id and hrprn.identifier_type_id = 13 /*hrprn*/ and \nhrprn.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nLEFT OUTER JOIN staging.stg_vip sv on sv.vipid = vipid.identifier and sv.id_ssn = hrprn.identifier\nWHERE vipid.identifier_type_id = 18\nAND vipid.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nAND hrprn.source_id = vipid.source_id\nAND sv.vipid IS NULL \nAND 0 < (select count(*) from staging.stg_vip)"
                },
                {
                    "name": "PR-Inactivate-VIPIDs",
                    "class": "SQLQuery",
                    "rule": "SELECT vipid.source_id, vipid.identifier, vipid.identifier_type_id, 0\nFROM pro_identifiers vipid\nLEFT OUTER JOIN staging.stg_vip sv on sv.vipid = vipid.identifier\nWHERE vipid.identifier_type_id = 18\nAND vipid.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nAND sv.vipid IS NULL \nAND 0 < (select count(*) from staging.stg_vip)"
                },
                {
                    "name": "PR-IdentMergeofVIPs",
                    "class": "SQLQuery",
                    "rule": "TRUNCATE TABLE staging.stg_vip"
                }
                
                
                
                
27	9	PR-IdentMergeofVIPs		1	SELECT DISTINCT 18 as vipid_identifier_type\n       , sv.vipid\n       , CASE WHEN substr(sv.id_ssn, 1, 3) IN ('949') THEN 13 ELSE 1 END as ssn_identifier_type\n       , sv.id_ssn\n       , sv.biodem_dob\n       , sv.biodem_dod\n       , sv.biodem_gender\n       , sv.names_prefix\n       , sv.names_first\n       , sv.names_middle\n       , sv.names_last\n       , sv.names_suffix\n       , 17 as vip_source_id\nFROM staging.stg_vip sv\nWHERE sv.vipid IS NOT NULL\nAND sv.names_first IS NOT NULL\nAND sv.names_last IS NOT NULL\nAND ( sv.biodem_dob IS NOT NULL or sv.id_ssn IS NOT NULL )\nORDER BY sv.vipid DESC	
27	10	CIMS_PR Identity Merge		1	CALL cims_pr.idr_identity_merge(?,?,?,?,?,?,?,?,?,?,?,?,?)	
27	11	PR-AddVIPConflicts		1	insert ignore into ctx_identifier_conflicts (
   identifier_type_id,
   identifier,
   source_id,
   current_identity_id,
   conflicting_identity_id
) select '42', 
      concat(sv.id_usfid, ' USFID only in VIP'),
      min(id.source_id),
      id.identity_id,
      id.identity_id
from idr_identifiers id
join staging.stg_vip sv on sv.vipid = id.identifier
left outer join idr_identifiers usfid on usfid.identity_id = id.identity_id and usfid.identifier_type_id = 2 /*USFID*/ and usfid.status = 'Active'
left outer join idr_identifiers usfid2 on usfid2.identifier = sv.id_usfid and usfid2.identifier_type_id = 2 /*USFID*/ and usfid2.status = 'Active'
where id.identifier_type_id = 18 /* VIPID */
and id.status = 'Active'
and usfid.identifier IS NULL
and sv.id_usfid IS NOT NULL
and usfid2.identifier IS NOT NULL
and not exists (select 'alreadythere' from ctx_identifier_conflicts ic 
      where ic.identifier = concat(sv.id_usfid, ' USFID only in VIP')
      and ic.current_identity_id = id.identity_id 
          )
group by '42', 
      concat(sv.id_usfid, ' USFID only in VIP'),
      id.identity_id,
      id.identity_id
UNION
select '42', 
      concat(sv.id_emplid, ' EmplID only in VIP'), 
      min(id.source_id),
      id.identity_id,
      id.identity_id
from idr_identifiers id
join stg_vip sv on sv.vipid = id.identifier 
left outer join idr_identifiers emplid on emplid.identity_id = id.identity_id and emplid.identifier_type_id = 3 and emplid.status = 'Active'
left outer join idr_identifiers emplid2 on emplid2.identifier = sv.id_emplid and emplid2.identifier_type_id = 3 and emplid2.status = 'Active'
where id.identifier_type_id = 18 /* VIPID */
and id.status = 'Active'
and sv.id_emplid IS NOT NULL
and emplid2.identifier IS NOT NULL
and (emplid.identifier IS NULL or emplid.identifier <> sv.id_emplid)
and not exists (select 'alreadythere' from ctx_identifier_conflicts ic 
      where ic.identifier = concat(sv.id_emplid, ' EmplID only in VIP')
      and ic.current_identity_id = id.identity_id 
          )
group by '42', 
      concat(sv.id_emplid, ' EmplID only in VIP'), 
      id.identity_id,
      id.identity_id	
27	12	InsertConflicts		1	insert ignore into ctx_identifier_conflicts (
   identifier_type_id,
   identifier,
   source_id,
   current_identity_id,
   conflicting_identity_id
) select '42' as id_type_id, 
			'DOB+LN+FN dup' as identifier, 
			b1.source_id,
			b1.identity_id,
			b2.identity_id
from idr_biodem b1
join idr_names na1 on na1.identity_id = b1.identity_id 
join idr_identifiers e1 on e1.identity_id = b1.identity_id and e1.identifier_type_id not in ( 2, 4, 1, 13, 10, 11, 42 ) and e1.status = 'Active'
left outer join idr_identifiers u1 on u1.identity_id = b1.identity_id and u1.identifier_type_id = 2 and u1.status = 'Active'
left outer join ctx_identifier_conflicts ic on ic.current_identity_id = b1.identity_id and ic.identifier = 'DOB+LN+FN dup'
left outer join idr_identifiers ssn1 on ssn1.identity_id = b1.identity_id and ssn1.identifier_type_id = 1 and ssn1.status = 'Active'
join idr_biodem b2 on b2.date_of_birth = b1.date_of_birth and b2.identity_id <> b1.identity_id
join idr_names na2 on na2.identity_id = b2.identity_id and na2.lastname = na1.lastname and na2.firstname = na1.firstname
left outer join idr_identifiers ssn2 on ssn2.identity_id = b2.identity_id and ssn2.identifier_type_id = 1 and ssn2.status = 'Active'
where (ssn1.identifier IS NULL or ssn2.identifier IS NULL)
and u1.identity_id IS NULL
and ic.current_identity_id IS NULL
and na1.change_id = (select max(naX.change_id) from idr_names naX where naX.identity_id = na1.identity_id and naX.source_id = na1.source_id)
and na2.change_id = (select max(naY.change_id) from idr_names naY where naY.identity_id = na2.identity_id and naY.source_id = na2.source_id)
group by '42', 
			'DOB+LN+FN dup', 
			b1.source_id, 
			b1.identity_id,
			b2.identity_id
UNION
select '42' as id_type_id, 
			'Multiple active SSNs' as identifier, 
			ssn1.source_id as source_id1,
			ssn1.identity_id as ident1,
			ssn2.identity_id as ident2	
from idr_identifiers ssn1
join idr_identifiers ssn2 on ssn2.identity_id = ssn1.identity_id 
			and ssn2.identifier_type_id = 1
			and ssn2.status = 'Active'
			and ssn2.identifier <> ssn1.identifier
left outer join ctx_identifier_conflicts ic on ic.current_identity_id = ssn1.identity_id 
			and ic.identifier = 'Multiple active SSNs'
where ssn1.identifier_type_id = 1
and ssn1.status = 'Active'
and ic.current_identity_id IS NULL
group by '42', 
			'Multiple active SSNs', 
			ssn1.source_id,
			ssn1.identity_id,
			ssn2.identity_id
UNION
select '42' as id_type_id, 
			'Multiple active EmplIDs' as identifier, 
			e1.source_id as source_id1,
			e1.identity_id as ident1,
			e2.identity_id as ident2
from idr_identifiers e1
join idr_identifiers e2 on e2.identity_id = e1.identity_id 
			and e2.identifier_type_id = e1.identifier_type_id
			and e2.status = e1.status
			and e2.identifier <> e1.identifier
left outer join ctx_identifier_conflicts ic on ic.current_identity_id = e1.identity_id 
			and ic.identifier = 'Multiple active EmplIDs'
where e1.identifier_type_id = 3
and e1.status = 'Active'
and ic.current_identity_id IS NULL
group by '42', 
			'Multiple active EmplIDs', 
			e1.source_id,
			e1.identity_id,
			e2.identity_id	
27	13	ImportIdentityToBaggageClaimVIP Snippit		1	DEFINEDSERVICE:ImportIdentityToBaggageClaimVIP	
                
            ]     
        },
        {   
            "name": "OASISLiteHourlyModified",
            "rules": [
                
            ]   
        },
        {   
            "name": "OASISLiteHourly1_5",
            "rules": [
                
            ]    
        },
        {   
            "name": "ToBeDeleted",
            "rules": [
                
            ]     
        },
        {   
            "name": "HSCDW_Import2x",
            "rules": [
                
            ]     
        },
        {   
            "name": "AddConflicts2x",
            "rules": [
                
            ]   
        },
        {   
            "name": "OASIS_Import2x",
            "rules": [
                
            ]   
        },
        {   
            "name": "OasisImportSourceandCurrentTimestamp",
            "rules": [
                
            ]   
        },
        {   
            "name": "Oasisp-create2x",
            "rules": [
                
            ]     
        },
        {   
            "name": "PeopleAdminBCToGEMS_2x",
            "rules": [
                
            ]   
        }
    ]
}

	at grails.converters.JSON.parse(JSON.java:281)
	... 9 more
2013-05-09 11:55:57,735 [localhost-startStop-1] ERROR StackTrace  - Full Stack Trace:
org.codehaus.groovy.grails.web.json.JSONException: Expected a ',' or ']' at character 59794 of {    
    "ruleSets": [
        {   
            "name": "debugRuleSet",
            "rules": [
                {
                    "name": "GEMS_test_rule_2",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "GEMS_test_rule",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "GEMS_test_rule_again",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "GEMS_test_rule_again_2",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "Dummy_Insert_Input_Reorder",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO test_dump_min (identifier_type_id,identifier,ssn_identifier_type_id,ssn,birthdate,deathdate,sex,prefix,firstName,middleName,lastName,suffix,source_id) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)"
                },
                {
                    "name": "Dummy_INSERT",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO test_dump (\n\tidentifier_type_id,\n\tidentifier,\n\tssn_identifier_type_id,\n\tssn,\n\tbirthdate,\n\tdeathdate,\n\tsex,prefix,\n\tfirstName,\n\tmiddleName,\n\tlastName,\n\tsuffix,\n\tsource_id) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)"
                },
                {
                    "name": "This_is_a_bum_rule",
                    "class": "SQLQuery",
                    "rule": "SELECT '1' FROM DUAL"
                },
                {
                    "name": "This_is_a_bum_PA_rule",
                    "class": "SQLQuery",
                    "rule": "SELECT loaded_dt FROM people_admin"
                },
                {
                    "name": "BC_Select",
                    "class": "SQLQuery",
                    "rule": "SELECT ssn,birthdate,firstName,lastName FROM test_dump_min"
                },
                {
                    "name": "Select_Test",
                    "class": "SQLQuery",
                    "rule": "SELECT 'James','Patrick','Jones' FROM DUAL"
                },
                {
                    "name": "Select_Prepare",
                    "class": "SQLQuery",
                    "rule": "SELECT ?,?,? FROM DUAL"
                },
                {
                    "name": "Append_Wilhoit",
                    "class": "SQLQuery",
                    "rule": "SELECT 'Wilhoit' FROM DUAL"
                },
                {
                    "name": "DROP_TABLE_cool2",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE cool2"
                },
                {
                    "name": "adsf",
                    "class": "SQLQuery",
                    "rule": "SELECT *\nFROM Andy"
                }
                
            ]
        },
        {
            "name": "GEMS_Silver_Rule_Set_2_x",
            "rules": [
                {
                    "name": "GEMS_Silver_Rule_Population",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN TRIM(pd.name_title) IS NULL OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n        AND SUBSTR(pd.EMPLID,1,5) = '00000'  \n        AND REGEXP_LIKE(pd.emplid, '^[[:digit:]]{11}$') \n\tORDER BY pd.emplid desc"
                },
                {
                    "name": "Update_Active_Status_Emplid",
                    "class": "SQLQuery",
                    "rule": "SELECT identifier\n\tFROM pro_identifiers \n\tWHERE identifier_type_id=3 AND source_id=12\n\tORDER BY identifier"
                },
                {
                    "name": "Update_Active_Status_SSN_GEMS",
                    "class": "SQLQuery",
                    "rule": "SELECT identifier\n\tFROM pro_identifiers \n\tWHERE identifier_type_id=1 AND source_id =12\n\tORDER BY identifier"
                },
                {
                    "name": "GEMS_HRPR_Iterator",
                    "class": "SQLQuery",
                    "rule": "SELECT identifier\n\tFROM pro_identifiers \n\tWHERE identifier_type_id=13 AND source_id =12\n\tORDER BY identifier"
                },
                {
                    "name": "GEMS_SSNExistTest",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 AS SSN_IDENTIFIER_TYPE,COUNT(*) AS GEMS_SSNCount\n\tFROM ps_pers_nid n\n\tWHERE n.country(+) = 'USA'\n\tAND n.national_id_type(+) = 'PR'\n\tAND trim(n.national_id) = ?"
                },
                {
                    "name": "GEMS_HRPRExistTest",
                    "class": "SQLQuery",
                    "rule": "SELECT 13 AS HRPR_IDENTIFIER_TYPE,COUNT(*) AS HRPRCount\n\tFROM ps_pers_nid n\n\tWHERE n.country(+) = 'USA'\n\tAND n.national_id_type(+) = 'PR'\n\tAND trim(n.national_id) = ?"
                },
                {
                    "name": "Emplid_Exist_Test",
                    "class": "SQLQuery",
                    "rule": "SELECT 3 AS EMPL_IDENTIFIER_TYPE, COUNT(*) AS EmplidCount\n\tFROM ps_personal_data pd\n\tWHERE pd.emplid=?"
                },
                {
                    "name": "Set_Empl_Active_Flag",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET status='Active',\n\tsource_id=?\n\tWHERE identifier=?\n\tAND identifier_type_id=?\n\tAND identifier_status_id != (\n\t\tSELECT identifier_status_id \n\t\t\tFROM identifier_statuses \n\t\t\tWHERE `name`='Active'\n\t)\n\tAND ? > 0"
                },
                {
                    "name": "Set_Empl_Inactive_Flag",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET status='Inactive'\n\tWHERE source_id=?\n\tAND identifier=?\n\tAND identifier_type_id=?\n\tAND identifier_status_id != (\n\t\tSELECT identifier_status_id \n\t\t\tFROM identifier_statuses \n\t\t\tWHERE `name`='Inactive'\n\t)\n\tAND ? < 1"
                },
                {
                    "name": "Add_GEMS_Source",
                    "class": "SQLQuery",
                    "rule": "SELECT 14 AS source_id FROM DUAL"
                },
                {
                    "name": "BaggageClaimSORCreate",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE `incomming_sor_records` (\n  `primary_identifier_type_id` bigint(18) unsigned DEFAULT NULL,\n  `primary_identifier` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `secondary_identifier_type_id` bigint(18) unsigned DEFAULT NULL,\n  `secondary_identifier` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `birthday` date DEFAULT NULL,\n  `deathday` date DEFAULT NULL,\n  `gender` varchar(10) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `prefix` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `firstname` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `middlename` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `lastname` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `suffix` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `baggage_source_id` bigint(18) unsigned DEFAULT NULL,\n  `status` enum('Valid','Invalid') COLLATE utf8_unicode_ci DEFAULT NULL,\n  KEY `incomming_sor_records_baggage_source_id` (`baggage_source_id`),\n  CONSTRAINT `incomming_sor_records_baggage_source_id` FOREIGN KEY (`baggage_source_id`) REFERENCES `baggage_sources` (`baggage_source_id`) ON DELETE SET NULL ON UPDATE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;"
                },
                {
                    "name": "Add_new_BC_Source",
                    "class": "SQLQuery",
                    "rule": "INSERT IGNORE INTO baggage_sources (baggage_source_id,cims_pr_source_id,name,format) \nVALUES ('5','14','GEMS-DATABASE','DATABASE')"
                },
                {
                    "name": "Update_SOR",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO incomming_sor_records\n(primary_identifier_type_id,primary_identifier,secondary_identifier_type_id,\nsecondary_identifier,birthday,deathday,gender,prefix,firstname,middlename,lastname,\nsuffix,baggage_source_id,status) VALUES\n(?,?,?,?,?,?,?,?,?,?,?,?,5,'Valid')"
                },
                {
                    "name": "GEMS_Recent_Activ_Pop",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN TRIM(pd.name_title) IS NULL OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n        AND SUBSTR(pd.EMPLID,1,5) = '00000'  \n        AND REGEXP_LIKE(pd.emplid, '^[[:digit:]]{11}$') \nand (pd.lastupddttm > (sysdate - 1) or n.lastupddttm > (sysdate - 1))\n\tORDER BY pd.emplid desc"
                },
                {
                    "name": "Reassemble_Params",
                    "class": "SQLQuery",
                    "rule": "SELECT idinfo.source_id,idinfo.identifier_type_id,idinfo.identifier,idinfo.source_id\n\tFROM\n\t\t(\n\t\t\tSELECT \n\t\t\t\t? AS identifier_type_id,\n\t\t\t\t? AS identifier,\n\t\t\t\t? AS ssn_identifier_type_id,\n\t\t\t\t? AS ssn,\n\t\t\t\t? AS birthdate,\n\t\t\t\t? AS deathdate,\n\t\t\t\t? AS gender,\n\t\t\t\t? AS prefix,\n\t\t\t\t? AS first_name,\n\t\t\t\t? AS middle_name,\n\t\t\t\t? AS last_name,\n\t\t\t\t? AS suffix,\n\t\t\t\t? AS source_id\n\t\t\tFROM DUAL\n\t\t) AS idinfo"
                },
                {
                    "name": "Set_the_authoritative_source",
                    "class": "SQLQuery",
                    "rule": "UPDATE idr_identifiers\n\tSET status='Active' AND source_id=?\n\tWHERE identifier_type_id=? AND identifier=? AND source_id != ?"
                },
                {
                    "name": "Set_the_Gems_import_source",
                    "class": "SQLQuery",
                    "rule": "SELECT 5 AS importSourceId FROM DUAL"
                }
            ]  
        },
        {
            "name": "CIMS_PRStoredProcedures2x",
            "rules": [
                {
                    "name": "PrsBiodemUpdater",
                    "class": "NamedQuery",
                    "rule": "personId,birthday,deathday,gender,sourceId"
                },
                {
                    "name": "PrsNamesUpdater",
                    "class": "NamedQuery",
                    "rule": "personId,prefix,firstname,middlename,lastname,suffix,sourceId"
                },
                {
                    "name": "PrcPersonSilverRuleCheck",
                    "class": "NamedQuery",
                    "rule": "ssn,birthday,firstname,lastname"
                },
                {
                    "name": "PrsBiodemValidPastDate",
                    "class": "NamedQuery",
                    "rule": "dateString"
                },
                {
                    "name": "PrcPersonByIdentifier",
                    "class": "NamedQuery",
                    "rule": "identifierTypeId,identifier"
                },
                {
                    "name": "PrcPersonsCreateNew",
                    "class": "NamedQuery",
                    "rule": "sourceId"
                },
                {
                    "name": "PrcPersonMerge",
                    "class": "NamedQuery",
                    "rule": "primaryIdentifierTypeId, primaryIdentifier,secondaryIdentifierTypeId,secondaryIdentifier,birthday,deathday,gender,prefix,firstname,middlename,lastname,suffix,sourceId"
                },
                {
                    "name": "ProIdentifierStatusSet",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "ImpRepositoryIdentityNew",
                    "class": "SQLQuery",
                    "rule": "SELECT imp_repository_identity_new(?) FROM DUAL"
                },
                {
                    "name": "ImpRepositoryMerge",
                    "class": "NamedQuery",
                    "rule": "importSourceId,firstname,middlename,lastname,gender,birthday,unparsedLine"
                }
            ]   
        },
        {
            "name": "CIMS_PRBaggageClaimMerge",
            "rules": [
                {
                    "name": "PeopleAdmin_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT loaded_dt,\n\thpid AS HPID,\n\tIF(ssn = 'No Response','',REPLACE(ssn,'-','')) AS SSN,\n\tIF(LEFT(UPPER(usfid),1) != 'U','',IF(LENGTH(usfid) = 9,usfid,'')) AS USFID,\n\tIF(emplid = 'No Response','',LPAD(TRIM(emplid),11,'0')) AS EMPLID,\n\tIF(fname = 'No Response','',TRIM(fname)) AS FIRSTNAME,\n\tIF(mname = 'No Response','',TRIM(mname)) AS MIDDLENAME,\n\tIF(lname = 'No Response','',TRIM(lname)) AS LASTNAME,\n\tIF(gender IN('M','F'),gender,'') AS GENDER,\n\tIF(dob = 'No Response',NULL,TRIM(dob)) AS BIRTHDAY,\n\tRTRIM(baggage) AS BAGGAGE\n\tFROM nams.people_admin\n\tWHERE DATE(loaded_dt) != '0000-00-00'"
                },
                {
                    "name": "CardID_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT to_char(ID_ISSUE_DATE,'YYYY-MM-DD') AS IMPORT_DATE,\n\tID_CARD_NUMBER,\n\tNAME_FIRST AS FIRSTNAME,\n\tNAME_MIDDLE AS MIDDLENAME,\n\tNAME_LAST AS LASTNAME,\n\tto_char(BIRTH_DATE,'YYYY-MM-DD') AS BIRTHDAY\n\tFROM ID WHERE ROWNUM < 50"
                },
                {
                    "name": "NAMS_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT \n\tNOW() AS IMPORT_DATE,\n\tn.badge AS NAMSID,\n\tn.fname AS FIRSTNAME,\n\tn.mname AS MIDDLENAME,\n\tn.lname AS LASTNAME,\n\tSTR_TO_DATE(CONCAT('',\n\t\tIF(\n\t\t\t((SELECT COUNT(*) FROM bdays WHERE badge=n.badge AND bday > 0 ORDER BY bdayid DESC LIMIT 1) < 1),\n\t\t\tn.bday,\n\t\t\t(SELECT bday FROM bdays WHERE badge=n.badge AND bday > 0 ORDER BY bdayid DESC LIMIT 1)\n\t\t) \n\t) ,'%Y%m%d') AS BIRTHDAY\n\tFROM names n\n\tWHERE \n\t(SELECT COUNT(*) FROM oasis WHERE badge=n.badge LIMIT 1) > 0 \n\tOR\n\t(SELECT COUNT(*) FROM gems WHERE badge=n.badge LIMIT 1) > 0"
                }
            ]   
        },
        {
            "name": "CIMS_PRBaggageClaimMergeOtherRules",
            "rules": [
                {
                    "name": "People_Admin_Request",
                    "class": "SQLQuery",
                    "rule": "SELECT 2 AS importSourceId,0 AS reconcile FROM DUAL;"
                },
                {
                    "name": "People_Admin_Request",
                    "class": "SQLQuery",
                    "rule": "SELECT 2 AS importSourceId,0 AS reconcile FROM DUAL;"
                },
                {
                    "name": "ImportToBaggageClaim",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "Dummy_ParamCollector_for_ImportToBaggageClaim_Defined_Service_loop",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS baggageClaimIdentityId, CAST(? AS UNSIGNED) AS personId, ? AS importSourceId, ? AS sourceId, ? AS baggageClaimIdentityStatusId, ? AS firstName, ? AS middleName, ? AS lastName, ? AS gender, ? AS dateOfBirth"
                },
                {
                    "name": "AddToBaggageClaim",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "PeopleAdmin_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT \n\t2 AS importSourceId,\n\tIF(fname = 'No Response','',TRIM(fname)) AS FIRSTNAME,\n\tIF(mname = 'No Response','',TRIM(mname)) AS MIDDLENAME,\n\tIF(lname = 'No Response','',TRIM(lname)) AS LASTNAME,\n\tIF(gender IN('M','F'),gender,'') AS GENDER,\n\tIF(dob = 'No Response','',TRIM(REPLACE(dob,'/','-'))) AS BIRTHDAY,\n\tloaded_dt,\n\tCONCAT('[{\"identifier\":\"',hpid,'\",\"identifierType\":{\"identifierTypeId\":\"10\"}},{\"identifier\":\"',IF(ssn = 'No Response','',REPLACE(ssn,'-','')),'\",\"identifierType\":{\"identifierTypeId\":\"1\"}},{\"identifier\":\"',IF(LEFT(UPPER(usfid),1) != 'U','',IF(LENGTH(usfid) = 9,usfid,'')),'\",\"identifierType\":{\"identifierTypeId\":\"2\"}},{\"identifier\":\"',IF(emplid = 'No Response','',LPAD(TRIM(emplid),11,'0')),'\",\"identifierType\":{\"identifierTypeId\":\"3\"}}]') AS baggageClaimIdentifiers,\n\tRTRIM(baggage) AS BAGGAGE\n\tFROM nams.people_admin\n\tWHERE DATE(loaded_dt) != '0000-00-00' LIMIT 10"
                },
                {
                    "name": "Reconcile_Defined_Service",
                    "class": "DefinedService"
                },
                {
                    "name": "ImportIdentityToBaggageClaimPeopleAdmin",
                    "class": "DefinedService"
                },
                {
                    "name": "Prepend_PeopleAdmin_Source",
                    "class": "SQLQuery",
                    "rule": "SELECT 2 AS importSourceId FROM DUAL"
                },
                {
                    "name": "Prepend_Gems_Import_Source",
                    "class": "SQLQuery",
                    "rule": "SELECT 5 AS importSourceId FROM DUAL"
                },
                {
                    "name": "Prepend_Gems_Import_Source_and_Current_Timestamp",
                    "class": "SQLQuery",
                    "rule": "SELECT 5 AS importSourceId,NOW() AS importTimestamp,\"\" AS claimInfo FROM DUAL"
                },
                {
                    "name": "Prepend_VIP_Import_Source_and_Current_Timestamp",
                    "class": "SQLQuery",
                    "rule": "SELECT 8 AS importSourceId,NOW() AS importTimestamp FROM DUAL"
                },
                {
                    "name": "ImportIdentityToBaggageClaimHealth",
                    "class": "DefinedService"
                },
                {
                    "name": "ImportIdentityToBaggageClaimGEMS",
                    "class": "DefinedService"
                }
            ]    
        },
        {
            "name": "NamsDefinedServices",
            "rules": [
                {
                    "name": "NetIDToEMail_Defaults",
                    "class": "SQLQuery",
                    "rule": "SELECT 'netid' AS submit_type,'mail' AS return_type,'json' AS `return`,? AS `value` FROM DUAL"
                },
                {
                    "name": "WsConvertNetidToMail",
                    "class": "DefinedService"
                }
            ]     
        },
        { 
            "name": "UnumberDefinedServices",
            "rules": [
                {
                    "name": "Unumber_Defaults",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 AS personId,2 AS personAllocatedId,2 AS identifierTypeId, ? AS amount FROM DUAL"
                },
                {
                    "name": "ReallocatePoolIdentifiers",
                    "class": "DefinedService"
                }
            ]      
        },
        { 
            "name": "IdentityMergeRules",
            "rules": [
                {
                    "name": "Unumber_Defaults",
                    "class": "SQLQuery",
                    "rule": "SELECT \n? AS PrimaryIdentifierType,\n? AS PrimaryIdentifier,\n? AS SecondaryIdentifierType,\n? AS SecondaryIdentifier,\n? AS BirthDate,\n? AS DeathDate,\n? AS Gender,\n? AS Prefix,\n? AS FirstName,\n? AS MiddleName,\n? AS LastName,\n? AS Suffix,\n? AS SourceId\nFROM DUAL\t"
                },
                {
                    "name": "Set_Past_year_Limit",
                    "class": "SQLQuery",
                    "rule": "SELECT 150 AS maxyears FROM DUAL"
                },
                {
                    "name": "PrsBiodemValidPastDateLimit",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "PrsBiodemValidPastDate",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "FilterIdentifier",
                    "class": "DefinedService"
                },
                {
                    "name": "UniqueIdentifierMatch",
                    "class": "SQLQuery",
                    "rule": "SELECT foundUniquePerson.person_id AS personId,\n? AS PrimaryIdentifierType,\n? AS PrimaryIdentifier,\n? AS SecondaryIdentifierType,\n? AS SecondaryIdentifier,\n? AS BirthDate,\n? AS DeathDate,\n? AS Gender,\n? AS Prefix,\n? AS FirstName,\n? AS MiddleName,\n? AS LastName,\n? AS Suffix,\n? AS SourceId\nFROM (\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n\tUNION\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n) AS foundUniquePerson HAVING COUNT(*)=1"
                },
                {
                    "name": "ValidIdentfiersSet",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS person_id,\nidentifiers.identifier_type_id,\nidentifiers.identifier,\n? AS SourceId\nFROM (\n\tSELECT identifier_type_id,identifier FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0\n\tUNION\n\tSELECT identifier_type_id,identifier FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0\n) AS identifiers"
                },
                {
                    "name": "IdentifierSourceUpdate",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET source_id=?\n\tWHERE  source_id !=? AND identifier_type_id=? AND identifier=? AND person_id=?"
                },
                {
                    "name": "IdentifierReallocationUpdate",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET person_id = ?\n\tWHERE identifier_type_id=? AND identifier=? AND person_id !=? AND identifier_status_id != (SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active');"
                },
                {
                    "name": "IdentifierStatusUpdate",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET identifier_status_id = (SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active') AND merge_date=NOW()\n\tWHERE identifier_type_id=? AND identifier=? AND person_id=? AND identifier_status_id != (SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active');"
                },
                {
                    "name": "NameChangeDetection",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS prefix,? AS FirstName,? AS MiddleName,? AS LastName,? AS Suffix,? AS SourceId,? AS personId\nFROM DUAL WHERE \n(SELECT COUNT(*) FROM (\n\tSELECT prefix,firstname,middlename,lastname,suffix FROM prs_names WHERE source_id=? AND person_id=? ORDER BY last_changed DESC LIMIT 1\n) AS lastNameBySource\nWHERE prefix=? AND firstname=? AND middlename=? AND lastname=? AND suffix=?) < 1"
                },
                {
                    "name": "NameCreateNew",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO prs_names (prefix,firstname,middlename,lastname,suffix,source_id,person_id,last_changed) VALUES(?,?,?,?,?,?,?,NOW())"
                },
                {
                    "name": "BioDemChangeDetection",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS date_of_birth,? AS date_of_death,? AS gender,? AS SourceId,? AS PersonId\nFROM DUAL WHERE \n(SELECT COUNT(*) FROM (\n\tSELECT date_of_birth,date_of_death,gender FROM prs_biodem WHERE source_id=? AND person_id=? ORDER BY last_changed DESC LIMIT 1\n) AS lastNameBySource\nWHERE date_of_birth=? AND date_of_death=? AND gender=?) < 1"
                },
                {
                    "name": "BioDemCreateNew",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO prs_biodem (date_of_birth,date_of_death,gender,source_id,person_id,last_changed) VALUES(?,?,?,?,?,NOW())"
                },
                {
                    "name": "IdentifierNewDetection",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS identifier_type_id,? AS identifier,? AS sourceId,? AS personId\n\tFROM DUAL\n\tWHERE LENGTH(TRIM(?)) > 0 AND (SELECT COUNT(*) FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0) < 1"
                },
                {
                    "name": "IdentifierCreateNew",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO pro_identifiers (identifier_type_id,identifier,source_id,person_id,merge_date,identifier_status_id) VALUES(?,?,?,?,NOW(),(SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active'))"
                },
                {
                    "name": "EndLoop_Filler",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 FROM DUAL"
                },
                {
                    "name": "NoUniqueIdentifierCheck",
                    "class": "SQLQuery",
                    "rule": "SELECT \n? AS PrimaryIdentifierType,\n? AS PrimaryIdentifier,\n? AS SecondaryIdentifierType,\n? AS SecondaryIdentifier,\n? AS BirthDate,\n? AS DeathDate,\n? AS Gender,\n? AS Prefix,\n? AS FirstName,\n? AS MiddleName,\n? AS LastName,\n? AS Suffix,\n? AS SourceId\nFROM DUAL\nWHERE\n(SELECT COUNT(*) FROM\n(\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n\tUNION\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n) AS foundUniquePerson) !=1"
                }
            ]     
        },
        { 
            "name": "Snippets",
            "rules": [
                {
                    "name": "IdentityMergeChainDualIdentifiers",
                    "class": "Snippet"
                }
            ]      
        },
        { 
            "name": "AndysRuleSet",
            "rules": [
                {
                    "name": "Create_Table",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE andy \n(\nid INT,\ndata VARCHAR(100)\n);"
                },
                {
                    "name": "Create_Table_2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE andy2\n(\nid INT,\ndata VARCHAR(100),\ndata2 VARCHAR(100)\n);"
                },
                {
                    "name": "Populate",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES ('1', 'Andy1');"
                },
                {
                    "name": "Populate2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES ('2', 'Andy2');"
                },
                {
                    "name": "Populate4",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy2 VALUES (?,?,CONCAT(?,?));"
                },
                {
                    "name": "SELECT_FROM_DUAL",
                    "class": "SQLQuery",
                    "rule": "Select \"3\", \"Andy4\" FROM DUAL"
                },
                {
                    "name": "Populate3",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?,?);"
                },
                {
                    "name": "loop",
                    "class": "SQLQuery",
                    "rule": "SELECT id, data FROM andy"
                }
            ]      
        },
        { 
            "name": "AndysSecondRuleSet",
            "rules": [
                {
                    "name": "DROP_TABLE",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS cool"
                },
                {
                    "name": "DROP_TABLE_cool2",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS cool2"
                },
                {
                    "name": "Create_Table_cool",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE cool ( id INT, data VARCHAR(100));"
                },
                {
                    "name": "Create_Table_cool2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE cool2 (id INT, data VARCHAR(100), id2 INT, data2 VARCHAR(100))"
                },
                {
                    "name": "Populate_cool_1",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool VALUES ('1', 'dataone')"
                },
                {
                    "name": "Populate_cool_2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool VALUES ('2', 'datatwo')"
                },
                {
                    "name": "Select_From_Table_cool",
                    "class": "SQLQuery",
                    "rule": "SELECT id, data FROM cool WHERE id = 1;"
                },
                {
                    "name": "Select_From_Table_cool_2",
                    "class": "SQLQuery",
                    "rule": "SELECT id, data FROM cool WHERE id = 2"
                },
                {
                    "name": "Insert_Into_Cool2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool2 (id, data, id2, data2) VALUES (?,?,?,?)"
                }
            ]       
        },
        { 
            "name": "WaynesFirstRuleSet",
            "rules": [
                {
                    "name": "Create_Table",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE cool\n(\nid int, data VARCHAR(100)\n);"
                },
                {
                    "name": "Populate_Table",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool\nVALUES\n(1, dataone);"
                },
                {
                    "name": "Populate_Table_2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool\nVALUES\n(1, dataone);"
                }
            ]      
        },
        { 
            "name": "PrependJPJ",
            "rules": [
                {
                    "name": "Rule1",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 FROM DUAL"
                },
                {
                    "name": "Rule2",
                    "class": "SQLQuery",
                    "rule": "SELECT \"Andy\" FROM DUAL"
                },
                {
                    "name": "Rule3",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES(?,?)"
                }
            ]      
        },
        { 
            "name": "WaynesDemofilecabinet",
            "rules": [
                {
                    "name": "Create_Table_1",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE demo\n(\nfirst_name VARCHAR(25),\nlast_name VARCHAR(25),\ncity VARCHAR(20),\nstate VARCHAR(2),\nbirth DATE NOT NULL\n);"
                },
                {
                    "name": "Populate_value_1",
                    "class": "SQLQuery",
                    "rule": "SELECT \"Randy\", \"Smith\", \"Tampa\", \"FL\", \"2012-01-18\" FROM DUAL"
                },
                {
                    "name": "Insert_values_1",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO demo\nVALUES (\n?, ?, ?, ?, ?\n);"
                },
                {
                    "name": "Drop_Table",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS demo;"
                },
                {
                    "name": "Update_Table",
                    "class": "SQLQuery",
                    "rule": "UPDATE demo\nSET\ndate = \"2012-01-23\"\nWHERE date = \"2012-01-18\";"
                }
            ]     
        },
        { 
            "name": "Drink_InfoExercise1set",
            "rules": [
                {
                    "name": "drop_output_drinks_table",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS output_drinks;"
                },
                {
                    "name": "create_output_drinks_table",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE output_drinks\n(\nname VARCHAR(25),\ncalcost VARCHAR(5)\n);"
                },
                {
                    "name": "query_results",
                    "class": "SQLQuery",
                    "rule": "SELECT drink_name, ROUND(calories/cost, 2) AS calcost FROM drink_info"
                },
                {
                    "name": "output_to_output_drinks",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO output_drinks\nVALUES (\n?, ?\n);"
                }
            ]     
        },
        {   
            "name": "Drink_InfoExercise2set",
            "rules": [
                {
                    "name": "drop_table_output_drinks2",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS output_drinks2;"
                },
                {
                    "name": "create_table_output_drinks2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE output_drinks2\n(\ndrink_name VARCHAR(25),\ncal_carbs VARCHAR(20)\n);"
                },
                {
                    "name": "query_drink_info",
                    "class": "SQLQuery",
                    "rule": "SELECT drink_name, ROUND(calories/carbs, 2) AS cal_carbs FROM drink_info;"
                },
                {
                    "name": "output_to_output_drinks2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO output_drinks2\nVALUES (\n?, ?\n);"
                }                
            ]   
        },
        {   
            "name": "AndysLoop",
            "rules": [
                {
                    "name": "Drop_Tables_Created",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS loop1, loop2"
                },
                {
                    "name": "Create_Loop_Table_1",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE loop1 (id INT, dataone VARCHAR(20), datatwo VARCHAR(20))"
                },
                {
                    "name": "Create_Loop_Table_2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE loop2 (id INT, dataone VARCHAR(20), datatwo VARCHAR(20))"
                },
                {
                    "name": "Populate_Loop_Table_1",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO loop1 VALUES (1,'a','b'),(2,'c','d'),(3,'e','f'),(4,'g','h'),(5,'i','j'),(6,'k','l')"
                },
                {
                    "name": "Select_where_id_lt_4",
                    "class": "SQLQuery",
                    "rule": "SELECT id, dataone, datatwo FROM loop1 where id < 4"
                },
                {
                    "name": "Populate_Loop_Table_2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO loop2 VALUES (?,?,?)"
                }
            ]      
        },
        {   
            "name": "Drink_infoexerciseset3",
            "rules": [
                {
                    "name": "DROP_TABLE",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS output_drinks3;"
                },
                {
                    "name": "CREATE_TABLE",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE output_drinks3\n(\ndrink_name VARCHAR(30),\ncarbs_cost VARCHAR(30)\n);"
                },
                {
                    "name": "QUERY_drink_info_TABLE",
                    "class": "SQLQuery",
                    "rule": "SELECT drink_name, ROUND(carbs/cost, 2) AS carbs_cost FROM drink_info;"
                },
                {
                    "name": "OUTPUT_TO_NEW_TABLE",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO output_drinks3\nVALUES (\n?,?\n);"
                }
            ]      
        },
        {   
            "name": "AndysThirdRuleSet",
            "rules": [
                {
                    "name": "Create_Table_andy3",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE IF NOT EXISTS andy3 (column1 VARCHAR(20), column2 VARCHAR(20))"
                },
                {
                    "name": "Create_Table_andy4",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE IF NOT EXISTS andy4 (column1 VARCHAR(20), column2 VARCHAR(20))"
                },
                {
                    "name": "Populate_andy3",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy3 VALUES ('1', 'ONE'), ('2', 'two'), ('3', 'three'), ('4', 'four')"
                },
                {
                    "name": "SELECT_WHERE_column1_lt_4",
                    "class": "SQLQuery",
                    "rule": "SELECT column1, column2 FROM andy3 WHERE column1 < 4;"
                },
                {
                    "name": "Populate_andy4_With_Loop_Data",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy4 VALUES (?,?)"
                }                
            ]     
        },
        {   
            "name": "AndysSnippit",
            "rules": [
                {
                    "name": "AndysRuleChain",
                    "class": "Snippet"
                }
            ]    
        },
        {   
            "name": "GEMSLiteHourly",
            "rules": [
                {
                    "name": "GEMS_Recent_Active_Pop",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,p.emplid,\n  CASE\n    WHEN substr(n.national_id, 1, 3)  IN ('949') THEN 13\n    ELSE 1\n  END AS SSN_IDENTIFIER_TYPE\n  , trim(n.national_id) as ssn\n  , to_char(p.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n  , to_char(p.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n  , pde.sex\n  , CASE WHEN TRIM(na.name_title) IS NULL OR na.name_title IS NULL \n    THEN substr(trim(na.name_prefix),1,10)\n    ELSE substr(trim(na.name_title),1,10)\n    END as name_prefix \n  , substr(trim(na.first_name),1,100) as first_name\n  , substr(trim(na.middle_name),1,100) as middle_name\n  , substr(trim(na.last_name),1,100) as last_name\n  , substr(trim(na.name_suffix),1,10) as name_suffix\n  , 12 AS gems_source_id\n  from ps_person p\n  join ps_names na on na.emplid = p.emplid\n  left outer join (select pde1.emplid, pde1.lastupddttm, pde1.sex from ps_pers_data_effdt pde1 \n         where pde1.effdt = (select max(pde2.effdt) from ps_pers_data_effdt pde2 where pde2.emplid = pde1.emplid and pde2.effdt <= sysdate)\n       ) pde on pde.emplid = p.emplid\n  left outer join ps_pers_nid n on n.emplid = p.emplid and n.country = 'USA' and n.national_id_type = 'PR'\n  where SUBSTR(p.EMPLID,1,5) = '00000'  \n  AND REGEXP_LIKE(p.emplid, '^[[:digit:]]{11}$') \n  AND na.name_type = 'PRI'\n  AND na.effdt = (select max(na2.effdt) from ps_names na2 where na2.emplid = na.emplid and na2.name_type = na.name_type and na2.effdt <= sysdate)\n  AND TRIM(na.last_name) IS NOT NULL\n  AND ( p.birthdate IS NOT NULL OR TRIM(n.national_id) IS NOT NULL )\n and ((p.last_child_upddtm > (sysdate - 45) or na.lastupddttm > (sysdate - 45) or pde.lastupddttm > (sysdate - 45) or n.lastupddttm > (sysdate - 45))\n      or p.emplid in ('00000064435'))\n  ORDER BY p.emplid desc"
                },
                {
                    "name": "CIMS_PR_Identity_Merge",
                    "class": "SQLQuery",
                    "rule": "CALL cims_pr.idr_identity_merge(?,?,?,?,?,?,?,?,?,?,?,?,?)"
                },
                {
                    "name": "InsertConflicts",
                    "class": "SQLQuery",
                    "rule": "insert ignore into ctx_identifier_conflicts (\n   identifier_type_id,\n   identifier,\n   source_id,\n   current_identity_id,\n   conflicting_identity_id\n) select '42' as id_type_id, \n\t\t\t'DOB+LN+FN dup' as identifier, \n\t\t\tb1.source_id,\n\t\t\tb1.identity_id,\n\t\t\tb2.identity_id\nfrom idr_biodem b1\njoin idr_names na1 on na1.identity_id = b1.identity_id \njoin idr_identifiers e1 on e1.identity_id = b1.identity_id and e1.identifier_type_id not in ( 2, 4, 1, 13, 10, 11, 42 ) and e1.status = 'Active'\nleft outer join idr_identifiers u1 on u1.identity_id = b1.identity_id and u1.identifier_type_id = 2 and u1.status = 'Active'\nleft outer join ctx_identifier_conflicts ic on ic.current_identity_id = b1.identity_id and ic.identifier = 'DOB+LN+FN dup'\nleft outer join idr_identifiers ssn1 on ssn1.identity_id = b1.identity_id and ssn1.identifier_type_id = 1 and ssn1.status = 'Active'\njoin idr_biodem b2 on b2.date_of_birth = b1.date_of_birth and b2.identity_id <> b1.identity_id\njoin idr_names na2 on na2.identity_id = b2.identity_id and na2.lastname = na1.lastname and na2.firstname = na1.firstname\nleft outer join idr_identifiers ssn2 on ssn2.identity_id = b2.identity_id and ssn2.identifier_type_id = 1 and ssn2.status = 'Active'\nwhere (ssn1.identifier IS NULL or ssn2.identifier IS NULL)\nand u1.identity_id IS NULL\nand ic.current_identity_id IS NULL\nand na1.change_id = (select max(naX.change_id) from idr_names naX where naX.identity_id = na1.identity_id and naX.source_id = na1.source_id)\nand na2.change_id = (select max(naY.change_id) from idr_names naY where naY.identity_id = na2.identity_id and naY.source_id = na2.source_id)\ngroup by '42', \n\t\t\t'DOB+LN+FN dup', \n\t\t\tb1.source_id, \n\t\t\tb1.identity_id,\n\t\t\tb2.identity_id\nUNION\nselect '42' as id_type_id, \n\t\t\t'Multiple active SSNs' as identifier, \n\t\t\tssn1.source_id as source_id1,\n\t\t\tssn1.identity_id as ident1,\n\t\t\tssn2.identity_id as ident2\t\nfrom idr_identifiers ssn1\njoin idr_identifiers ssn2 on ssn2.identity_id = ssn1.identity_id \n\t\t\tand ssn2.identifier_type_id = 1\n\t\t\tand ssn2.status = 'Active'\n\t\t\tand ssn2.identifier <> ssn1.identifier\nleft outer join ctx_identifier_conflicts ic on ic.current_identity_id = ssn1.identity_id \n\t\t\tand ic.identifier = 'Multiple active SSNs'\nwhere ssn1.identifier_type_id = 1\nand ssn1.status = 'Active'\nand ic.current_identity_id IS NULL\ngroup by '42', \n\t\t\t'Multiple active SSNs', \n\t\t\tssn1.source_id,\n\t\t\tssn1.identity_id,\n\t\t\tssn2.identity_id\nUNION\nselect '42' as id_type_id, \n\t\t\t'Multiple active EmplIDs' as identifier, \n\t\t\te1.source_id as source_id1,\n\t\t\te1.identity_id as ident1,\n\t\t\te2.identity_id as ident2\nfrom idr_identifiers e1\njoin idr_identifiers e2 on e2.identity_id = e1.identity_id \n\t\t\tand e2.identifier_type_id = e1.identifier_type_id\n\t\t\tand e2.status = e1.status\n\t\t\tand e2.identifier <> e1.identifier\nleft outer join ctx_identifier_conflicts ic on ic.current_identity_id = e1.identity_id \n\t\t\tand ic.identifier = 'Multiple active EmplIDs'\nwhere e1.identifier_type_id = 3\nand e1.status = 'Active'\nand ic.current_identity_id IS NULL\ngroup by '42', \n\t\t\t'Multiple active EmplIDs', \n\t\t\te1.source_id,\n\t\t\te1.identity_id,\n\t\t\te2.identity_id"
                },
                {
                    "name": "ImportIdentityToBaggageClaimGEMS",
                    "class": "Snippet"
                },
                {
                    "name": "Reconcile",
                    "class": "DefinedService"
                },
                {
                    "name": "PrcPersonMerge",
                    "class": "NamedQuery"
                }
            ]    
        },
        {   
            "name": "AndysSnippit2",
            "rules": [
                {
                    "name": "SimpleSelect",
                    "class": "SQLQuery",
                    "rule": "SELECT * FROM andy"
                },
                {
                    "name": "AndysSnippit2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?, ?)"
                },
                {
                    "name": "AndysSnippit2",
                    "class": "Snippet"
                }
            ]     
        },
        {   
            "name": "AndysSnippit3",
            "rules": [
                {
                    "name": "AndysSnippit3_Select",
                    "class": "SQLQuery",
                    "rule": "SELECT * FROM andy"
                },
                {
                    "name": "AndysSnippit3",
                    "class": "Snippet"
                },
                {
                    "name": "InsertIntoTable",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?, ?)"
                }
            ]    
        },
        {   
            "name": "AndysSnippit4",
            "rules": [
                {
                    "name": "AndysSnippitInput",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy\nVALUES (?,?)"
                },
                {
                    "name": "AndysSnippitOutput",
                    "class": "SQLQuery",
                    "rule": "SELECT *\nFROM andy"
                },
                {
                    "name": "AndysSnippit4",
                    "class": "Snippet"
                },
                {
                    "name": "Select",
                    "class": "SQLQuery",
                    "rule": "SELECT *\nFROM andy"
                },
                {
                    "name": "Insert",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?, ?)"
                }
            ]     
        },
        {   
            "name": "ConvertNetidToMail",
            "rules": [
                {
                    "name": "SELECT_jabarthe",
                    "class": "SQLQuery",
                    "rule": "SELECT 'netid', 'mail', 'json', 'jabarthe'\nFROM DUAL"
                },
                {
                    "name": "WsConvertNetidToMail",
                    "class": "DefinedService",
                    "method": "GET",
                    "authType": "CAS",
                    "parse": "JSON",
                    "url": "https://netid.usf.edu/nams/ws_convert",
                    "user": "casuser",
                    "password": "caspassword"
                },
                {
                    "name": "INSERT_jabarthe",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO ConvertNetidToMail/nVALUES (?, ?, ?)"
                }                
            ]   
        },
        {   
            "name": "PR-Create-Stg_VIP",
            "rules": [
                {
                    "name": "SELECT_jabarthe",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE IF NOT EXISTS staging.stg_vip ( \n  vipid integer(11) NULL COMMENT 'Directly from NAMS VIP table',\n  vip_created_dt timestamp NULL COMMENT 'From NAMS VIP table',\n  vrs_status varchar(1) NULL COMMENT 'From NAMS VIP_RES_SET table',\n  raw_ssn integer(11) NULL COMMENT 'Directly from NAMS NAMES table',\n  id_ssn varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  biodem_dob date NULL COMMENT 'From NAMS VIP table for matching idr_biodem birthdate',\n  biodem_dod date NULL DEFAULT NULL COMMENT 'Not in NAMS',\n  biodem_gender varchar(1) NULL DEFAULT NULL COMMENT 'Not in NAMS',\n  raw_lname varchar(256) NULL COMMENT 'Directly from NAMS VIP table',\n  names_last varchar(100) NULL COMMENT 'For maching on idr_names',\n  raw_fname varchar(256) NULL COMMENT 'Directly from NAMS VIP table',\n  names_first varchar(100) NULL COMMENT 'For maching on idr_names',\n  raw_mname varchar(256) NULL COMMENT 'Directly from NAMS VIP table',\n  names_middle varchar(100) NULL COMMENT 'For maching on idr_names',\n  names_prefix varchar(10) NULL DEFAULT NULL COMMENT 'Not in NAMS',\n  raw_gen varchar(4) NULL COMMENT 'Directly from NAMS NAMES table',\n  names_suffix varchar(10) NULL COMMENT 'For maching on idr_names',\n  confid_ind varchar(1) NULL DEFAULT NULL COMMENT 'Copy from NAMS NAMES since not in VIP',\n  ethn_code varchar(2) NULL COMMENT 'Not in NAMS for VIPs',\n  citz_code varchar(2) NULL COMMENT 'Not in NAMS for VIPs',\n  raw_pidm integer(11) NULL COMMENT 'Directly from NAMS OASIS table',\n  id_pidm varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  raw_usfid varchar(9) NULL COMMENT 'Directly from NAMS OASIS table',\n  id_usfid varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  raw_emplid integer(11) NULL COMMENT 'Directly from NAMS GEMS table',\n  id_emplid varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  role_n_name varchar(50) NULL COMMENT 'Directly from NAMS NAMES and ROLES tables',\n  activity_date timestamp NOT NULL DEFAULT now() COMMENT 'When inserted',\n  comments254 varchar(255) NULL DEFAULT NULL COMMENT 'Placeholder if later need to pickup more columns from NAMS',\n  INDEX idx_vipid ( vipid ),\n  INDEX idx_id_ssn ( id_ssn ),\n  INDEX idx_id_pidm ( id_pidm ),\n  INDEX idx_id_usfid ( id_usfid ),\n  INDEX idx_id_emplid ( id_emplid )\n)"
                },
                {
                    "name": "PR-Trunc-Stg_VIP",
                    "class": "SQLQuery",
                    "rule": "TRUNCATE TABLE staging.stg_vip"
                },
                {
                    "name": "VIP-Get-Idents",
                    "class": "SQLQuery",
                    "rule": "SELECT DISTINCT\n\tv.vipid \n\t, v.created_dt\n\t, vrs.status\n\t, na.ssn \n  , CASE WHEN na.ssn > 999999 and na.ssn < 900000000 THEN lpad(na.ssn, 9, '0') ELSE NULL END \n\t, v.dob\n\t, v.lname \n  , CASE WHEN length( v.lname ) > 0 THEN TRIM(substr( v.lname, 1, 100 )) ELSE NULL END\n\t, v.fname \n  , CASE WHEN length( v.fname ) > 0 THEN TRIM(substr( v.fname, 1, 100 )) ELSE NULL END\n\t, v.mname \n  , CASE WHEN length( v.mname ) > 0 THEN TRIM(substr( v.mname, 1, 100 )) ELSE NULL END\n\t, na.gen \n  , CASE WHEN length( na.gen ) > 0 THEN TRIM(SUBSTR( na.gen, 1, 10 )) ELSE NULL END\n\t, CASE WHEN na.privacy = 255 THEN 'Y' ELSE 'N' END \n\t, o.pidm \n  , CASE WHEN o.pidm > 0 THEN o.pidm ELSE NULL END \n\t, o.usfid \n  , CASE WHEN length(o.usfid)=9 and substr(o.usfid,1,1)='U' THEN o.usfid ELSE NULL END\n\t, g.emplid \n  , CASE WHEN g.emplid > 0 and g.emplid < 1000000 THEN lpad(g.emplid, 11, '0') ELSE NULL END\n\t, concat(concat(na.role,'-'),r.name)\nFROM vip v\nLEFT OUTER JOIN vip_res_set vrs on vrs.vipid = v.vipid\nLEFT OUTER JOIN names na on na.badge = v.vipid\nLEFT OUTER JOIN vip_resource vr on vr.rid = vrs.rid \nLEFT OUTER JOIN oasis o on o.badge = na.badge\nLEFT OUTER JOIN gems g on g.badge = na.badge\nLEFT OUTER JOIN roles r on r.code = na.role\nWHERE ( vr.label = 'USFID'\nAND vrs.status = 'P' \n) OR v.vipid in ( 1798583, 1011799, 1319044, 1470331, 1662969 )\norder by v.created_dt"
                },
                {
                    "name": "PR-Insert-Stg_VIP",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO staging.stg_vip (\n  vipid,\n  vip_created_dt,\n  vrs_status,\n  raw_ssn,\n  id_ssn,\n  biodem_dob,\n  raw_lname,\n  names_last,\n  raw_fname,\n  names_first,\n  raw_mname,\n  names_middle,\n  raw_gen,\n  names_suffix,\n  confid_ind,\n  raw_pidm,\n  id_pidm,\n  raw_usfid,\n  id_usfid,\n  raw_emplid,\n  id_emplid,\n  role_n_name\n) VALUES (\n?, ?, ?, ?, ?, \n?, ?, ?, ?, ?, \n?, ?, ?, ?, ?, \n?, ?, ?, ?, ?, \n?, ? )"
                },
                {
                    "name": "PR-Inactivate-VIPID-SSN",
                    "class": "SQLQuery",
                    "rule": "SELECT ssn.source_id, ssn.identifier, ssn.identifier_type_id, 0\nFROM pro_identifiers vipid\nJOIN pro_identifiers ssn on ssn.person_id = vipid.person_id and ssn.identifier_type_id = 1 /*SSN*/ and \nssn.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nLEFT OUTER JOIN staging.stg_vip sv on sv.vipid = vipid.identifier and sv.id_ssn = ssn.identifier\nWHERE vipid.identifier_type_id = 18\nAND vipid.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nAND ssn.source_id = vipid.source_id\nAND sv.vipid IS NULL \nAND 0 < (select count(*) from staging.stg_vip)"
                },
                {
                    "name": "ProIdentifierStatusSet",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "PR-Inactivate-VIPID-HRPRNs",
                    "class": "SQLQuery",
                    "rule": "SELECT hrprn.source_id, hrprn.identifier, hrprn.identifier_type_id, 0\nFROM pro_identifiers vipid\nJOIN pro_identifiers hrprn on hrprn.person_id = vipid.person_id and hrprn.identifier_type_id = 13 /*hrprn*/ and \nhrprn.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nLEFT OUTER JOIN staging.stg_vip sv on sv.vipid = vipid.identifier and sv.id_ssn = hrprn.identifier\nWHERE vipid.identifier_type_id = 18\nAND vipid.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nAND hrprn.source_id = vipid.source_id\nAND sv.vipid IS NULL \nAND 0 < (select count(*) from staging.stg_vip)"
                },
                {
                    "name": "PR-Inactivate-VIPIDs",
                    "class": "SQLQuery",
                    "rule": "SELECT vipid.source_id, vipid.identifier, vipid.identifier_type_id, 0\nFROM pro_identifiers vipid\nLEFT OUTER JOIN staging.stg_vip sv on sv.vipid = vipid.identifier\nWHERE vipid.identifier_type_id = 18\nAND vipid.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nAND sv.vipid IS NULL \nAND 0 < (select count(*) from staging.stg_vip)"
                },
                {
                    "name": "PR-IdentMergeofVIPs",
                    "class": "SQLQuery",
                    "rule": "TRUNCATE TABLE staging.stg_vip"
                }
                
                
                
                
27	9	PR-IdentMergeofVIPs		1	SELECT DISTINCT 18 as vipid_identifier_type\n       , sv.vipid\n       , CASE WHEN substr(sv.id_ssn, 1, 3) IN ('949') THEN 13 ELSE 1 END as ssn_identifier_type\n       , sv.id_ssn\n       , sv.biodem_dob\n       , sv.biodem_dod\n       , sv.biodem_gender\n       , sv.names_prefix\n       , sv.names_first\n       , sv.names_middle\n       , sv.names_last\n       , sv.names_suffix\n       , 17 as vip_source_id\nFROM staging.stg_vip sv\nWHERE sv.vipid IS NOT NULL\nAND sv.names_first IS NOT NULL\nAND sv.names_last IS NOT NULL\nAND ( sv.biodem_dob IS NOT NULL or sv.id_ssn IS NOT NULL )\nORDER BY sv.vipid DESC	
27	10	CIMS_PR Identity Merge		1	CALL cims_pr.idr_identity_merge(?,?,?,?,?,?,?,?,?,?,?,?,?)	
27	11	PR-AddVIPConflicts		1	insert ignore into ctx_identifier_conflicts (
   identifier_type_id,
   identifier,
   source_id,
   current_identity_id,
   conflicting_identity_id
) select '42', 
      concat(sv.id_usfid, ' USFID only in VIP'),
      min(id.source_id),
      id.identity_id,
      id.identity_id
from idr_identifiers id
join staging.stg_vip sv on sv.vipid = id.identifier
left outer join idr_identifiers usfid on usfid.identity_id = id.identity_id and usfid.identifier_type_id = 2 /*USFID*/ and usfid.status = 'Active'
left outer join idr_identifiers usfid2 on usfid2.identifier = sv.id_usfid and usfid2.identifier_type_id = 2 /*USFID*/ and usfid2.status = 'Active'
where id.identifier_type_id = 18 /* VIPID */
and id.status = 'Active'
and usfid.identifier IS NULL
and sv.id_usfid IS NOT NULL
and usfid2.identifier IS NOT NULL
and not exists (select 'alreadythere' from ctx_identifier_conflicts ic 
      where ic.identifier = concat(sv.id_usfid, ' USFID only in VIP')
      and ic.current_identity_id = id.identity_id 
          )
group by '42', 
      concat(sv.id_usfid, ' USFID only in VIP'),
      id.identity_id,
      id.identity_id
UNION
select '42', 
      concat(sv.id_emplid, ' EmplID only in VIP'), 
      min(id.source_id),
      id.identity_id,
      id.identity_id
from idr_identifiers id
join stg_vip sv on sv.vipid = id.identifier 
left outer join idr_identifiers emplid on emplid.identity_id = id.identity_id and emplid.identifier_type_id = 3 and emplid.status = 'Active'
left outer join idr_identifiers emplid2 on emplid2.identifier = sv.id_emplid and emplid2.identifier_type_id = 3 and emplid2.status = 'Active'
where id.identifier_type_id = 18 /* VIPID */
and id.status = 'Active'
and sv.id_emplid IS NOT NULL
and emplid2.identifier IS NOT NULL
and (emplid.identifier IS NULL or emplid.identifier <> sv.id_emplid)
and not exists (select 'alreadythere' from ctx_identifier_conflicts ic 
      where ic.identifier = concat(sv.id_emplid, ' EmplID only in VIP')
      and ic.current_identity_id = id.identity_id 
          )
group by '42', 
      concat(sv.id_emplid, ' EmplID only in VIP'), 
      id.identity_id,
      id.identity_id	
27	12	InsertConflicts		1	insert ignore into ctx_identifier_conflicts (
   identifier_type_id,
   identifier,
   source_id,
   current_identity_id,
   conflicting_identity_id
) select '42' as id_type_id, 
			'DOB+LN+FN dup' as identifier, 
			b1.source_id,
			b1.identity_id,
			b2.identity_id
from idr_biodem b1
join idr_names na1 on na1.identity_id = b1.identity_id 
join idr_identifiers e1 on e1.identity_id = b1.identity_id and e1.identifier_type_id not in ( 2, 4, 1, 13, 10, 11, 42 ) and e1.status = 'Active'
left outer join idr_identifiers u1 on u1.identity_id = b1.identity_id and u1.identifier_type_id = 2 and u1.status = 'Active'
left outer join ctx_identifier_conflicts ic on ic.current_identity_id = b1.identity_id and ic.identifier = 'DOB+LN+FN dup'
left outer join idr_identifiers ssn1 on ssn1.identity_id = b1.identity_id and ssn1.identifier_type_id = 1 and ssn1.status = 'Active'
join idr_biodem b2 on b2.date_of_birth = b1.date_of_birth and b2.identity_id <> b1.identity_id
join idr_names na2 on na2.identity_id = b2.identity_id and na2.lastname = na1.lastname and na2.firstname = na1.firstname
left outer join idr_identifiers ssn2 on ssn2.identity_id = b2.identity_id and ssn2.identifier_type_id = 1 and ssn2.status = 'Active'
where (ssn1.identifier IS NULL or ssn2.identifier IS NULL)
and u1.identity_id IS NULL
and ic.current_identity_id IS NULL
and na1.change_id = (select max(naX.change_id) from idr_names naX where naX.identity_id = na1.identity_id and naX.source_id = na1.source_id)
and na2.change_id = (select max(naY.change_id) from idr_names naY where naY.identity_id = na2.identity_id and naY.source_id = na2.source_id)
group by '42', 
			'DOB+LN+FN dup', 
			b1.source_id, 
			b1.identity_id,
			b2.identity_id
UNION
select '42' as id_type_id, 
			'Multiple active SSNs' as identifier, 
			ssn1.source_id as source_id1,
			ssn1.identity_id as ident1,
			ssn2.identity_id as ident2	
from idr_identifiers ssn1
join idr_identifiers ssn2 on ssn2.identity_id = ssn1.identity_id 
			and ssn2.identifier_type_id = 1
			and ssn2.status = 'Active'
			and ssn2.identifier <> ssn1.identifier
left outer join ctx_identifier_conflicts ic on ic.current_identity_id = ssn1.identity_id 
			and ic.identifier = 'Multiple active SSNs'
where ssn1.identifier_type_id = 1
and ssn1.status = 'Active'
and ic.current_identity_id IS NULL
group by '42', 
			'Multiple active SSNs', 
			ssn1.source_id,
			ssn1.identity_id,
			ssn2.identity_id
UNION
select '42' as id_type_id, 
			'Multiple active EmplIDs' as identifier, 
			e1.source_id as source_id1,
			e1.identity_id as ident1,
			e2.identity_id as ident2
from idr_identifiers e1
join idr_identifiers e2 on e2.identity_id = e1.identity_id 
			and e2.identifier_type_id = e1.identifier_type_id
			and e2.status = e1.status
			and e2.identifier <> e1.identifier
left outer join ctx_identifier_conflicts ic on ic.current_identity_id = e1.identity_id 
			and ic.identifier = 'Multiple active EmplIDs'
where e1.identifier_type_id = 3
and e1.status = 'Active'
and ic.current_identity_id IS NULL
group by '42', 
			'Multiple active EmplIDs', 
			e1.source_id,
			e1.identity_id,
			e2.identity_id	
27	13	ImportIdentityToBaggageClaimVIP Snippit		1	DEFINEDSERVICE:ImportIdentityToBaggageClaimVIP	
                
            ]     
        },
        {   
            "name": "OASISLiteHourlyModified",
            "rules": [
                
            ]   
        },
        {   
            "name": "OASISLiteHourly1_5",
            "rules": [
                
            ]    
        },
        {   
            "name": "ToBeDeleted",
            "rules": [
                
            ]     
        },
        {   
            "name": "HSCDW_Import2x",
            "rules": [
                
            ]     
        },
        {   
            "name": "AddConflicts2x",
            "rules": [
                
            ]   
        },
        {   
            "name": "OASIS_Import2x",
            "rules": [
                
            ]   
        },
        {   
            "name": "OasisImportSourceandCurrentTimestamp",
            "rules": [
                
            ]   
        },
        {   
            "name": "Oasisp-create2x",
            "rules": [
                
            ]     
        },
        {   
            "name": "PeopleAdminBCToGEMS_2x",
            "rules": [
                
            ]   
        }
    ]
}

	at grails.converters.JSON.parse(JSON.java:281)
	at BootStrap$_closure1.doCall(BootStrap.groovy:28)
	at grails.util.Environment.evaluateEnvironmentSpecificBlock(Environment.java:308)
	at grails.util.Environment.executeForEnvironment(Environment.java:301)
	at grails.util.Environment.executeForCurrentEnvironment(Environment.java:277)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
	at java.lang.Thread.run(Thread.java:680)
2013-05-09 11:55:57,736 [localhost-startStop-1] ERROR StackTrace  - Full Stack Trace:
org.codehaus.groovy.grails.web.converters.exceptions.ConverterException: Error parsing JSON
	at grails.converters.JSON.parse(JSON.java:290)
	at BootStrap$_closure1.doCall(BootStrap.groovy:28)
	at grails.util.Environment.evaluateEnvironmentSpecificBlock(Environment.java:308)
	at grails.util.Environment.executeForEnvironment(Environment.java:301)
	at grails.util.Environment.executeForCurrentEnvironment(Environment.java:277)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
	at java.lang.Thread.run(Thread.java:680)
Caused by: org.codehaus.groovy.grails.web.json.JSONException: Expected a ',' or ']' at character 59794 of {    
    "ruleSets": [
        {   
            "name": "debugRuleSet",
            "rules": [
                {
                    "name": "GEMS_test_rule_2",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "GEMS_test_rule",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "GEMS_test_rule_again",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "GEMS_test_rule_again_2",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN LENGTH(TRIM(pd.name_title)) < 1 OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n\tORDER BY ssn,pd.emplid"
                },
                {
                    "name": "Dummy_Insert_Input_Reorder",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO test_dump_min (identifier_type_id,identifier,ssn_identifier_type_id,ssn,birthdate,deathdate,sex,prefix,firstName,middleName,lastName,suffix,source_id) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)"
                },
                {
                    "name": "Dummy_INSERT",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO test_dump (\n\tidentifier_type_id,\n\tidentifier,\n\tssn_identifier_type_id,\n\tssn,\n\tbirthdate,\n\tdeathdate,\n\tsex,prefix,\n\tfirstName,\n\tmiddleName,\n\tlastName,\n\tsuffix,\n\tsource_id) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)"
                },
                {
                    "name": "This_is_a_bum_rule",
                    "class": "SQLQuery",
                    "rule": "SELECT '1' FROM DUAL"
                },
                {
                    "name": "This_is_a_bum_PA_rule",
                    "class": "SQLQuery",
                    "rule": "SELECT loaded_dt FROM people_admin"
                },
                {
                    "name": "BC_Select",
                    "class": "SQLQuery",
                    "rule": "SELECT ssn,birthdate,firstName,lastName FROM test_dump_min"
                },
                {
                    "name": "Select_Test",
                    "class": "SQLQuery",
                    "rule": "SELECT 'James','Patrick','Jones' FROM DUAL"
                },
                {
                    "name": "Select_Prepare",
                    "class": "SQLQuery",
                    "rule": "SELECT ?,?,? FROM DUAL"
                },
                {
                    "name": "Append_Wilhoit",
                    "class": "SQLQuery",
                    "rule": "SELECT 'Wilhoit' FROM DUAL"
                },
                {
                    "name": "DROP_TABLE_cool2",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE cool2"
                },
                {
                    "name": "adsf",
                    "class": "SQLQuery",
                    "rule": "SELECT *\nFROM Andy"
                }
                
            ]
        },
        {
            "name": "GEMS_Silver_Rule_Set_2_x",
            "rules": [
                {
                    "name": "GEMS_Silver_Rule_Population",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN TRIM(pd.name_title) IS NULL OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n        AND SUBSTR(pd.EMPLID,1,5) = '00000'  \n        AND REGEXP_LIKE(pd.emplid, '^[[:digit:]]{11}$') \n\tORDER BY pd.emplid desc"
                },
                {
                    "name": "Update_Active_Status_Emplid",
                    "class": "SQLQuery",
                    "rule": "SELECT identifier\n\tFROM pro_identifiers \n\tWHERE identifier_type_id=3 AND source_id=12\n\tORDER BY identifier"
                },
                {
                    "name": "Update_Active_Status_SSN_GEMS",
                    "class": "SQLQuery",
                    "rule": "SELECT identifier\n\tFROM pro_identifiers \n\tWHERE identifier_type_id=1 AND source_id =12\n\tORDER BY identifier"
                },
                {
                    "name": "GEMS_HRPR_Iterator",
                    "class": "SQLQuery",
                    "rule": "SELECT identifier\n\tFROM pro_identifiers \n\tWHERE identifier_type_id=13 AND source_id =12\n\tORDER BY identifier"
                },
                {
                    "name": "GEMS_SSNExistTest",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 AS SSN_IDENTIFIER_TYPE,COUNT(*) AS GEMS_SSNCount\n\tFROM ps_pers_nid n\n\tWHERE n.country(+) = 'USA'\n\tAND n.national_id_type(+) = 'PR'\n\tAND trim(n.national_id) = ?"
                },
                {
                    "name": "GEMS_HRPRExistTest",
                    "class": "SQLQuery",
                    "rule": "SELECT 13 AS HRPR_IDENTIFIER_TYPE,COUNT(*) AS HRPRCount\n\tFROM ps_pers_nid n\n\tWHERE n.country(+) = 'USA'\n\tAND n.national_id_type(+) = 'PR'\n\tAND trim(n.national_id) = ?"
                },
                {
                    "name": "Emplid_Exist_Test",
                    "class": "SQLQuery",
                    "rule": "SELECT 3 AS EMPL_IDENTIFIER_TYPE, COUNT(*) AS EmplidCount\n\tFROM ps_personal_data pd\n\tWHERE pd.emplid=?"
                },
                {
                    "name": "Set_Empl_Active_Flag",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET status='Active',\n\tsource_id=?\n\tWHERE identifier=?\n\tAND identifier_type_id=?\n\tAND identifier_status_id != (\n\t\tSELECT identifier_status_id \n\t\t\tFROM identifier_statuses \n\t\t\tWHERE `name`='Active'\n\t)\n\tAND ? > 0"
                },
                {
                    "name": "Set_Empl_Inactive_Flag",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET status='Inactive'\n\tWHERE source_id=?\n\tAND identifier=?\n\tAND identifier_type_id=?\n\tAND identifier_status_id != (\n\t\tSELECT identifier_status_id \n\t\t\tFROM identifier_statuses \n\t\t\tWHERE `name`='Inactive'\n\t)\n\tAND ? < 1"
                },
                {
                    "name": "Add_GEMS_Source",
                    "class": "SQLQuery",
                    "rule": "SELECT 14 AS source_id FROM DUAL"
                },
                {
                    "name": "BaggageClaimSORCreate",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE `incomming_sor_records` (\n  `primary_identifier_type_id` bigint(18) unsigned DEFAULT NULL,\n  `primary_identifier` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `secondary_identifier_type_id` bigint(18) unsigned DEFAULT NULL,\n  `secondary_identifier` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `birthday` date DEFAULT NULL,\n  `deathday` date DEFAULT NULL,\n  `gender` varchar(10) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `prefix` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `firstname` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `middlename` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `lastname` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `suffix` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,\n  `baggage_source_id` bigint(18) unsigned DEFAULT NULL,\n  `status` enum('Valid','Invalid') COLLATE utf8_unicode_ci DEFAULT NULL,\n  KEY `incomming_sor_records_baggage_source_id` (`baggage_source_id`),\n  CONSTRAINT `incomming_sor_records_baggage_source_id` FOREIGN KEY (`baggage_source_id`) REFERENCES `baggage_sources` (`baggage_source_id`) ON DELETE SET NULL ON UPDATE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;"
                },
                {
                    "name": "Add_new_BC_Source",
                    "class": "SQLQuery",
                    "rule": "INSERT IGNORE INTO baggage_sources (baggage_source_id,cims_pr_source_id,name,format) \nVALUES ('5','14','GEMS-DATABASE','DATABASE')"
                },
                {
                    "name": "Update_SOR",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO incomming_sor_records\n(primary_identifier_type_id,primary_identifier,secondary_identifier_type_id,\nsecondary_identifier,birthday,deathday,gender,prefix,firstname,middlename,lastname,\nsuffix,baggage_source_id,status) VALUES\n(?,?,?,?,?,?,?,?,?,?,?,?,5,'Valid')"
                },
                {
                    "name": "GEMS_Recent_Activ_Pop",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,pd.emplid,\n\tCASE\n\t\tWHEN substr(n.national_id, 1, 3)  IN ('849') THEN 13\n\t\tELSE 1\n\tEND AS SSN_IDENTIFIER_TYPE\n\t, trim(n.national_id) as ssn\n\t, to_char(pd.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n\t, to_char(pd.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n\t, pd.sex\n\t, CASE WHEN TRIM(pd.name_title) IS NULL OR pd.name_title IS NULL THEN pd.name_prefix\n\t\tELSE pd.name_title\n\tEND as name_prefix \n\t, trim(pd.first_name) as first_name\n\t, trim(pd.middle_name) as middle_name\n\t, trim(pd.last_name) as last_name\n\t, pd.name_suffix\n\t, 14 AS gems_source_id\n\tfrom ps_personal_data pd,\n\tps_pers_nid n\n\twhere n.emplid(+) = pd.emplid\n\tand n.country(+) = 'USA'\n\tand n.national_id_type(+) = 'PR'\n        AND SUBSTR(pd.EMPLID,1,5) = '00000'  \n        AND REGEXP_LIKE(pd.emplid, '^[[:digit:]]{11}$') \nand (pd.lastupddttm > (sysdate - 1) or n.lastupddttm > (sysdate - 1))\n\tORDER BY pd.emplid desc"
                },
                {
                    "name": "Reassemble_Params",
                    "class": "SQLQuery",
                    "rule": "SELECT idinfo.source_id,idinfo.identifier_type_id,idinfo.identifier,idinfo.source_id\n\tFROM\n\t\t(\n\t\t\tSELECT \n\t\t\t\t? AS identifier_type_id,\n\t\t\t\t? AS identifier,\n\t\t\t\t? AS ssn_identifier_type_id,\n\t\t\t\t? AS ssn,\n\t\t\t\t? AS birthdate,\n\t\t\t\t? AS deathdate,\n\t\t\t\t? AS gender,\n\t\t\t\t? AS prefix,\n\t\t\t\t? AS first_name,\n\t\t\t\t? AS middle_name,\n\t\t\t\t? AS last_name,\n\t\t\t\t? AS suffix,\n\t\t\t\t? AS source_id\n\t\t\tFROM DUAL\n\t\t) AS idinfo"
                },
                {
                    "name": "Set_the_authoritative_source",
                    "class": "SQLQuery",
                    "rule": "UPDATE idr_identifiers\n\tSET status='Active' AND source_id=?\n\tWHERE identifier_type_id=? AND identifier=? AND source_id != ?"
                },
                {
                    "name": "Set_the_Gems_import_source",
                    "class": "SQLQuery",
                    "rule": "SELECT 5 AS importSourceId FROM DUAL"
                }
            ]  
        },
        {
            "name": "CIMS_PRStoredProcedures2x",
            "rules": [
                {
                    "name": "PrsBiodemUpdater",
                    "class": "NamedQuery",
                    "rule": "personId,birthday,deathday,gender,sourceId"
                },
                {
                    "name": "PrsNamesUpdater",
                    "class": "NamedQuery",
                    "rule": "personId,prefix,firstname,middlename,lastname,suffix,sourceId"
                },
                {
                    "name": "PrcPersonSilverRuleCheck",
                    "class": "NamedQuery",
                    "rule": "ssn,birthday,firstname,lastname"
                },
                {
                    "name": "PrsBiodemValidPastDate",
                    "class": "NamedQuery",
                    "rule": "dateString"
                },
                {
                    "name": "PrcPersonByIdentifier",
                    "class": "NamedQuery",
                    "rule": "identifierTypeId,identifier"
                },
                {
                    "name": "PrcPersonsCreateNew",
                    "class": "NamedQuery",
                    "rule": "sourceId"
                },
                {
                    "name": "PrcPersonMerge",
                    "class": "NamedQuery",
                    "rule": "primaryIdentifierTypeId, primaryIdentifier,secondaryIdentifierTypeId,secondaryIdentifier,birthday,deathday,gender,prefix,firstname,middlename,lastname,suffix,sourceId"
                },
                {
                    "name": "ProIdentifierStatusSet",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "ImpRepositoryIdentityNew",
                    "class": "SQLQuery",
                    "rule": "SELECT imp_repository_identity_new(?) FROM DUAL"
                },
                {
                    "name": "ImpRepositoryMerge",
                    "class": "NamedQuery",
                    "rule": "importSourceId,firstname,middlename,lastname,gender,birthday,unparsedLine"
                }
            ]   
        },
        {
            "name": "CIMS_PRBaggageClaimMerge",
            "rules": [
                {
                    "name": "PeopleAdmin_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT loaded_dt,\n\thpid AS HPID,\n\tIF(ssn = 'No Response','',REPLACE(ssn,'-','')) AS SSN,\n\tIF(LEFT(UPPER(usfid),1) != 'U','',IF(LENGTH(usfid) = 9,usfid,'')) AS USFID,\n\tIF(emplid = 'No Response','',LPAD(TRIM(emplid),11,'0')) AS EMPLID,\n\tIF(fname = 'No Response','',TRIM(fname)) AS FIRSTNAME,\n\tIF(mname = 'No Response','',TRIM(mname)) AS MIDDLENAME,\n\tIF(lname = 'No Response','',TRIM(lname)) AS LASTNAME,\n\tIF(gender IN('M','F'),gender,'') AS GENDER,\n\tIF(dob = 'No Response',NULL,TRIM(dob)) AS BIRTHDAY,\n\tRTRIM(baggage) AS BAGGAGE\n\tFROM nams.people_admin\n\tWHERE DATE(loaded_dt) != '0000-00-00'"
                },
                {
                    "name": "CardID_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT to_char(ID_ISSUE_DATE,'YYYY-MM-DD') AS IMPORT_DATE,\n\tID_CARD_NUMBER,\n\tNAME_FIRST AS FIRSTNAME,\n\tNAME_MIDDLE AS MIDDLENAME,\n\tNAME_LAST AS LASTNAME,\n\tto_char(BIRTH_DATE,'YYYY-MM-DD') AS BIRTHDAY\n\tFROM ID WHERE ROWNUM < 50"
                },
                {
                    "name": "NAMS_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT \n\tNOW() AS IMPORT_DATE,\n\tn.badge AS NAMSID,\n\tn.fname AS FIRSTNAME,\n\tn.mname AS MIDDLENAME,\n\tn.lname AS LASTNAME,\n\tSTR_TO_DATE(CONCAT('',\n\t\tIF(\n\t\t\t((SELECT COUNT(*) FROM bdays WHERE badge=n.badge AND bday > 0 ORDER BY bdayid DESC LIMIT 1) < 1),\n\t\t\tn.bday,\n\t\t\t(SELECT bday FROM bdays WHERE badge=n.badge AND bday > 0 ORDER BY bdayid DESC LIMIT 1)\n\t\t) \n\t) ,'%Y%m%d') AS BIRTHDAY\n\tFROM names n\n\tWHERE \n\t(SELECT COUNT(*) FROM oasis WHERE badge=n.badge LIMIT 1) > 0 \n\tOR\n\t(SELECT COUNT(*) FROM gems WHERE badge=n.badge LIMIT 1) > 0"
                }
            ]   
        },
        {
            "name": "CIMS_PRBaggageClaimMergeOtherRules",
            "rules": [
                {
                    "name": "People_Admin_Request",
                    "class": "SQLQuery",
                    "rule": "SELECT 2 AS importSourceId,0 AS reconcile FROM DUAL;"
                },
                {
                    "name": "People_Admin_Request",
                    "class": "SQLQuery",
                    "rule": "SELECT 2 AS importSourceId,0 AS reconcile FROM DUAL;"
                },
                {
                    "name": "ImportToBaggageClaim",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "Dummy_ParamCollector_for_ImportToBaggageClaim_Defined_Service_loop",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS baggageClaimIdentityId, CAST(? AS UNSIGNED) AS personId, ? AS importSourceId, ? AS sourceId, ? AS baggageClaimIdentityStatusId, ? AS firstName, ? AS middleName, ? AS lastName, ? AS gender, ? AS dateOfBirth"
                },
                {
                    "name": "AddToBaggageClaim",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "PeopleAdmin_Import_Query",
                    "class": "SQLQuery",
                    "rule": "SELECT \n\t2 AS importSourceId,\n\tIF(fname = 'No Response','',TRIM(fname)) AS FIRSTNAME,\n\tIF(mname = 'No Response','',TRIM(mname)) AS MIDDLENAME,\n\tIF(lname = 'No Response','',TRIM(lname)) AS LASTNAME,\n\tIF(gender IN('M','F'),gender,'') AS GENDER,\n\tIF(dob = 'No Response','',TRIM(REPLACE(dob,'/','-'))) AS BIRTHDAY,\n\tloaded_dt,\n\tCONCAT('[{\"identifier\":\"',hpid,'\",\"identifierType\":{\"identifierTypeId\":\"10\"}},{\"identifier\":\"',IF(ssn = 'No Response','',REPLACE(ssn,'-','')),'\",\"identifierType\":{\"identifierTypeId\":\"1\"}},{\"identifier\":\"',IF(LEFT(UPPER(usfid),1) != 'U','',IF(LENGTH(usfid) = 9,usfid,'')),'\",\"identifierType\":{\"identifierTypeId\":\"2\"}},{\"identifier\":\"',IF(emplid = 'No Response','',LPAD(TRIM(emplid),11,'0')),'\",\"identifierType\":{\"identifierTypeId\":\"3\"}}]') AS baggageClaimIdentifiers,\n\tRTRIM(baggage) AS BAGGAGE\n\tFROM nams.people_admin\n\tWHERE DATE(loaded_dt) != '0000-00-00' LIMIT 10"
                },
                {
                    "name": "Reconcile_Defined_Service",
                    "class": "DefinedService"
                },
                {
                    "name": "ImportIdentityToBaggageClaimPeopleAdmin",
                    "class": "DefinedService"
                },
                {
                    "name": "Prepend_PeopleAdmin_Source",
                    "class": "SQLQuery",
                    "rule": "SELECT 2 AS importSourceId FROM DUAL"
                },
                {
                    "name": "Prepend_Gems_Import_Source",
                    "class": "SQLQuery",
                    "rule": "SELECT 5 AS importSourceId FROM DUAL"
                },
                {
                    "name": "Prepend_Gems_Import_Source_and_Current_Timestamp",
                    "class": "SQLQuery",
                    "rule": "SELECT 5 AS importSourceId,NOW() AS importTimestamp,\"\" AS claimInfo FROM DUAL"
                },
                {
                    "name": "Prepend_VIP_Import_Source_and_Current_Timestamp",
                    "class": "SQLQuery",
                    "rule": "SELECT 8 AS importSourceId,NOW() AS importTimestamp FROM DUAL"
                },
                {
                    "name": "ImportIdentityToBaggageClaimHealth",
                    "class": "DefinedService"
                },
                {
                    "name": "ImportIdentityToBaggageClaimGEMS",
                    "class": "DefinedService"
                }
            ]    
        },
        {
            "name": "NamsDefinedServices",
            "rules": [
                {
                    "name": "NetIDToEMail_Defaults",
                    "class": "SQLQuery",
                    "rule": "SELECT 'netid' AS submit_type,'mail' AS return_type,'json' AS `return`,? AS `value` FROM DUAL"
                },
                {
                    "name": "WsConvertNetidToMail",
                    "class": "DefinedService"
                }
            ]     
        },
        { 
            "name": "UnumberDefinedServices",
            "rules": [
                {
                    "name": "Unumber_Defaults",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 AS personId,2 AS personAllocatedId,2 AS identifierTypeId, ? AS amount FROM DUAL"
                },
                {
                    "name": "ReallocatePoolIdentifiers",
                    "class": "DefinedService"
                }
            ]      
        },
        { 
            "name": "IdentityMergeRules",
            "rules": [
                {
                    "name": "Unumber_Defaults",
                    "class": "SQLQuery",
                    "rule": "SELECT \n? AS PrimaryIdentifierType,\n? AS PrimaryIdentifier,\n? AS SecondaryIdentifierType,\n? AS SecondaryIdentifier,\n? AS BirthDate,\n? AS DeathDate,\n? AS Gender,\n? AS Prefix,\n? AS FirstName,\n? AS MiddleName,\n? AS LastName,\n? AS Suffix,\n? AS SourceId\nFROM DUAL\t"
                },
                {
                    "name": "Set_Past_year_Limit",
                    "class": "SQLQuery",
                    "rule": "SELECT 150 AS maxyears FROM DUAL"
                },
                {
                    "name": "PrsBiodemValidPastDateLimit",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "PrsBiodemValidPastDate",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "FilterIdentifier",
                    "class": "DefinedService"
                },
                {
                    "name": "UniqueIdentifierMatch",
                    "class": "SQLQuery",
                    "rule": "SELECT foundUniquePerson.person_id AS personId,\n? AS PrimaryIdentifierType,\n? AS PrimaryIdentifier,\n? AS SecondaryIdentifierType,\n? AS SecondaryIdentifier,\n? AS BirthDate,\n? AS DeathDate,\n? AS Gender,\n? AS Prefix,\n? AS FirstName,\n? AS MiddleName,\n? AS LastName,\n? AS Suffix,\n? AS SourceId\nFROM (\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n\tUNION\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n) AS foundUniquePerson HAVING COUNT(*)=1"
                },
                {
                    "name": "ValidIdentfiersSet",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS person_id,\nidentifiers.identifier_type_id,\nidentifiers.identifier,\n? AS SourceId\nFROM (\n\tSELECT identifier_type_id,identifier FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0\n\tUNION\n\tSELECT identifier_type_id,identifier FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0\n) AS identifiers"
                },
                {
                    "name": "IdentifierSourceUpdate",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET source_id=?\n\tWHERE  source_id !=? AND identifier_type_id=? AND identifier=? AND person_id=?"
                },
                {
                    "name": "IdentifierReallocationUpdate",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET person_id = ?\n\tWHERE identifier_type_id=? AND identifier=? AND person_id !=? AND identifier_status_id != (SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active');"
                },
                {
                    "name": "IdentifierStatusUpdate",
                    "class": "SQLQuery",
                    "rule": "UPDATE pro_identifiers\n\tSET identifier_status_id = (SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active') AND merge_date=NOW()\n\tWHERE identifier_type_id=? AND identifier=? AND person_id=? AND identifier_status_id != (SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active');"
                },
                {
                    "name": "NameChangeDetection",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS prefix,? AS FirstName,? AS MiddleName,? AS LastName,? AS Suffix,? AS SourceId,? AS personId\nFROM DUAL WHERE \n(SELECT COUNT(*) FROM (\n\tSELECT prefix,firstname,middlename,lastname,suffix FROM prs_names WHERE source_id=? AND person_id=? ORDER BY last_changed DESC LIMIT 1\n) AS lastNameBySource\nWHERE prefix=? AND firstname=? AND middlename=? AND lastname=? AND suffix=?) < 1"
                },
                {
                    "name": "NameCreateNew",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO prs_names (prefix,firstname,middlename,lastname,suffix,source_id,person_id,last_changed) VALUES(?,?,?,?,?,?,?,NOW())"
                },
                {
                    "name": "BioDemChangeDetection",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS date_of_birth,? AS date_of_death,? AS gender,? AS SourceId,? AS PersonId\nFROM DUAL WHERE \n(SELECT COUNT(*) FROM (\n\tSELECT date_of_birth,date_of_death,gender FROM prs_biodem WHERE source_id=? AND person_id=? ORDER BY last_changed DESC LIMIT 1\n) AS lastNameBySource\nWHERE date_of_birth=? AND date_of_death=? AND gender=?) < 1"
                },
                {
                    "name": "BioDemCreateNew",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO prs_biodem (date_of_birth,date_of_death,gender,source_id,person_id,last_changed) VALUES(?,?,?,?,?,NOW())"
                },
                {
                    "name": "IdentifierNewDetection",
                    "class": "SQLQuery",
                    "rule": "SELECT ? AS identifier_type_id,? AS identifier,? AS sourceId,? AS personId\n\tFROM DUAL\n\tWHERE LENGTH(TRIM(?)) > 0 AND (SELECT COUNT(*) FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0) < 1"
                },
                {
                    "name": "IdentifierCreateNew",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO pro_identifiers (identifier_type_id,identifier,source_id,person_id,merge_date,identifier_status_id) VALUES(?,?,?,?,NOW(),(SELECT identifier_status_id FROM  pro_identifier_statuses WHERE name='Active'))"
                },
                {
                    "name": "EndLoop_Filler",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 FROM DUAL"
                },
                {
                    "name": "NoUniqueIdentifierCheck",
                    "class": "SQLQuery",
                    "rule": "SELECT \n? AS PrimaryIdentifierType,\n? AS PrimaryIdentifier,\n? AS SecondaryIdentifierType,\n? AS SecondaryIdentifier,\n? AS BirthDate,\n? AS DeathDate,\n? AS Gender,\n? AS Prefix,\n? AS FirstName,\n? AS MiddleName,\n? AS LastName,\n? AS Suffix,\n? AS SourceId\nFROM DUAL\nWHERE\n(SELECT COUNT(*) FROM\n(\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n\tUNION\n\tSELECT person_id FROM pro_identifiers WHERE identifier_type_id=? AND identifier=? AND LENGTH(TRIM(?)) > 0 AND identifier_status_id = (SELECT identifier_status_id FROM pro_identifier_statuses WHERE name='Active')\n) AS foundUniquePerson) !=1"
                }
            ]     
        },
        { 
            "name": "Snippets",
            "rules": [
                {
                    "name": "IdentityMergeChainDualIdentifiers",
                    "class": "Snippet"
                }
            ]      
        },
        { 
            "name": "AndysRuleSet",
            "rules": [
                {
                    "name": "Create_Table",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE andy \n(\nid INT,\ndata VARCHAR(100)\n);"
                },
                {
                    "name": "Create_Table_2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE andy2\n(\nid INT,\ndata VARCHAR(100),\ndata2 VARCHAR(100)\n);"
                },
                {
                    "name": "Populate",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES ('1', 'Andy1');"
                },
                {
                    "name": "Populate2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES ('2', 'Andy2');"
                },
                {
                    "name": "Populate4",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy2 VALUES (?,?,CONCAT(?,?));"
                },
                {
                    "name": "SELECT_FROM_DUAL",
                    "class": "SQLQuery",
                    "rule": "Select \"3\", \"Andy4\" FROM DUAL"
                },
                {
                    "name": "Populate3",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?,?);"
                },
                {
                    "name": "loop",
                    "class": "SQLQuery",
                    "rule": "SELECT id, data FROM andy"
                }
            ]      
        },
        { 
            "name": "AndysSecondRuleSet",
            "rules": [
                {
                    "name": "DROP_TABLE",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS cool"
                },
                {
                    "name": "DROP_TABLE_cool2",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS cool2"
                },
                {
                    "name": "Create_Table_cool",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE cool ( id INT, data VARCHAR(100));"
                },
                {
                    "name": "Create_Table_cool2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE cool2 (id INT, data VARCHAR(100), id2 INT, data2 VARCHAR(100))"
                },
                {
                    "name": "Populate_cool_1",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool VALUES ('1', 'dataone')"
                },
                {
                    "name": "Populate_cool_2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool VALUES ('2', 'datatwo')"
                },
                {
                    "name": "Select_From_Table_cool",
                    "class": "SQLQuery",
                    "rule": "SELECT id, data FROM cool WHERE id = 1;"
                },
                {
                    "name": "Select_From_Table_cool_2",
                    "class": "SQLQuery",
                    "rule": "SELECT id, data FROM cool WHERE id = 2"
                },
                {
                    "name": "Insert_Into_Cool2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool2 (id, data, id2, data2) VALUES (?,?,?,?)"
                }
            ]       
        },
        { 
            "name": "WaynesFirstRuleSet",
            "rules": [
                {
                    "name": "Create_Table",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE cool\n(\nid int, data VARCHAR(100)\n);"
                },
                {
                    "name": "Populate_Table",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool\nVALUES\n(1, dataone);"
                },
                {
                    "name": "Populate_Table_2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO cool\nVALUES\n(1, dataone);"
                }
            ]      
        },
        { 
            "name": "PrependJPJ",
            "rules": [
                {
                    "name": "Rule1",
                    "class": "SQLQuery",
                    "rule": "SELECT 1 FROM DUAL"
                },
                {
                    "name": "Rule2",
                    "class": "SQLQuery",
                    "rule": "SELECT \"Andy\" FROM DUAL"
                },
                {
                    "name": "Rule3",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES(?,?)"
                }
            ]      
        },
        { 
            "name": "WaynesDemofilecabinet",
            "rules": [
                {
                    "name": "Create_Table_1",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE demo\n(\nfirst_name VARCHAR(25),\nlast_name VARCHAR(25),\ncity VARCHAR(20),\nstate VARCHAR(2),\nbirth DATE NOT NULL\n);"
                },
                {
                    "name": "Populate_value_1",
                    "class": "SQLQuery",
                    "rule": "SELECT \"Randy\", \"Smith\", \"Tampa\", \"FL\", \"2012-01-18\" FROM DUAL"
                },
                {
                    "name": "Insert_values_1",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO demo\nVALUES (\n?, ?, ?, ?, ?\n);"
                },
                {
                    "name": "Drop_Table",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS demo;"
                },
                {
                    "name": "Update_Table",
                    "class": "SQLQuery",
                    "rule": "UPDATE demo\nSET\ndate = \"2012-01-23\"\nWHERE date = \"2012-01-18\";"
                }
            ]     
        },
        { 
            "name": "Drink_InfoExercise1set",
            "rules": [
                {
                    "name": "drop_output_drinks_table",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS output_drinks;"
                },
                {
                    "name": "create_output_drinks_table",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE output_drinks\n(\nname VARCHAR(25),\ncalcost VARCHAR(5)\n);"
                },
                {
                    "name": "query_results",
                    "class": "SQLQuery",
                    "rule": "SELECT drink_name, ROUND(calories/cost, 2) AS calcost FROM drink_info"
                },
                {
                    "name": "output_to_output_drinks",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO output_drinks\nVALUES (\n?, ?\n);"
                }
            ]     
        },
        {   
            "name": "Drink_InfoExercise2set",
            "rules": [
                {
                    "name": "drop_table_output_drinks2",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS output_drinks2;"
                },
                {
                    "name": "create_table_output_drinks2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE output_drinks2\n(\ndrink_name VARCHAR(25),\ncal_carbs VARCHAR(20)\n);"
                },
                {
                    "name": "query_drink_info",
                    "class": "SQLQuery",
                    "rule": "SELECT drink_name, ROUND(calories/carbs, 2) AS cal_carbs FROM drink_info;"
                },
                {
                    "name": "output_to_output_drinks2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO output_drinks2\nVALUES (\n?, ?\n);"
                }                
            ]   
        },
        {   
            "name": "AndysLoop",
            "rules": [
                {
                    "name": "Drop_Tables_Created",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS loop1, loop2"
                },
                {
                    "name": "Create_Loop_Table_1",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE loop1 (id INT, dataone VARCHAR(20), datatwo VARCHAR(20))"
                },
                {
                    "name": "Create_Loop_Table_2",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE loop2 (id INT, dataone VARCHAR(20), datatwo VARCHAR(20))"
                },
                {
                    "name": "Populate_Loop_Table_1",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO loop1 VALUES (1,'a','b'),(2,'c','d'),(3,'e','f'),(4,'g','h'),(5,'i','j'),(6,'k','l')"
                },
                {
                    "name": "Select_where_id_lt_4",
                    "class": "SQLQuery",
                    "rule": "SELECT id, dataone, datatwo FROM loop1 where id < 4"
                },
                {
                    "name": "Populate_Loop_Table_2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO loop2 VALUES (?,?,?)"
                }
            ]      
        },
        {   
            "name": "Drink_infoexerciseset3",
            "rules": [
                {
                    "name": "DROP_TABLE",
                    "class": "SQLQuery",
                    "rule": "DROP TABLE IF EXISTS output_drinks3;"
                },
                {
                    "name": "CREATE_TABLE",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE output_drinks3\n(\ndrink_name VARCHAR(30),\ncarbs_cost VARCHAR(30)\n);"
                },
                {
                    "name": "QUERY_drink_info_TABLE",
                    "class": "SQLQuery",
                    "rule": "SELECT drink_name, ROUND(carbs/cost, 2) AS carbs_cost FROM drink_info;"
                },
                {
                    "name": "OUTPUT_TO_NEW_TABLE",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO output_drinks3\nVALUES (\n?,?\n);"
                }
            ]      
        },
        {   
            "name": "AndysThirdRuleSet",
            "rules": [
                {
                    "name": "Create_Table_andy3",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE IF NOT EXISTS andy3 (column1 VARCHAR(20), column2 VARCHAR(20))"
                },
                {
                    "name": "Create_Table_andy4",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE IF NOT EXISTS andy4 (column1 VARCHAR(20), column2 VARCHAR(20))"
                },
                {
                    "name": "Populate_andy3",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy3 VALUES ('1', 'ONE'), ('2', 'two'), ('3', 'three'), ('4', 'four')"
                },
                {
                    "name": "SELECT_WHERE_column1_lt_4",
                    "class": "SQLQuery",
                    "rule": "SELECT column1, column2 FROM andy3 WHERE column1 < 4;"
                },
                {
                    "name": "Populate_andy4_With_Loop_Data",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy4 VALUES (?,?)"
                }                
            ]     
        },
        {   
            "name": "AndysSnippit",
            "rules": [
                {
                    "name": "AndysRuleChain",
                    "class": "Snippet"
                }
            ]    
        },
        {   
            "name": "GEMSLiteHourly",
            "rules": [
                {
                    "name": "GEMS_Recent_Active_Pop",
                    "class": "SQLQuery",
                    "rule": "select distinct 3 AS EMPL_ID_IDENTIFIER_TYPE,p.emplid,\n  CASE\n    WHEN substr(n.national_id, 1, 3)  IN ('949') THEN 13\n    ELSE 1\n  END AS SSN_IDENTIFIER_TYPE\n  , trim(n.national_id) as ssn\n  , to_char(p.birthdate,'YYYY-MM-DD') AS BIRTHDATE\n  , to_char(p.dt_of_death,'YYYY-MM-DD') AS DEATHDATE\n  , pde.sex\n  , CASE WHEN TRIM(na.name_title) IS NULL OR na.name_title IS NULL \n    THEN substr(trim(na.name_prefix),1,10)\n    ELSE substr(trim(na.name_title),1,10)\n    END as name_prefix \n  , substr(trim(na.first_name),1,100) as first_name\n  , substr(trim(na.middle_name),1,100) as middle_name\n  , substr(trim(na.last_name),1,100) as last_name\n  , substr(trim(na.name_suffix),1,10) as name_suffix\n  , 12 AS gems_source_id\n  from ps_person p\n  join ps_names na on na.emplid = p.emplid\n  left outer join (select pde1.emplid, pde1.lastupddttm, pde1.sex from ps_pers_data_effdt pde1 \n         where pde1.effdt = (select max(pde2.effdt) from ps_pers_data_effdt pde2 where pde2.emplid = pde1.emplid and pde2.effdt <= sysdate)\n       ) pde on pde.emplid = p.emplid\n  left outer join ps_pers_nid n on n.emplid = p.emplid and n.country = 'USA' and n.national_id_type = 'PR'\n  where SUBSTR(p.EMPLID,1,5) = '00000'  \n  AND REGEXP_LIKE(p.emplid, '^[[:digit:]]{11}$') \n  AND na.name_type = 'PRI'\n  AND na.effdt = (select max(na2.effdt) from ps_names na2 where na2.emplid = na.emplid and na2.name_type = na.name_type and na2.effdt <= sysdate)\n  AND TRIM(na.last_name) IS NOT NULL\n  AND ( p.birthdate IS NOT NULL OR TRIM(n.national_id) IS NOT NULL )\n and ((p.last_child_upddtm > (sysdate - 45) or na.lastupddttm > (sysdate - 45) or pde.lastupddttm > (sysdate - 45) or n.lastupddttm > (sysdate - 45))\n      or p.emplid in ('00000064435'))\n  ORDER BY p.emplid desc"
                },
                {
                    "name": "CIMS_PR_Identity_Merge",
                    "class": "SQLQuery",
                    "rule": "CALL cims_pr.idr_identity_merge(?,?,?,?,?,?,?,?,?,?,?,?,?)"
                },
                {
                    "name": "InsertConflicts",
                    "class": "SQLQuery",
                    "rule": "insert ignore into ctx_identifier_conflicts (\n   identifier_type_id,\n   identifier,\n   source_id,\n   current_identity_id,\n   conflicting_identity_id\n) select '42' as id_type_id, \n\t\t\t'DOB+LN+FN dup' as identifier, \n\t\t\tb1.source_id,\n\t\t\tb1.identity_id,\n\t\t\tb2.identity_id\nfrom idr_biodem b1\njoin idr_names na1 on na1.identity_id = b1.identity_id \njoin idr_identifiers e1 on e1.identity_id = b1.identity_id and e1.identifier_type_id not in ( 2, 4, 1, 13, 10, 11, 42 ) and e1.status = 'Active'\nleft outer join idr_identifiers u1 on u1.identity_id = b1.identity_id and u1.identifier_type_id = 2 and u1.status = 'Active'\nleft outer join ctx_identifier_conflicts ic on ic.current_identity_id = b1.identity_id and ic.identifier = 'DOB+LN+FN dup'\nleft outer join idr_identifiers ssn1 on ssn1.identity_id = b1.identity_id and ssn1.identifier_type_id = 1 and ssn1.status = 'Active'\njoin idr_biodem b2 on b2.date_of_birth = b1.date_of_birth and b2.identity_id <> b1.identity_id\njoin idr_names na2 on na2.identity_id = b2.identity_id and na2.lastname = na1.lastname and na2.firstname = na1.firstname\nleft outer join idr_identifiers ssn2 on ssn2.identity_id = b2.identity_id and ssn2.identifier_type_id = 1 and ssn2.status = 'Active'\nwhere (ssn1.identifier IS NULL or ssn2.identifier IS NULL)\nand u1.identity_id IS NULL\nand ic.current_identity_id IS NULL\nand na1.change_id = (select max(naX.change_id) from idr_names naX where naX.identity_id = na1.identity_id and naX.source_id = na1.source_id)\nand na2.change_id = (select max(naY.change_id) from idr_names naY where naY.identity_id = na2.identity_id and naY.source_id = na2.source_id)\ngroup by '42', \n\t\t\t'DOB+LN+FN dup', \n\t\t\tb1.source_id, \n\t\t\tb1.identity_id,\n\t\t\tb2.identity_id\nUNION\nselect '42' as id_type_id, \n\t\t\t'Multiple active SSNs' as identifier, \n\t\t\tssn1.source_id as source_id1,\n\t\t\tssn1.identity_id as ident1,\n\t\t\tssn2.identity_id as ident2\t\nfrom idr_identifiers ssn1\njoin idr_identifiers ssn2 on ssn2.identity_id = ssn1.identity_id \n\t\t\tand ssn2.identifier_type_id = 1\n\t\t\tand ssn2.status = 'Active'\n\t\t\tand ssn2.identifier <> ssn1.identifier\nleft outer join ctx_identifier_conflicts ic on ic.current_identity_id = ssn1.identity_id \n\t\t\tand ic.identifier = 'Multiple active SSNs'\nwhere ssn1.identifier_type_id = 1\nand ssn1.status = 'Active'\nand ic.current_identity_id IS NULL\ngroup by '42', \n\t\t\t'Multiple active SSNs', \n\t\t\tssn1.source_id,\n\t\t\tssn1.identity_id,\n\t\t\tssn2.identity_id\nUNION\nselect '42' as id_type_id, \n\t\t\t'Multiple active EmplIDs' as identifier, \n\t\t\te1.source_id as source_id1,\n\t\t\te1.identity_id as ident1,\n\t\t\te2.identity_id as ident2\nfrom idr_identifiers e1\njoin idr_identifiers e2 on e2.identity_id = e1.identity_id \n\t\t\tand e2.identifier_type_id = e1.identifier_type_id\n\t\t\tand e2.status = e1.status\n\t\t\tand e2.identifier <> e1.identifier\nleft outer join ctx_identifier_conflicts ic on ic.current_identity_id = e1.identity_id \n\t\t\tand ic.identifier = 'Multiple active EmplIDs'\nwhere e1.identifier_type_id = 3\nand e1.status = 'Active'\nand ic.current_identity_id IS NULL\ngroup by '42', \n\t\t\t'Multiple active EmplIDs', \n\t\t\te1.source_id,\n\t\t\te1.identity_id,\n\t\t\te2.identity_id"
                },
                {
                    "name": "ImportIdentityToBaggageClaimGEMS",
                    "class": "Snippet"
                },
                {
                    "name": "Reconcile",
                    "class": "DefinedService"
                },
                {
                    "name": "PrcPersonMerge",
                    "class": "NamedQuery"
                }
            ]    
        },
        {   
            "name": "AndysSnippit2",
            "rules": [
                {
                    "name": "SimpleSelect",
                    "class": "SQLQuery",
                    "rule": "SELECT * FROM andy"
                },
                {
                    "name": "AndysSnippit2",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?, ?)"
                },
                {
                    "name": "AndysSnippit2",
                    "class": "Snippet"
                }
            ]     
        },
        {   
            "name": "AndysSnippit3",
            "rules": [
                {
                    "name": "AndysSnippit3_Select",
                    "class": "SQLQuery",
                    "rule": "SELECT * FROM andy"
                },
                {
                    "name": "AndysSnippit3",
                    "class": "Snippet"
                },
                {
                    "name": "InsertIntoTable",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?, ?)"
                }
            ]    
        },
        {   
            "name": "AndysSnippit4",
            "rules": [
                {
                    "name": "AndysSnippitInput",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy\nVALUES (?,?)"
                },
                {
                    "name": "AndysSnippitOutput",
                    "class": "SQLQuery",
                    "rule": "SELECT *\nFROM andy"
                },
                {
                    "name": "AndysSnippit4",
                    "class": "Snippet"
                },
                {
                    "name": "Select",
                    "class": "SQLQuery",
                    "rule": "SELECT *\nFROM andy"
                },
                {
                    "name": "Insert",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO andy VALUES (?, ?)"
                }
            ]     
        },
        {   
            "name": "ConvertNetidToMail",
            "rules": [
                {
                    "name": "SELECT_jabarthe",
                    "class": "SQLQuery",
                    "rule": "SELECT 'netid', 'mail', 'json', 'jabarthe'\nFROM DUAL"
                },
                {
                    "name": "WsConvertNetidToMail",
                    "class": "DefinedService",
                    "method": "GET",
                    "authType": "CAS",
                    "parse": "JSON",
                    "url": "https://netid.usf.edu/nams/ws_convert",
                    "user": "casuser",
                    "password": "caspassword"
                },
                {
                    "name": "INSERT_jabarthe",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO ConvertNetidToMail/nVALUES (?, ?, ?)"
                }                
            ]   
        },
        {   
            "name": "PR-Create-Stg_VIP",
            "rules": [
                {
                    "name": "SELECT_jabarthe",
                    "class": "SQLQuery",
                    "rule": "CREATE TABLE IF NOT EXISTS staging.stg_vip ( \n  vipid integer(11) NULL COMMENT 'Directly from NAMS VIP table',\n  vip_created_dt timestamp NULL COMMENT 'From NAMS VIP table',\n  vrs_status varchar(1) NULL COMMENT 'From NAMS VIP_RES_SET table',\n  raw_ssn integer(11) NULL COMMENT 'Directly from NAMS NAMES table',\n  id_ssn varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  biodem_dob date NULL COMMENT 'From NAMS VIP table for matching idr_biodem birthdate',\n  biodem_dod date NULL DEFAULT NULL COMMENT 'Not in NAMS',\n  biodem_gender varchar(1) NULL DEFAULT NULL COMMENT 'Not in NAMS',\n  raw_lname varchar(256) NULL COMMENT 'Directly from NAMS VIP table',\n  names_last varchar(100) NULL COMMENT 'For maching on idr_names',\n  raw_fname varchar(256) NULL COMMENT 'Directly from NAMS VIP table',\n  names_first varchar(100) NULL COMMENT 'For maching on idr_names',\n  raw_mname varchar(256) NULL COMMENT 'Directly from NAMS VIP table',\n  names_middle varchar(100) NULL COMMENT 'For maching on idr_names',\n  names_prefix varchar(10) NULL DEFAULT NULL COMMENT 'Not in NAMS',\n  raw_gen varchar(4) NULL COMMENT 'Directly from NAMS NAMES table',\n  names_suffix varchar(10) NULL COMMENT 'For maching on idr_names',\n  confid_ind varchar(1) NULL DEFAULT NULL COMMENT 'Copy from NAMS NAMES since not in VIP',\n  ethn_code varchar(2) NULL COMMENT 'Not in NAMS for VIPs',\n  citz_code varchar(2) NULL COMMENT 'Not in NAMS for VIPs',\n  raw_pidm integer(11) NULL COMMENT 'Directly from NAMS OASIS table',\n  id_pidm varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  raw_usfid varchar(9) NULL COMMENT 'Directly from NAMS OASIS table',\n  id_usfid varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  raw_emplid integer(11) NULL COMMENT 'Directly from NAMS GEMS table',\n  id_emplid varchar(255) NULL COMMENT 'For matching idr_identifiers',\n  role_n_name varchar(50) NULL COMMENT 'Directly from NAMS NAMES and ROLES tables',\n  activity_date timestamp NOT NULL DEFAULT now() COMMENT 'When inserted',\n  comments254 varchar(255) NULL DEFAULT NULL COMMENT 'Placeholder if later need to pickup more columns from NAMS',\n  INDEX idx_vipid ( vipid ),\n  INDEX idx_id_ssn ( id_ssn ),\n  INDEX idx_id_pidm ( id_pidm ),\n  INDEX idx_id_usfid ( id_usfid ),\n  INDEX idx_id_emplid ( id_emplid )\n)"
                },
                {
                    "name": "PR-Trunc-Stg_VIP",
                    "class": "SQLQuery",
                    "rule": "TRUNCATE TABLE staging.stg_vip"
                },
                {
                    "name": "VIP-Get-Idents",
                    "class": "SQLQuery",
                    "rule": "SELECT DISTINCT\n\tv.vipid \n\t, v.created_dt\n\t, vrs.status\n\t, na.ssn \n  , CASE WHEN na.ssn > 999999 and na.ssn < 900000000 THEN lpad(na.ssn, 9, '0') ELSE NULL END \n\t, v.dob\n\t, v.lname \n  , CASE WHEN length( v.lname ) > 0 THEN TRIM(substr( v.lname, 1, 100 )) ELSE NULL END\n\t, v.fname \n  , CASE WHEN length( v.fname ) > 0 THEN TRIM(substr( v.fname, 1, 100 )) ELSE NULL END\n\t, v.mname \n  , CASE WHEN length( v.mname ) > 0 THEN TRIM(substr( v.mname, 1, 100 )) ELSE NULL END\n\t, na.gen \n  , CASE WHEN length( na.gen ) > 0 THEN TRIM(SUBSTR( na.gen, 1, 10 )) ELSE NULL END\n\t, CASE WHEN na.privacy = 255 THEN 'Y' ELSE 'N' END \n\t, o.pidm \n  , CASE WHEN o.pidm > 0 THEN o.pidm ELSE NULL END \n\t, o.usfid \n  , CASE WHEN length(o.usfid)=9 and substr(o.usfid,1,1)='U' THEN o.usfid ELSE NULL END\n\t, g.emplid \n  , CASE WHEN g.emplid > 0 and g.emplid < 1000000 THEN lpad(g.emplid, 11, '0') ELSE NULL END\n\t, concat(concat(na.role,'-'),r.name)\nFROM vip v\nLEFT OUTER JOIN vip_res_set vrs on vrs.vipid = v.vipid\nLEFT OUTER JOIN names na on na.badge = v.vipid\nLEFT OUTER JOIN vip_resource vr on vr.rid = vrs.rid \nLEFT OUTER JOIN oasis o on o.badge = na.badge\nLEFT OUTER JOIN gems g on g.badge = na.badge\nLEFT OUTER JOIN roles r on r.code = na.role\nWHERE ( vr.label = 'USFID'\nAND vrs.status = 'P' \n) OR v.vipid in ( 1798583, 1011799, 1319044, 1470331, 1662969 )\norder by v.created_dt"
                },
                {
                    "name": "PR-Insert-Stg_VIP",
                    "class": "SQLQuery",
                    "rule": "INSERT INTO staging.stg_vip (\n  vipid,\n  vip_created_dt,\n  vrs_status,\n  raw_ssn,\n  id_ssn,\n  biodem_dob,\n  raw_lname,\n  names_last,\n  raw_fname,\n  names_first,\n  raw_mname,\n  names_middle,\n  raw_gen,\n  names_suffix,\n  confid_ind,\n  raw_pidm,\n  id_pidm,\n  raw_usfid,\n  id_usfid,\n  raw_emplid,\n  id_emplid,\n  role_n_name\n) VALUES (\n?, ?, ?, ?, ?, \n?, ?, ?, ?, ?, \n?, ?, ?, ?, ?, \n?, ?, ?, ?, ?, \n?, ? )"
                },
                {
                    "name": "PR-Inactivate-VIPID-SSN",
                    "class": "SQLQuery",
                    "rule": "SELECT ssn.source_id, ssn.identifier, ssn.identifier_type_id, 0\nFROM pro_identifiers vipid\nJOIN pro_identifiers ssn on ssn.person_id = vipid.person_id and ssn.identifier_type_id = 1 /*SSN*/ and \nssn.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nLEFT OUTER JOIN staging.stg_vip sv on sv.vipid = vipid.identifier and sv.id_ssn = ssn.identifier\nWHERE vipid.identifier_type_id = 18\nAND vipid.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nAND ssn.source_id = vipid.source_id\nAND sv.vipid IS NULL \nAND 0 < (select count(*) from staging.stg_vip)"
                },
                {
                    "name": "ProIdentifierStatusSet",
                    "class": "NamedQuery",
                    "rule": ""
                },
                {
                    "name": "PR-Inactivate-VIPID-HRPRNs",
                    "class": "SQLQuery",
                    "rule": "SELECT hrprn.source_id, hrprn.identifier, hrprn.identifier_type_id, 0\nFROM pro_identifiers vipid\nJOIN pro_identifiers hrprn on hrprn.person_id = vipid.person_id and hrprn.identifier_type_id = 13 /*hrprn*/ and \nhrprn.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nLEFT OUTER JOIN staging.stg_vip sv on sv.vipid = vipid.identifier and sv.id_ssn = hrprn.identifier\nWHERE vipid.identifier_type_id = 18\nAND vipid.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nAND hrprn.source_id = vipid.source_id\nAND sv.vipid IS NULL \nAND 0 < (select count(*) from staging.stg_vip)"
                },
                {
                    "name": "PR-Inactivate-VIPIDs",
                    "class": "SQLQuery",
                    "rule": "SELECT vipid.source_id, vipid.identifier, vipid.identifier_type_id, 0\nFROM pro_identifiers vipid\nLEFT OUTER JOIN staging.stg_vip sv on sv.vipid = vipid.identifier\nWHERE vipid.identifier_type_id = 18\nAND vipid.identifier_status_id=(\nSELECT identifier_status_id \nFROM pro_identifier_statuses \nWHERE `name`='Active'\n)\nAND sv.vipid IS NULL \nAND 0 < (select count(*) from staging.stg_vip)"
                },
                {
                    "name": "PR-IdentMergeofVIPs",
                    "class": "SQLQuery",
                    "rule": "TRUNCATE TABLE staging.stg_vip"
                }
                
                
                
                
27	9	PR-IdentMergeofVIPs		1	SELECT DISTINCT 18 as vipid_identifier_type\n       , sv.vipid\n       , CASE WHEN substr(sv.id_ssn, 1, 3) IN ('949') THEN 13 ELSE 1 END as ssn_identifier_type\n       , sv.id_ssn\n       , sv.biodem_dob\n       , sv.biodem_dod\n       , sv.biodem_gender\n       , sv.names_prefix\n       , sv.names_first\n       , sv.names_middle\n       , sv.names_last\n       , sv.names_suffix\n       , 17 as vip_source_id\nFROM staging.stg_vip sv\nWHERE sv.vipid IS NOT NULL\nAND sv.names_first IS NOT NULL\nAND sv.names_last IS NOT NULL\nAND ( sv.biodem_dob IS NOT NULL or sv.id_ssn IS NOT NULL )\nORDER BY sv.vipid DESC	
27	10	CIMS_PR Identity Merge		1	CALL cims_pr.idr_identity_merge(?,?,?,?,?,?,?,?,?,?,?,?,?)	
27	11	PR-AddVIPConflicts		1	insert ignore into ctx_identifier_conflicts (
   identifier_type_id,
   identifier,
   source_id,
   current_identity_id,
   conflicting_identity_id
) select '42', 
      concat(sv.id_usfid, ' USFID only in VIP'),
      min(id.source_id),
      id.identity_id,
      id.identity_id
from idr_identifiers id
join staging.stg_vip sv on sv.vipid = id.identifier
left outer join idr_identifiers usfid on usfid.identity_id = id.identity_id and usfid.identifier_type_id = 2 /*USFID*/ and usfid.status = 'Active'
left outer join idr_identifiers usfid2 on usfid2.identifier = sv.id_usfid and usfid2.identifier_type_id = 2 /*USFID*/ and usfid2.status = 'Active'
where id.identifier_type_id = 18 /* VIPID */
and id.status = 'Active'
and usfid.identifier IS NULL
and sv.id_usfid IS NOT NULL
and usfid2.identifier IS NOT NULL
and not exists (select 'alreadythere' from ctx_identifier_conflicts ic 
      where ic.identifier = concat(sv.id_usfid, ' USFID only in VIP')
      and ic.current_identity_id = id.identity_id 
          )
group by '42', 
      concat(sv.id_usfid, ' USFID only in VIP'),
      id.identity_id,
      id.identity_id
UNION
select '42', 
      concat(sv.id_emplid, ' EmplID only in VIP'), 
      min(id.source_id),
      id.identity_id,
      id.identity_id
from idr_identifiers id
join stg_vip sv on sv.vipid = id.identifier 
left outer join idr_identifiers emplid on emplid.identity_id = id.identity_id and emplid.identifier_type_id = 3 and emplid.status = 'Active'
left outer join idr_identifiers emplid2 on emplid2.identifier = sv.id_emplid and emplid2.identifier_type_id = 3 and emplid2.status = 'Active'
where id.identifier_type_id = 18 /* VIPID */
and id.status = 'Active'
and sv.id_emplid IS NOT NULL
and emplid2.identifier IS NOT NULL
and (emplid.identifier IS NULL or emplid.identifier <> sv.id_emplid)
and not exists (select 'alreadythere' from ctx_identifier_conflicts ic 
      where ic.identifier = concat(sv.id_emplid, ' EmplID only in VIP')
      and ic.current_identity_id = id.identity_id 
          )
group by '42', 
      concat(sv.id_emplid, ' EmplID only in VIP'), 
      id.identity_id,
      id.identity_id	
27	12	InsertConflicts		1	insert ignore into ctx_identifier_conflicts (
   identifier_type_id,
   identifier,
   source_id,
   current_identity_id,
   conflicting_identity_id
) select '42' as id_type_id, 
			'DOB+LN+FN dup' as identifier, 
			b1.source_id,
			b1.identity_id,
			b2.identity_id
from idr_biodem b1
join idr_names na1 on na1.identity_id = b1.identity_id 
join idr_identifiers e1 on e1.identity_id = b1.identity_id and e1.identifier_type_id not in ( 2, 4, 1, 13, 10, 11, 42 ) and e1.status = 'Active'
left outer join idr_identifiers u1 on u1.identity_id = b1.identity_id and u1.identifier_type_id = 2 and u1.status = 'Active'
left outer join ctx_identifier_conflicts ic on ic.current_identity_id = b1.identity_id and ic.identifier = 'DOB+LN+FN dup'
left outer join idr_identifiers ssn1 on ssn1.identity_id = b1.identity_id and ssn1.identifier_type_id = 1 and ssn1.status = 'Active'
join idr_biodem b2 on b2.date_of_birth = b1.date_of_birth and b2.identity_id <> b1.identity_id
join idr_names na2 on na2.identity_id = b2.identity_id and na2.lastname = na1.lastname and na2.firstname = na1.firstname
left outer join idr_identifiers ssn2 on ssn2.identity_id = b2.identity_id and ssn2.identifier_type_id = 1 and ssn2.status = 'Active'
where (ssn1.identifier IS NULL or ssn2.identifier IS NULL)
and u1.identity_id IS NULL
and ic.current_identity_id IS NULL
and na1.change_id = (select max(naX.change_id) from idr_names naX where naX.identity_id = na1.identity_id and naX.source_id = na1.source_id)
and na2.change_id = (select max(naY.change_id) from idr_names naY where naY.identity_id = na2.identity_id and naY.source_id = na2.source_id)
group by '42', 
			'DOB+LN+FN dup', 
			b1.source_id, 
			b1.identity_id,
			b2.identity_id
UNION
select '42' as id_type_id, 
			'Multiple active SSNs' as identifier, 
			ssn1.source_id as source_id1,
			ssn1.identity_id as ident1,
			ssn2.identity_id as ident2	
from idr_identifiers ssn1
join idr_identifiers ssn2 on ssn2.identity_id = ssn1.identity_id 
			and ssn2.identifier_type_id = 1
			and ssn2.status = 'Active'
			and ssn2.identifier <> ssn1.identifier
left outer join ctx_identifier_conflicts ic on ic.current_identity_id = ssn1.identity_id 
			and ic.identifier = 'Multiple active SSNs'
where ssn1.identifier_type_id = 1
and ssn1.status = 'Active'
and ic.current_identity_id IS NULL
group by '42', 
			'Multiple active SSNs', 
			ssn1.source_id,
			ssn1.identity_id,
			ssn2.identity_id
UNION
select '42' as id_type_id, 
			'Multiple active EmplIDs' as identifier, 
			e1.source_id as source_id1,
			e1.identity_id as ident1,
			e2.identity_id as ident2
from idr_identifiers e1
join idr_identifiers e2 on e2.identity_id = e1.identity_id 
			and e2.identifier_type_id = e1.identifier_type_id
			and e2.status = e1.status
			and e2.identifier <> e1.identifier
left outer join ctx_identifier_conflicts ic on ic.current_identity_id = e1.identity_id 
			and ic.identifier = 'Multiple active EmplIDs'
where e1.identifier_type_id = 3
and e1.status = 'Active'
and ic.current_identity_id IS NULL
group by '42', 
			'Multiple active EmplIDs', 
			e1.source_id,
			e1.identity_id,
			e2.identity_id	
27	13	ImportIdentityToBaggageClaimVIP Snippit		1	DEFINEDSERVICE:ImportIdentityToBaggageClaimVIP	
                
            ]     
        },
        {   
            "name": "OASISLiteHourlyModified",
            "rules": [
                
            ]   
        },
        {   
            "name": "OASISLiteHourly1_5",
            "rules": [
                
            ]    
        },
        {   
            "name": "ToBeDeleted",
            "rules": [
                
            ]     
        },
        {   
            "name": "HSCDW_Import2x",
            "rules": [
                
            ]     
        },
        {   
            "name": "AddConflicts2x",
            "rules": [
                
            ]   
        },
        {   
            "name": "OASIS_Import2x",
            "rules": [
                
            ]   
        },
        {   
            "name": "OasisImportSourceandCurrentTimestamp",
            "rules": [
                
            ]   
        },
        {   
            "name": "Oasisp-create2x",
            "rules": [
                
            ]     
        },
        {   
            "name": "PeopleAdminBCToGEMS_2x",
            "rules": [
                
            ]   
        }
    ]
}

	at grails.converters.JSON.parse(JSON.java:281)
	... 9 more
